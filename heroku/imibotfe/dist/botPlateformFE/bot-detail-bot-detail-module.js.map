{"version":3,"sources":["webpack:///./src/app/core/bot-detail/bot-detail-header/bot-detail-header.component.html","webpack:///./src/app/core/bot-detail/bot-detail-header/bot-detail-header.component.scss","webpack:///./src/app/core/bot-detail/bot-detail-header/bot-detail-header.component.ts","webpack:///./src/app/core/bot-detail/bot-detail-wrapper.component.html","webpack:///./src/app/core/bot-detail/bot-detail-wrapper.component.scss","webpack:///./src/app/core/bot-detail/bot-detail-wrapper.component.ts","webpack:///./src/app/core/bot-detail/bot-detail.module.ts","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-detail-model.component.html","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-detail-model.component.scss","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-detail-model.component.ts","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-message/session-message.component.html","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-message/session-message.component.scss","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-message/session-message.component.ts","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-tabs-details/session-tabs-details.component.html","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-tabs-details/session-tabs-details.component.scss","webpack:///./src/app/core/bot-detail/bot-sessions/session-detail-model/session-tabs-details/session-tabs-details.component.ts","webpack:///./src/app/core/bot-detail/bot-testing/bot-testing.component.html","webpack:///./src/app/core/bot-detail/bot-testing/bot-testing.component.scss","webpack:///./src/app/core/bot-detail/bot-testing/bot-testing.component.ts","webpack:///./src/app/core/bot-detail/code-based-bot-detail/code-based-bot-detail.component.html","webpack:///./src/app/core/bot-detail/code-based-bot-detail/code-based-bot-detail.component.scss","webpack:///./src/app/core/bot-detail/code-based-bot-detail/code-based-bot-detail.component.ts","webpack:///./src/app/core/bot-detail/consumers/consumer-fullscreen-wrapper/consumer-fullscreen-wrapper.component.html","webpack:///./src/app/core/bot-detail/consumers/consumer-fullscreen-wrapper/consumer-fullscreen-wrapper.component.scss","webpack:///./src/app/core/bot-detail/consumers/consumer-fullscreen-wrapper/consumer-fullscreen-wrapper.component.ts","webpack:///./src/app/core/bot-detail/consumers/consumers.component.html","webpack:///./src/app/core/bot-detail/consumers/consumers.component.scss","webpack:///./src/app/core/bot-detail/consumers/consumers.component.ts","webpack:///./src/app/core/bot-detail/consumers/limit-object-arrays-string.pipe.ts","webpack:///./src/app/core/bot-detail/pipeline-based-bot-detail/pipeline-based-bot-detail.component.html","webpack:///./src/app/core/bot-detail/pipeline-based-bot-detail/pipeline-based-bot-detail.component.scss","webpack:///./src/app/core/bot-detail/pipeline-based-bot-detail/pipeline-based-bot-detail.component.ts","webpack:///./src/app/core/bot-detail/session/session.component.html","webpack:///./src/app/core/bot-detail/session/session.component.scss","webpack:///./src/app/core/bot-detail/session/session.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/code/code-input/code-input.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/code/code-input/code-input.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/code/code-input/code-input.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-item/integration-item.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-item/integration-item.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-item/integration-item.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/display-name-for-key-integration.pipe.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/integration-option-list.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/integration-option-list.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/integration-option-list.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/requiredIfOneFilledValidator.directive.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/knowledge-base-wrapper/knowledge-base-wrapper.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/knowledge-base-wrapper/knowledge-base-wrapper.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/knowledge-base-wrapper/knowledge-base-wrapper.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/pipeline/pipeline.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/pipeline/pipeline.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/pipeline/pipeline.component.ts","webpack:///./src/app/draggable.directive.ts","webpack:///./src/app/drop-target.directive.ts","webpack:///./src/app/event.service.ts","webpack:///./src/app/pipeline-filter.pipe.ts","webpack:///./src/app/session-data-to-rich-media-serializer.pipe.ts"],"names":[],"mappings":"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","file":"bot-detail-bot-detail-module.js","sourcesContent":["module.exports = \"<!--<p>{{bot|json}}</p>-->\\r\\n\\r\\n<div class=\\\"row-bot-detail-header d-flex align-items-center my-1\\\">\\r\\n  <img style=\\\"width: 32px;height: 32px\\\" class=\\\"rounded-circle\\\" [src]=\\\"bot.logo\\\" alt=\\\"\\\">\\r\\n  <div class=\\\"name\\\">\\r\\n    <div class=\\\"heading mb-0\\\">{{bot.name}}</div>\\r\\n  </div>\\r\\n  <i class=\\\"fa fa-users\\\" *ngIf=\\\"bot && bot.is_manager\\\" style=\\\"font-size: 16px\\\"></i>\\r\\n  <div class=\\\"d-flex align-items-center\\\">\\r\\n    <i class=\\\"fa fa-circle dark-green\\\"></i>\\r\\n    <div>Active(v{{bot.active_version.version}})</div>\\r\\n  </div>\\r\\n  <div class=\\\"text-theme-normal mr-3\\\">\\r\\n    <span class=\\\"text-muted\\\">Created by :</span>{{bot.created_by}} <span class=\\\"text-muted\\\">on</span>{{bot.created_at|date}}\\r\\n  </div>\\r\\n  <div class=\\\"text-theme-normal \\\">\\r\\n    <span class=\\\"text-muted\\\">Last Updated By :</span>{{bot.updated_by}} <span class=\\\"text-muted\\\">on</span>{{bot.updated_at|date}}\\r\\n  </div>\\r\\n  <!--<div class=\\\"active-button px-1 border-right d-flex justify-content-center align-items-center\\\">-->\\r\\n  <!--Active({{bot.active_version_id}})-->\\r\\n  <!--</div>-->\\r\\n  <div class=\\\"ml-auto\\\"></div>\\r\\n  <!--<img *ngFor=\\\"let keys of myObject.keys(bot.integrations)\\\" style=\\\"width: 28px;height: 28px\\\"-->\\r\\n  <!--src=\\\"http://www.pngmart.com/files/3/Weather-PNG-HD.png\\\" alt=\\\"\\\">-->\\r\\n\\r\\n  <!--<img *ngFor=\\\"let integrationsMasterListItem of ((bot.integrations|integrationLogos|async))\\\"-->\\r\\n  <!--[src]=\\\"integrationsMasterListItem?.icon\\\"-->\\r\\n  <!--class=\\\"logo-image\\\"-->\\r\\n  <!--style=\\\"width: 18px;height: 18px\\\"-->\\r\\n  <!--alt=\\\"\\\">-->\\r\\n\\r\\n\\r\\n  <span *myIf=\\\"myETabNames.integration_icons\\\">\\r\\n    <img *ngFor=\\\"let integrationsMasterListItem of ((bot.integrations|integrationLogos:'only_channel'|async))\\\" [src]=\\\"integrationsMasterListItem?.icon\\\"\\r\\n      class=\\\"logo-image \\\" style=\\\"width: 16px;height: 16px\\\" alt=\\\"\\\">\\r\\n    <img id=\\\"id\\\" *ngFor=\\\"let integrationsMasterListItem of ((bot.integrations|integrationLogos:'no_channel'|async))\\\"\\r\\n      [src]=\\\"integrationsMasterListItem?.icon\\\" class=\\\"logo-image \\\" style=\\\"width: 16px;height: 16px\\\" alt=\\\"\\\">\\r\\n  </span>\\r\\n  <span *ngIf=\\\"myObject.keys(bot.integrations).length>4\\\" class=\\\"more\\\">\\r\\n    +{{myObject.keys(bot.integrations).length-4}} More\\r\\n  </span>\\r\\n  <div class=\\\"headerDivider mx-2\\\"></div>\\r\\n  <div class=\\\"d-flex preview-box align-items-center\\\" (click)=\\\"openBot()\\\" *ngIf=\\\"bot.bot_type === 'chatbot'\\\">\\r\\n    <i class=\\\"fa fa-comment-o cursor-pointer\\\" style=\\\"font-size: 15px\\\"></i>\\r\\n    <span class=\\\"action\\\">Preview</span>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex preview-box align-items-center\\\" (click)=\\\"refreshBotDetails()\\\" *myIf=\\\"myETabNames.update_bot_button\\\">\\r\\n    <i class=\\\"fa fa-refresh cursor-pointer\\\" style=\\\"font-size: 15px\\\" [ngClass]=\\\"{'fa-spin':showSpinIcon}\\\"></i>\\r\\n    <span class=\\\"action\\\">Cancel</span>\\r\\n    <!---->\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-theme-primary\\\" (click)=\\\"openActiveBotChangedModal(activeVersionChangedTemplate)\\\" *myIf=\\\"myETabNames.update_bot_button\\\">Update Bot</button>\\r\\n  <div class=\\\"btn-group p-2\\\" dropdown placement=\\\"top left\\\" *myIf=\\\"myETabNames.bot_header_ellipsis\\\">\\r\\n    <i dropdownToggle class=\\\"fa fa-ellipsis-v cursor-pointer p-1\\\" style=\\\"font-size: 20px\\\"></i>\\r\\n    <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n      <li role=\\\"menuitem\\\">\\r\\n        <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"utilityService.copyToClipboard(bot.bot_access_token)\\\">Copy\\r\\n          Access Token</a>\\r\\n      </li>\\r\\n      <li role=\\\"menuitem\\\">\\r\\n        <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"utilityService.copyToClipboard(bot.enterprise_id)\\\">Copy\\r\\n          Enterprise ID</a>\\r\\n      </li>\\r\\n      <!--<li role=\\\"menuitem\\\">-->\\r\\n      <!--<a class=\\\"dropdown-item\\\">Make Bot Active</a>-->\\r\\n      <!--</li>-->\\r\\n      <li role=\\\"menuitem\\\" *myIf=\\\"myETabNames.delete_bot\\\">\\r\\n        <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"openModal(template)\\\">Delete</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<!-- <ng-template #template>\\r\\n  <div class=\\\"modal-header bg-danger\\\">\\r\\n    <h4 class=\\\"modal-title heading pull-left text-white\\\">Delete: <strong>{{bot.name }}</strong> ?</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\" class=\\\"text-white\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body bg-white text-dark\\\">\\r\\n    <p class=\\\"mb-3\\\">Do you confirm the Deletion? This is a permanent and irreversible change</p>\\r\\n    <button class=\\\"btn btn-theme-secondary-outline mr-2\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n    <button class=\\\"btn btn-theme-danger\\\" (click)=\\\"deleteBot()\\\">Delete</button>\\r\\n  </div>\\r\\n</ng-template> -->\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"danger-modal center-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title mb-2\\\" style=\\\"display: flex;justify-content: start;\\\">Delete bot&nbsp;{{ bot.name}}&nbsp;\\r\\n        ?</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body pt-0\\\">\\r\\n      <form #form=\\\"ngForm\\\">\\r\\n        <div class=\\\"text-center my-1\\\">\\r\\n          <p class=\\\"mb-3\\\">Do you confirm the Deletion? This is a permanent and irreversible change</p>\\r\\n\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-theme-secondary-outline mr-2\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n        <button class=\\\" btn btn-theme-danger\\\" (click)=\\\"deleteBot()\\\">Delete</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #activeVersionChangedTemplate>\\r\\n  <div class=\\\"danger-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title mb-2\\\" style=\\\"display: flex;justify-content: start;\\\">Active version changed</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body pt-0\\\">\\r\\n      <form #form=\\\"ngForm\\\">\\r\\n        <div class=\\\"text-center my-1\\\">\\r\\n          <p class=\\\"mb-3\\\">If you update the bot your currently selected version will be the new Active version.</p>\\r\\n\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-theme-secondary-outline mr-2\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n        <button class=\\\" btn btn-theme-danger\\\" (click)=\\\"updateBot()\\\">Update</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\"","module.exports = \".danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n  .danger-modal .modal-header {\\n    color: #474747; }\\n  .danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  .row-bot-detail-header {\\n  height: 40px; }\\n  .row-bot-detail-header *:not(.fa) {\\n    font-size: 11px;\\n    line-height: 1.45;\\n    font-weight: 400;\\n    color: black;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .row-bot-detail-header *:not(.fa) strong {\\n      font-weight: bold;\\n      color: #474747 !important; }\\n  .row-bot-detail-header .fa-undo {\\n    color: #00abd3 !important; }\\n  .row-bot-detail-header * {\\n    margin-right: 5px; }\\n  .row-bot-detail-header .name div {\\n    color: #474747;\\n    font-weight: bold; }\\n  .row-bot-detail-header strong {\\n    color: #4a4a4a !important; }\\n  .row-bot-detail-header .active-button {\\n    height: 24px;\\n    border-radius: 2px;\\n    background-color: #509005;\\n    font-size: 11px;\\n    line-height: 1.45;\\n    font-weight: 300;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    color: white; }\\n  .row-bot-detail-header .fa:not(.fa-circle) {\\n    color: #9b9b9b; }\\n  .row-bot-detail-header .dark-green {\\n    color: #8cd82f; }\\n  .row-bot-detail-header .more {\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #00abd3;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .row-bot-detail-header .headerDivider {\\n    border-left: 1px solid #9e9e9e;\\n    height: 85%; }\\n  .logo-image {\\n  margin-right: 2px;\\n  margin-left: 2px; }\\n  .dropdown-menu {\\n  left: -100px !important; }\\n  .dropdown-menu > li > .dropdown-item {\\n    font-size: 13px; }\\n  .preview-box {\\n  cursor: pointer; }\\n  .preview-box * {\\n    color: #00abd3 !important; }\\n  .preview-box .action {\\n    font-size: 13px; }\\n  .no-channel-integrations:first-child {\\n  border-left: 1px solid #e0e0e0;\\n  padding-left: 4px;\\n  width: 20px !important; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {ServerService} from '../../../server.service';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ConstantsService, ETabNames} from '../../../constants.service';\r\nimport {IHeaderData} from '../../../../interfaces/header-data';\r\nimport {UtilityService} from '../../../utility.service';\r\nimport {BsModalRef, BsModalService} from 'ngx-bootstrap';\r\nimport {ChangeFrameAction, SetCurrentBotDetailsAndResetChatStateIfBotMismatch, ToggleChatWindow} from '../../../chat/ngxs/chat.action';\r\nimport {EChatFrame} from '../../../../interfaces/chat-session-state';\r\nimport {AddNewBotInAllBotList, UpdateBotInfoByIdInBotInBotList} from '../../view-bots/ngxs/view-bot.action';\r\nimport {Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {IEnterpriseProfileInfo} from '../../../../interfaces/enterprise-profile';\r\n\r\n@Component({\r\n  selector: 'app-bot-detail-header',\r\n  templateUrl: './bot-detail-header.component.html',\r\n  styleUrls: ['./bot-detail-header.component.scss']\r\n})\r\nexport class BotDetailHeaderComponent implements OnInit {\r\n\r\n  @Input() bot: IBot;\r\n  myObject = Object;\r\n  myETabNames = ETabNames;\r\n  showSpinIcon = false;\r\n  @Output() refreshBotDetails$ = new EventEmitter();\r\n  modalRef: BsModalRef;\r\n  enterprise_unique_name;\r\n  @Select() loggeduserenterpriseinfo$: Observable<IEnterpriseProfileInfo>;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private router: Router,\r\n    public utilityService: UtilityService,\r\n    private modalService: BsModalService,\r\n    private constantsService: ConstantsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggeduserenterpriseinfo$.subscribe((enterpriseProfileInfo) => {\r\n      this.enterprise_unique_name = enterpriseProfileInfo.enterprise_unique_name;\r\n    });\r\n  }\r\n\r\n  openBot() {\r\n    this.store.dispatch([\r\n      new SetCurrentBotDetailsAndResetChatStateIfBotMismatch({\r\n        bot: {...this.bot, enterprise_unique_name: this.enterprise_unique_name}\r\n      }),\r\n      new ToggleChatWindow({open: true}),\r\n      new ChangeFrameAction({frameEnabled: EChatFrame.WELCOME_BOX})\r\n    ]);\r\n    // this.store.dispatch([\r\n    //   // new SetCurrentBotDetailsAndResetChatStateIfBotMismatch({\r\n    //   //   bot:this.bot\r\n    //   // }),\r\n    //   new ToggleChatWindow({open: true}),\r\n    //   // new ChangeFrameAction({frameEnabled: EChatFrame.WELCOME_BOX})\r\n    // ]).subscribe(()=>{\r\n    //   this.router.navigate(['/core/botdetail/chatbot/',this.bot.id], {\r\n    //     queryParams: {preview: true, bot_unique_name: this.bot.bot_unique_name, enterprise_unique_name: this.enterprise_unique_name}\r\n    //   });\r\n    // })\r\n  }\r\n\r\n  updateBot() {\r\n    try {\r\n      this.modalRef.hide();\r\n    }catch (e) {\r\n      console.log(e);\r\n    }\r\n    this.bot.active_version_id = this.bot.store_selected_version;\r\n    let bot = this.utilityService.performFormValidationBeforeSaving(this.bot);\r\n    if (!bot) return;\r\n\r\n    let url = this.constantsService.updateBotUrl(this.bot.id);\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': this.bot.bot_access_token\r\n    };\r\n    if (this.bot.store_selected_version && this.bot.store_selected_version !== this.bot.active_version_id) {\r\n      if (!confirm('active version has been changed')) return;\r\n      this.bot.active_version_id = this.bot.store_selected_version;\r\n    }\r\n    let body = this.constantsService.updateBotSerializer(this.bot);\r\n    if (!body.logo) {\r\n      body.logo = 'https://imibot-dev.s3.amazonaws.com/default/defaultbotlogo.png';\r\n    }\r\n    this.serverService.makePutReq({url, body, headerData})\r\n      .subscribe((updatedBot: IBot) => {\r\n        this.store.dispatch([\r\n          new UpdateBotInfoByIdInBotInBotList({botId: this.bot.id, data: updatedBot})\r\n        ]);\r\n        this.utilityService.showSuccessToaster('Bot updated');\r\n      });\r\n  }\r\n\r\n  refreshBotDetails() {\r\n    this.showSpinIcon = true;\r\n    setTimeout(() => {\r\n      this.showSpinIcon = false;\r\n    }, 2000);\r\n    this.refreshBotDetails$.emit();\r\n  }\r\n\r\n  deleteBot() {\r\n    this.modalRef.hide();\r\n    let url = this.constantsService.getDeleteBotUrl(this.bot.id);\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': this.bot.bot_access_token\r\n    };\r\n    this.serverService.makeDeleteReq({url, headerData})\r\n      .subscribe((value) => {\r\n        this.serverService.getNSetBotList()\r\n          .subscribe(() => {\r\n            this.router.navigate(['']);\r\n            this.utilityService.showSuccessToaster('Bot deleted');\r\n          });\r\n      });\r\n  }\r\n\r\n  openActiveBotChangedModal(template: TemplateRef<any>) {\r\n    if (this.bot.store_selected_version && this.bot.store_selected_version !== this.bot.active_version_id) {\r\n      // if (!confirm('active version has been changed')) return;\r\n      this.modalRef = this.modalService.show(template, {class: 'center-modal'});\r\n    }else {\r\n      this.updateBot();\r\n    }\r\n  }\r\n\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {class: 'center-modal'});\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n<!--<app-code-based-bot-detail></app-code-based-bot-detail>-->\\r\\n<!--<app-pipeline-based-bot-detail></app-pipeline-based-bot-detail>-->\\r\\n\\r\\n<!-- <input type=\\\"text\\\" [(ngModal)] = \\\"decryptReason\\\"> -->\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ConstantsService} from '../../constants.service';\r\nimport {ServerService} from '../../server.service';\r\nimport {ViewBotStateModel} from '../view-bots/ngxs/view-bot.state';\r\nimport {Observable} from 'rxjs';\r\nimport {IBot} from '../interfaces/IBot';\r\nimport {IHeaderData} from '../../../interfaces/header-data';\r\nimport {UpdateBotInfoByIdInBotInBotList} from '../view-bots/ngxs/view-bot.action';\r\nimport {first} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-bot-detail-wrapper',\r\n  templateUrl: './bot-detail-wrapper.component.html',\r\n  styleUrls: ['./bot-detail-wrapper.component.scss']\r\n})\r\nexport class BotDetailWrapperComponent implements OnInit {\r\n\r\n  // @Select() botlist$: Observable<ViewBotStateModel>;\r\n  constructor(\r\n    private activatedRoute:ActivatedRoute,\r\n    private constantsService:ConstantsService,\r\n    private serverService:ServerService,\r\n    private store:Store,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    window.scrollTo(0, 0);\r\n\r\n    /*\r\n    *THE WHOLE THINGS IS REQUIRED BECAUSE OF CYCLE\r\n    *https://stackoverflow.com/questions/52245779/how-to-avoid-loops-in-ngrx-or-ngxs\r\n    * */\r\n    // let botIdStr = this.activatedRoute.snapshot.firstChild.paramMap.get('id');\r\n    // if(botIdStr){\r\n    //   this.botlist$.pipe(first()).subscribe((viewBotStateModel:ViewBotStateModel)=>{\r\n    //     let bot = viewBotStateModel.allBotList.find(bot=>bot.id === Number(botIdStr));\r\n    //     let url = this.constantsService.getSpecificBotByBotTokenUrl();\r\n    //     let headerData:IHeaderData = {\r\n    //       \"bot-access-token\": bot.bot_access_token\r\n    //     };\r\n    //     this.serverService.makeGetReq({url, headerData})\r\n    //       .subscribe((value:{objects:IBot[]})=>{\r\n    //\r\n    //           let updatedBot = value.objects[0];\r\n    //           this.store.dispatch([\r\n    //             new UpdateBotInfoByIdInBotInBotList({data:updatedBot, botId:updatedBot.id})\r\n    //           ])\r\n    //       });\r\n    //   })\r\n    // }\r\n  }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {BsDropdownModule, ModalModule, TabsModule} from 'ngx-bootstrap';\r\nimport {FormsModule} from '@angular/forms';\r\n// import {DragAndDropModule} from 'angular-draggable-droppable';\r\n// import {NgxsModule} from '@ngxs/store';\r\n// import {NgxsStoragePluginModule} from '@ngxs/storage-plugin';\r\n// import {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\r\n// import {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {Ng2CompleterModule} from 'ng2-completer';\r\nimport {Ng2SmartTableModule} from 'ng2-smart-table';\r\nimport {DragService} from '../../drag.service';\r\nimport {AimService} from '../../aim.service';\r\nimport {SortObjectArrayPipe} from '../../sort-object-array.pipe';\r\nimport {SharedModule} from '../../shared.module';\r\nimport {PipelineBasedBotDetailComponent} from './pipeline-based-bot-detail/pipeline-based-bot-detail.component';\r\nimport {CodeBasedBotDetailComponent} from './code-based-bot-detail/code-based-bot-detail.component';\r\nimport {BotDetailHeaderComponent} from './bot-detail-header/bot-detail-header.component';\r\nimport {BotDetailWrapperComponent} from './bot-detail-wrapper.component';\r\nimport {BotTestingComponent} from './bot-testing/bot-testing.component';\r\nimport {BotSessionsComponent} from './bot-sessions/bot-sessions.component';\r\nimport {SessionDetailModelComponent} from './bot-sessions/session-detail-model/session-detail-model.component';\r\nimport {ConsumersComponent} from './consumers/consumers.component';\r\nimport {SessionMessageComponent} from './bot-sessions/session-detail-model/session-message/session-message.component';\r\nimport {SessionTabsDetailsComponent} from './bot-sessions/session-detail-model/session-tabs-details/session-tabs-details.component';\r\nimport {PipelineFilterPipe} from '../../pipeline-filter.pipe';\r\nimport {SessionComponent} from './session/session.component';\r\nimport {PipelineComponent} from '../buildbot/build-code-based-bot/architecture/pipeline/pipeline.component';\r\nimport {CodeInputComponent} from '../buildbot/build-code-based-bot/architecture/code/code-input/code-input.component';\r\nimport {IntegrationOptionListComponent} from '../buildbot/build-code-based-bot/architecture/integration/integration-option-list/integration-option-list.component';\r\nimport {IntegrationItemComponent} from '../buildbot/build-code-based-bot/architecture/integration/integration-item/integration-item.component';\r\nimport {DraggableDirective} from '../../draggable.directive';\r\nimport {DropTargetDirective} from '../../drop-target.directive';\r\nimport {KnowledgeBaseWrapperComponent} from '../buildbot/build-code-based-bot/architecture/knowledge-base-wrapper/knowledge-base-wrapper.component';\r\nimport { LimitObjectArraysStringPipe } from './consumers/limit-object-arrays-string.pipe';\r\nimport { ConsumerFullscreenWrapperComponent } from './consumers/consumer-fullscreen-wrapper/consumer-fullscreen-wrapper.component';\r\nimport {EBotType} from '../view-bots/view-bots.component';\r\nimport {AuthGaurdService} from '../../auth-gaurd.service';\r\nimport {RequiredIfOneFilledValidator} from '../buildbot/build-code-based-bot/architecture/integration/integration-option-list/requiredIfOneFilledValidator.directive';\r\nimport {DragulaModule} from 'ng2-dragula';\r\nimport {RichMediaModule} from '../../rich-media.module';\r\nimport {SessionDataToRichMediaSerializerPipe} from '../../session-data-to-rich-media-serializer.pipe';\r\nimport {DisplayNameForKeyIntegrationPipe} from '../buildbot/build-code-based-bot/architecture/integration/integration-option-list/display-name-for-key-integration.pipe';\r\n\r\n\r\nconst routes: Route[] = [\r\n  {\r\n    path: '', component: BotDetailWrapperComponent, canActivateChild:[AuthGaurdService], children:\r\n      [\r\n        {path: `${EBotType.chatbot}/:id`, component: CodeBasedBotDetailComponent, data: {bot_type: EBotType.chatbot}},\r\n        {path: `${EBotType.intelligent}/:id`, component: PipelineBasedBotDetailComponent, data: {bot_type: EBotType.intelligent}},\r\n        {path: ':id/consumer', component: ConsumerFullscreenWrapperComponent, data:{isFullscreen:true}},\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SessionDataToRichMediaSerializerPipe,\r\n    CodeBasedBotDetailComponent,\r\n    PipelineBasedBotDetailComponent,\r\n    BotDetailHeaderComponent,\r\n    BotDetailWrapperComponent,\r\n    BotTestingComponent,\r\n    BotSessionsComponent,\r\n    SessionDetailModelComponent,\r\n    ConsumersComponent,\r\n    SessionDetailModelComponent,\r\n    SessionTabsDetailsComponent,\r\n    SessionMessageComponent,\r\n    PipelineComponent,\r\n    PipelineFilterPipe,\r\n    SessionComponent,\r\n    CodeInputComponent,\r\n    IntegrationOptionListComponent,\r\n    IntegrationItemComponent,\r\n    DraggableDirective,\r\n    DropTargetDirective,\r\n    KnowledgeBaseWrapperComponent,\r\n    DisplayNameForKeyIntegrationPipe,\r\n    LimitObjectArraysStringPipe,\r\n    ConsumerFullscreenWrapperComponent,\r\n/*after lazy loading*/\r\n    RequiredIfOneFilledValidator\r\n  ],\r\n  imports: [\r\n    RichMediaModule,\r\n    DragulaModule,\r\n    CommonModule,\r\n    RouterModule.forChild(routes), // RouterModule.forRoot(routes, { useHash: true }), if this is your app.module\r\n    BsDropdownModule.forRoot(),\r\n    TabsModule.forRoot(),\r\n    FormsModule,\r\n    // DragAndDropModule.forRoot(),\r\n    // NgxsModule.forFeature([]),\r\n    SharedModule,\r\n    HttpClientModule,\r\n    Ng2SmartTableModule,\r\n    BsDropdownModule.forRoot(),\r\n    ModalModule.forRoot(),\r\n  ],\r\n  providers: [AimService]\r\n})\r\nexport class BotDetailModule {\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header d-flex  justify-content-between align-items-center\\\">\\r\\n          <!--<p>{{indexOfCurrentRowSelected+''+pageNumberOfCurrentRowSelected}}</p>-->\\r\\n          <div class=\\\"d-flex \\\">\\r\\n            <i class=\\\"fa fa-angle-left pr-2 cursor-pointer\\\"\\r\\n               [ngClass]=\\\"{invisible:indexOfCurrentRowSelected<=0 && pageNumberOfCurrentRowSelected<=1}\\\"\\r\\n               (click)=\\\"selectPrevRow.emit()\\\"></i>\\r\\n            <!-- <i class=\\\"fa fa-angle-right cursor-pointer\\\" [ngClass]=\\\"{invisible:showNextButton}\\\" -->\\r\\n            <i class=\\\"fa fa-angle-right cursor-pointer\\\"\\r\\n               (click)=\\\"selectNextRow.emit()\\\"></i>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex  align-items-center justify-content-center\\\">\\r\\n            <i class=\\\"fa fa-refresh mr-2 cursor-pointer\\\" [ngClass]=\\\"{'fa-spin':showSpinIcon}\\\"  (click)=\\\"loadSessionById(_session.id);\\\"></i>\\r\\n            <div class=\\\"d-flex  flex-column align-items-start align-content-start\\\">\\r\\n              <span class=\\\"secondary\\\">Last updated at</span>\\r\\n              <span class=\\\"primary\\\">{{_session.updated_at|date:'mediumDate'}}</span>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex  flex-column\\\">\\r\\n            <span class=\\\"secondary\\\">Total Messages</span>\\r\\n            <span class=\\\"primary16\\\">{{sessionMessageData?.length}}</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex  flex-column\\\">\\r\\n            <span class=\\\"secondary\\\">Sent to agent</span>\\r\\n            <span class=\\\"primary16\\\">false</span>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\" \\\">\\r\\n            <div class=\\\"d-flex justify-content-center\\\">\\r\\n              <div class=\\\"secondary  font-weight-bold\\\">Room ID:</div>\\r\\n              <div class=\\\"secondary \\\">{{_session.id}}</div>\\r\\n            </div>\\r\\n            <!---->\\r\\n            <div class=\\\"d-flex\\\">\\r\\n              <div class=\\\"secondary font-weight-bold\\\">Consumer ID:</div>\\r\\n              <div class=\\\"secondary\\\">{{_session.consumer_id}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div (click)=\\\"closeModel$.emit()\\\"><i class=\\\"fa fa-times cursor-pointer\\\"></i></div>\\r\\n          <!---->\\r\\n        </div>\\r\\n        <div class=\\\"card-body p-0\\\" style=\\\"height: 80vh\\\">\\r\\n          <div class=\\\"row mx-0 p-0 py-2\\\" style=\\\"height: 100%\\\">\\r\\n\\r\\n            <div class=\\\"col-6 pl-0 pr-0 pb-3 border-right\\\">\\r\\n              <!--search input starts-->\\r\\n              <div class=\\\"container \\\">\\r\\n                <div class=\\\"row py-2 border-bottom\\\">\\r\\n                  <div class=\\\"col-8\\\">\\r\\n                    <div class=\\\"input-group border p-1\\\"\\r\\n                         style=\\\"height: 32px;border-radius: 2px!important;position: relative\\\">\\r\\n                      <input class=\\\"form-control py-2 border-0\\\" [ngModel]=\\\"messageSearchKeyword\\\"\\r\\n                             (ngModelChange)=performSearch($event)\\r\\n                             (keyup.enter)=\\\"goToNextSearchResult(messageSearchKeyword)\\\"\\r\\n                             (keyup.shift.enter)=\\\"goToPreviousSearchResult(messageSearchKeyword)\\\"\\r\\n                             id=\\\"search-session-model\\\" type=\\\"search\\\"\\r\\n                             placeholder=\\\"search\\\">\\r\\n                      <!--<i class=\\\"fa fa-angle-down text-dark\\\"-->\\r\\n                         <!--style=\\\"font-size: 18px;position: absolute; right: 10px;top: 6px; z-index: 10 \\\"></i>-->\\r\\n                      <i class=\\\"fa fa-search\\\"\\r\\n                         style=\\\"font-size: 18px;position: absolute; left: 10px;top: 6px;color: #e0e0e0;z-index: 10\\\"></i>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <!--search input ends-->\\r\\n                <div class=\\\"row m-0 my-2 pr-1 align-items-start align-content-start\\\"\\r\\n                     style=\\\"height: 65vh;overflow-y: scroll;overflow-x: hidden;\\\">\\r\\n                  <div class=\\\"col-12 px-0 border-hover-txn\\\"\\r\\n                       *ngFor=\\\"let txnConversationItems of sessionMessageDataCopy|serializeSessionMessage|filterObjectArray:messageSearchKeyword; let i=index\\\"\\r\\n                       [ngClass]=\\\"{'border-selected-txn':txnConversationItems.transaction_id === transactionIdSelectedInModel,\\r\\n                        'border-unselected-txn':txnConversationItems.transaction_id !== transactionIdSelectedInModel}\\\">\\r\\n                    <app-session-message [txnConversationItems]=\\\"txnConversationItems\\\"\\r\\n                                         (messageClickedEvent$)=\\\"transactionIdChangedInModel($event)\\\"></app-session-message>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"!sessionMessageDataCopy || sessionMessageData.length===0\\\" class=\\\"col-12 align-self-stretch d-flex justify-content-center align-items-center\\\">\\r\\n                    <p class=\\\"text-muted\\\">No Messages to show</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!--</div>-->\\r\\n            <div class=\\\"col-6 d-flex flex-column\\\">\\r\\n              <ul class=\\\"nav nav-tabs my-2 pb-0\\\">\\r\\n                <!--TODO: *ngIf=\\\"bot.child_bots && bot.child_bots.length>0\\\" below-->\\r\\n                <li class=\\\"nav-item px-0\\\" >\\r\\n                  <a class=\\\"nav-link p-0 mr-2\\\" [ngClass]=\\\"{'tab-active':activeTab==='manager_bot'}\\\"\\r\\n                     (click)=\\\"tabClicked('manager_bot')\\\"><strong>TRANSACTION INFO</strong></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link p-0\\\" [ngClass]=\\\"{'tab-active':activeTab==='active_bot'}\\\"\\r\\n                     (click)=\\\"tabClicked('active_bot')\\\" *ngIf=\\\"bot.is_manager\\\"><strong>ACTIVE BOT</strong></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item ml-auto\\\">\\r\\n                  <a class=\\\"nav-link p-0 mr-2\\\" [ngClass]=\\\"{'tab-active':activeTab==='final_df'}\\\"\\r\\n                     (click)=\\\"tabClicked('final_df')\\\"><strong>FINAL DF</strong></a>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                  <a class=\\\"nav-link p-0\\\" [ngClass]=\\\"{'tab-active':activeTab==='datastore'}\\\"\\r\\n                     (click)=\\\"tabClicked('datastore')\\\"><strong>DATASTORE</strong></a>\\r\\n                </li>\\r\\n              </ul>\\r\\n              <!--<div class=\\\"d-flex justify-content-center flex-grow-1 py-2\\\">-->\\r\\n              <!--<pre class=\\\"code-text bg-dark\\\" style=\\\"width: 90%;overflow: scroll; color: white;\\\">-->\\r\\n              <!--{{codeText|json}}-->\\r\\n              <!--</pre>-->\\r\\n              <!--</div>-->\\r\\n              <!--<app-code-editor [text]=\\\"codeText?(codeText|json):''\\\"></app-code-editor>-->\\r\\n              <!--<app-code-editor [text]=\\\"codeText?(codeText|json):''\\\"></app-code-editor>-->\\r\\n              <!--<textarea [value]=\\\"codeText?(codeText|json):''\\\" style=\\\"width: 100%; height: 100%\\\"></textarea>-->\\r\\n              <pre class=\\\"p-2\\\" style=\\\"width: 100%; height: 100%; background-color: #000055; color: white\\\">{{codeText?(codeText|json):''}}</pre>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".card-header {\\n  background-color: #00abd3; }\\n\\n.fa {\\n  font-size: 22px;\\n  color: white; }\\n\\n.fa-refresh, .fa-times {\\n  font-size: 16px; }\\n\\n.primary16 {\\n  height: 16px;\\n  font-family: Helvetica;\\n  font-size: 13px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #ffffff; }\\n\\n.primary {\\n  height: 14px;\\n  font-family: Helvetica;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #ffffff; }\\n\\n.secondary {\\n  font-family: Helvetica;\\n  font-size: 10px;\\n  font-weight: 300;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #ffffff; }\\n\\nspan {\\n  margin: 0; }\\n\\n#search-session-model {\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  padding-left: 30px;\\n  /*todo: this doesn't seem right*/\\n  outline: none; }\\n\\n.nav-link {\\n  border: none; }\\n\\n.nav {\\n  border: none; }\\n\\na {\\n  text-decoration: none !important;\\n  font-size: 10px;\\n  color: black; }\\n\\n.indicate {\\n  height: 34px;\\n  font-family: Helvetica;\\n  font-size: 14px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  text-align: center;\\n  color: #9e9e9e; }\\n\\n.border-hover-txn:hover {\\n  border-left: 4px solid #e0e0e0; }\\n\\n.border-selected-txn {\\n  border-left: 4px solid #00abd3 !important; }\\n\\n.border-unselected-txn {\\n  border-left: 4px solid transparent; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ISessionMessageItem, ISessionMessage, ISessionItem} from '../../../../../interfaces/sessions';\r\nimport {ConstantsService} from '../../../../constants.service';\r\nimport {ServerService} from '../../../../server.service';\r\nimport {IBot} from '../../../interfaces/IBot';\r\nimport {Observable} from 'rxjs';\r\nimport {st} from '@angular/core/src/render3';\r\nimport {element} from 'protractor';\r\nimport {UtilityService} from '../../../../utility.service';\r\nimport { ViewBotStateModel } from '../../../view-bots/ngxs/view-bot.state';\r\nimport { Select } from '@ngxs/store';\r\nimport { IHeaderData } from '../../../../../interfaces/header-data';\r\nimport { IMessageData } from '../../../../../interfaces/chat-session-state';\r\n\r\n@Component({\r\n  selector: 'app-session-detail-model',\r\n  templateUrl: './session-detail-model.component.html',\r\n  styleUrls: ['./session-detail-model.component.scss']\r\n})\r\nexport class SessionDetailModelComponent implements OnInit {\r\n\r\n  @Input() set session(_session) {\r\n    this._session = _session;\r\n    if (_session && _session.id)\r\n      setTimeout(() => {\r\n          this.loadSessionById(_session.id);\r\n        }\r\n      );\r\n  };\r\n\r\n  _session: ISessionItem;\r\n  searchEnterPressedCount = 0;\r\n  @Input() bot: IBot;\r\n  @Input() finalDfState: any;\r\n  @Input() sessionDataStore: any;\r\n  @Output() selectNextRow = new EventEmitter();\r\n  @Output() selectPrevRow = new EventEmitter();\r\n  @Output() closeModel$ = new EventEmitter();\r\n  @Input() showPrevButton: boolean = false;\r\n  @Input() pageNumberOfCurrentRowSelected: number;\r\n  @Input() indexOfCurrentRowSelected: number;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  allBotList: IBot[];\r\n  sessionMessageData$: Observable<ISessionMessage>;\r\n  sessionMessageData: ISessionMessageItem[];\r\n  sessionMessageDataCopy: ISessionMessageItem[];\r\n  transactionIdSelectedInModel: string;\r\n  messageSearchKeyword: string = '';\r\n  activeTab: string = 'manager_bot';  // = 'manager_bot' | 'active_bot'|'final_df'|'datastore';\r\n  codeText;\r\n  totalMessagesCount: number;\r\n  url: string;\r\n  managerPanelData: {\r\n    'generatedDf': {},\r\n    'generatedMsg': Array<any>, /*bot message*/\r\n    'message': { 'text': string }[], /*user message*/\r\n    'messageStore': {}\r\n  };\r\n  activeBotPanelData;\r\n  // finalDFPanelData;\r\n  // dataStorePanelData;\r\n\r\n  constructor(\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService,\r\n    private serverService: ServerService\r\n  ) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.botlist$.subscribe((value) => {\r\n      this.allBotList = value.allBotList;\r\n    });\r\n    // this.loadSessionById(this._session.id);\r\n  }\r\n\r\n  showSpinIcon:boolean = false;\r\n  loadSessionById(id) {\r\n    this.showSpinIcon = true;\r\n    this.url = this.constantsService.getSessionsMessageUrl(id);\r\n    this.sessionMessageData$ = this.serverService.makeGetReq<ISessionMessage>({\r\n      url: this.url,\r\n      headerData: {'bot-access-token': this.bot.bot_access_token}\r\n    });\r\n    this.sessionMessageData$.subscribe((value) => {\r\n      if (!value) return;\r\n      this.totalMessagesCount = value.meta.total_count;\r\n      this.sessionMessageData = value.objects;\r\n      this.sessionMessageDataCopy = [...this.sessionMessageData];\r\n      this.showSpinIcon = false;\r\n    });\r\n    this.tabClicked(this.activeTab);\r\n  }\r\n\r\n\r\n  transactionIdChangedInModel(txnId) {\r\n\r\n\r\n    this.transactionIdSelectedInModel = txnId;\r\n    /*This data will show under Manager Bot*/\r\n    let messageDataForGiveTxnId = this.sessionMessageData.find((message) => {\r\n      return message.transaction_id === txnId;\r\n    });\r\n    let botMessageDataForGiveTxnId = this.sessionMessageData.find((message) => {\r\n      return (message.transaction_id === txnId && message.user_type === \"bot\" ) ;\r\n    });\r\n    // this.sessionMessageDataCopy = [...this.sessionMessageData];\r\n    this.sessionMessageDataCopy = this.sessionMessageData;\r\n    this.managerPanelData = {\r\n      'generatedDf': messageDataForGiveTxnId.generated_df,\r\n      'generatedMsg': messageDataForGiveTxnId.generated_msg, /*bot message*/\r\n      'message': messageDataForGiveTxnId.message, /*user message*/\r\n      'messageStore':botMessageDataForGiveTxnId.message_store\r\n    };;\r\n    let activeBotId = botMessageDataForGiveTxnId.message_store.activeBotId;\r\n    let activeBotRoomId = botMessageDataForGiveTxnId.message_store.activeBotRoomId;\r\n    this.activeBotPanelData = botMessageDataForGiveTxnId.message_store;\r\n\r\n    if(activeBotId){\r\n      let activeBotAccessTokenId = this.allBotList.find(bot => bot.id === activeBotId).bot_access_token;\r\n      let headerData: IHeaderData = {\r\n        \"bot-access-token\": activeBotAccessTokenId\r\n      };\r\n      let surl = this.constantsService.getSessionsByIdUrl(activeBotRoomId);\r\n      this.serverService.makeGetReq({url : surl, headerData})\r\n      .subscribe((newSession : ISessionItem)=>{\r\n        let murl = this.constantsService.getSessionsMessageUrl(newSession.id);\r\n        this.serverService.makeGetReq({url : surl, headerData})\r\n        .subscribe((value : ISessionMessage)=>{\r\n          let activeBotMessage = value.objects.find(message => message.transaction_id === this.transactionIdSelectedInModel);\r\n          this.activeBotPanelData = {\r\n            'generatedDf': activeBotMessage.generated_df,\r\n            'generatedMsg': activeBotMessage.generated_msg, /*bot message*/\r\n            'message': activeBotMessage.message,\r\n          }\r\n        });\r\n      });\r\n    }\r\n    this.tabClicked(this.activeTab);\r\n\r\n  }\r\n\r\n  tabClicked(active: string) {\r\n    this.activeTab = active;\r\n    switch (active) {\r\n      case 'manager_bot': {\r\n        this.codeText = this.managerPanelData;\r\n        break;\r\n      }\r\n      case 'active_bot': {\r\n        this.codeText = this.activeBotPanelData;\r\n        break;\r\n      }\r\n      case 'final_df': {\r\n        this.codeText = this.finalDfState;\r\n        break;\r\n      }\r\n      case 'datastore': {\r\n        this.codeText = this.sessionDataStore;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  selectNextPreviousRow() {\r\n\r\n  }\r\n\r\n  scroll(txnId): boolean {\r\n    let ele = document.getElementsByClassName(txnId)[0];\r\n    console.log(ele);\r\n    if (!ele && this.searchEnterPressedCount > 0) {\r\n      this.utilityService.showSuccessToaster('Reached end of list');\r\n    }\r\n    if (ele) {\r\n      ele.scrollIntoView();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToNextSearchResult(messageSearchKeyword) {\r\n\r\n    if (this.searchEnterPressedCount !== 0) {\r\n      ++this.searchEnterPressedCount;\r\n    }\r\n    if (this.searchEnterPressedCount < 0) this.searchEnterPressedCount = 0;\r\n    let elementDataToScroll = this.findElementDataBySearchKeyWord(messageSearchKeyword, this.searchEnterPressedCount);\r\n    if (!elementDataToScroll) {\r\n      --this.searchEnterPressedCount;\r\n      return;\r\n    }\r\n    let txnId = elementDataToScroll.transaction_id;\r\n    if (elementDataToScroll) {\r\n      let didScrollOccur = this.scroll(txnId);\r\n      if (!didScrollOccur) --this.searchEnterPressedCount;\r\n      this.transactionIdChangedInModel(txnId);\r\n    }\r\n    if (this.searchEnterPressedCount === 0) {\r\n      ++this.searchEnterPressedCount;\r\n    }\r\n  }\r\n\r\n  goToPreviousSearchResult(messageSearchKeyword) {\r\n\r\n    --this.searchEnterPressedCount;\r\n    let elementDataToScroll = this.findElementDataBySearchKeyWord(messageSearchKeyword, this.searchEnterPressedCount);\r\n    if (!elementDataToScroll) {\r\n      --this.searchEnterPressedCount;\r\n      return;\r\n    }\r\n    if (this.searchEnterPressedCount < 0) this.searchEnterPressedCount = 0;\r\n    if (elementDataToScroll) {\r\n      let didScrollOccur = this.scroll(elementDataToScroll.transaction_id);\r\n      this.transactionIdChangedInModel(elementDataToScroll.transaction_id);\r\n    }\r\n  }\r\n\r\n  performSearch(messageSearchKeyword) {\r\n    this.searchEnterPressedCount = 0;\r\n    this.messageSearchKeyword = messageSearchKeyword = messageSearchKeyword.trim();\r\n    if (messageSearchKeyword === '') return;\r\n    this.sessionMessageDataCopy = [...this.sessionMessageData];\r\n    /*find transaction id of first matched text*/\r\n    let elementDataToScroll = this.findElementDataBySearchKeyWord(messageSearchKeyword, 0);\r\n    elementDataToScroll && this.scroll(elementDataToScroll.transaction_id);\r\n  }\r\n\r\n\r\n  findElementDataBySearchKeyWord(messageSearchKeyword, index) {\r\n\r\n    let elementsDataToScroll = this.sessionMessageData.filter((objItem: ISessionMessageItem) => {\r\n      /*find if messageSearchKeyword exists in message or message[0].text as substring */\r\n      console.log(this.messageSearchKeyword);\r\n      let isMatch;\r\n      try{\r\n        /*searching for txn id match*/\r\n        isMatch = objItem.transaction_id.toUpperCase().includes(messageSearchKeyword.toUpperCase());\r\n        if(isMatch) return isMatch\r\n      }catch (e) {}\r\n\r\n      try {\r\n        /*searching for human message match*/\r\n        isMatch = objItem.message.toUpperCase().includes(messageSearchKeyword.toUpperCase());\r\n        if (isMatch) return isMatch;\r\n      } catch (e) {}\r\n\r\n      try {\r\n        /*searching for bot messages match*/\r\n        for(let msg of objItem.message){\r\n          isMatch = msg.text.toUpperCase().includes(messageSearchKeyword.toUpperCase());\r\n          if (isMatch) return isMatch;\r\n        }\r\n      } catch (e) {}\r\n    });\r\n    return elementsDataToScroll[index];\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"<div class=\\\"cursor-pointer\\\" [ngClass]=\\\"txnId\\\" (click)=\\\"messageClickedEvent$.emit(txnId)\\\">\\r\\n  <!--<div class=\\\"cursor-pointer\\\" [ngClass]=\\\"txnId\\\">-->\\r\\n  <i class=\\\"meta-text cursor-pointer pl-1\\\" (click)=\\\"utilityService.copyToClipboard(txnId)\\\"\\r\\n     [innerHtml]=\\\"'txnId:'+ txnId_highlighting\\\">\\r\\n  </i>\\r\\n  <div *ngFor=\\\"let sessionMessage of sessionMessageItems\\\">\\r\\n\\r\\n    <div *ngIf=\\\"sessionMessage && sessionMessage.user_type==='human'\\\">\\r\\n      <!--<div class=\\\"row reverse-flex-row my-1\\\">-->\\r\\n      <div class=\\\"row my-1\\\">\\r\\n        <!--<div class=\\\"col-1 text-left p-0\\\">-->\\r\\n        <!--<img class=\\\"\\\" src=\\\"http://logok.org/wp-content/uploads/2014/04/Citi-logo-880x660.png\\\"-->\\r\\n        <!--style=\\\"width: 32px;height: 32px\\\" alt=\\\"\\\">-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"col-10 p-0\\\">\\r\\n          <div class=\\\"message p-2 bg-message-human\\\" style=\\\"display: inline-block\\\">\\r\\n            <!--<span class=\\\"message-text \\\">{{sessionMessageData.message}}</span>-->\\r\\n            <span class=\\\"message-text\\\" [innerHtml]=\\\"sessionMessage.message\\\"></span>\\r\\n            <div class=\\\"time text-right\\\">10:42 PM</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"sessionMessage && sessionMessage.user_type==='bot'\\\">\\r\\n      <div *ngIf=\\\"myArray.isArray(sessionMessage.message); else messageIsStringNotObjectTemplate\\\">\\r\\n        <!--TODO:HACK:: sometimes data from backend is not {text:\\\"hi\\\"} but just \\\"hi\\\"-->\\r\\n        <div class=\\\"row flex-row-reverse\\\" *ngFor=\\\"let message of sessionMessage.message\\\">\\r\\n          <!--bot text reply starts-->\\r\\n          <div class=\\\"col-10 p-0 pb-1 text-right\\\" *ngIf=\\\"message.text\\\">\\r\\n            <!--<div class=\\\"col-12 p-1 text-right p-0\\\" *ngIf=\\\"message.text\\\">-->\\r\\n            <div class=\\\"message p-2 bg-message-bot\\\" style=\\\"display: inline-block\\\">\\r\\n              <span class=\\\"message-text\\\" [innerHtml]=\\\"message.text\\\"></span>\\r\\n              <div class=\\\"time text-right\\\">10:42 PM</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--bot text reply ends-->\\r\\n\\r\\n          <!--bot rich media reply starts-->\\r\\n          <app-card-carousel\\r\\n            [isParentSessionsModal]=\\\"true\\\"\\r\\n            style=\\\"width: 100%!important;\\\"\\r\\n            [messageData]=\\\"message\\\"\\r\\n            *ngIf=\\\"message && message.media\\\">\\r\\n          </app-card-carousel>\\r\\n          <app-quick-reply\\r\\n            [isParentSessionsModal]=\\\"true\\\"\\r\\n            [messageData]=\\\"message\\\"\\r\\n            *ngIf=\\\"message && message.quick_reply\\\">\\r\\n          </app-quick-reply>\\r\\n          <!--bot rich media reply ends-->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <ng-template #messageIsStringNotObjectTemplate>\\r\\n        <div class=\\\"col-12 p-1 text-right p-0\\\">\\r\\n          <div class=\\\"message p-2 bg-message-bot\\\" style=\\\"display: inline-block\\\">\\r\\n            <span class=\\\"message-text\\\" [innerHtml]=\\\"'hi'\\\"></span>\\r\\n            <div class=\\\"time text-right\\\">10:42 PM</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!--<p>{{(sessionMessage|json)}}</p>-->\\r\\n    <!--<app-card-carousel  [messageData]=\\\"sessionMessage|sessionDataToRichMediaSerializer\\\"></app-card-carousel>-->\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".reverse-flex-row {\\n  display: flex;\\n  flex-direction: row-reverse; }\\n\\n.row {\\n  margin: 0;\\n  /*overriding bootstrap*/ }\\n\\n.message {\\n  font-size: 13px;\\n  line-height: 20px;\\n  font-weight: 400;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  border-radius: 2px; }\\n\\n.message .time {\\n    font-size: 9px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.text-highlight {\\n  background-color: yellow;\\n  color: #474747; }\\n\\n.message-text .text-highlight {\\n  background-color: yellow;\\n  color: #474747; }\\n\\n.meta-text {\\n  font-size: 9px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ISessionItem, ISessionMessageItem} from '../../../../../../interfaces/sessions';\r\nimport {ITxnSessionMessagesItem} from '../../../../../serialize-session-message.pipe';\r\nimport {UtilityService} from '../../../../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-session-message',\r\n  templateUrl: './session-message.component.html',\r\n  styleUrls: ['./session-message.component.scss']\r\n})\r\nexport class SessionMessageComponent implements OnInit {\r\n\r\n  // @Input() sessionMessageData: ISessionMessageItem;\r\n   _txnConversationItems: ITxnSessionMessagesItem;\r\n  @Input()  set txnConversationItems (txnConversationItemsValue: ITxnSessionMessagesItem){\r\n\r\n    this._txnConversationItems = txnConversationItemsValue;\r\n  }\r\n  @Output() messageClickedEvent$: EventEmitter<string> = new EventEmitter();\r\n  myArray = Array;\r\n  sessionMessageItems: ISessionMessageItem[];\r\n  txnId:string;\r\n  myObject = Object;\r\n  txnId_highlighting:string;\r\n  constructor(public utilityService:UtilityService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.sessionMessageItems = this._txnConversationItems.convoList;\r\n    console.log(this.sessionMessageItems);\r\n    this.txnId = this._txnConversationItems.transaction_id;\r\n    this.txnId_highlighting = this._txnConversationItems.transaction_id_highlighting || this.txnId;\r\n    // this.sessionMessageData.user_type;\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"col-12  d-flex justify-content-between\\\">-->\\r\\n  <!--<p class=\\\"flex-shrink-0 font-weight-bold\\\" style=\\\"font-size: 16px\\\">Transaction data frame</p>-->\\r\\n  <!--<div class=\\\"input-group border bg-white p-1 flex-shrink-1 flex-grow-0\\\"-->\\r\\n       <!--style=\\\"height: 32px; border-radius: 2px!important;position: relative; flex-basis: 150px\\\">-->\\r\\n    <!--<input class=\\\"f-control py-2 border-0\\\" id=\\\"search-session-model\\\" type=\\\"search\\\" style=\\\"font-size: 13px\\\"-->\\r\\n           <!--placeholder=\\\"search\\\">-->\\r\\n    <!--<i class=\\\"fa fa-search\\\"-->\\r\\n       <!--style=\\\"font-size: 15px;position: absolute; left: 10px;top: 6px;color: #e0e0e0;z-index: 10\\\"></i>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div>bgjkgjkh</div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <app-code-editor [text]=\\\"'hi'\\\"></app-code-editor>\\r\\n    <app-code-editor class=\\\"bg-dark\\\" ></app-code-editor>\\r\\n    <app-code-editor [text]=\\\"'hisadad'\\\"></app-code-editor>\\r\\n  </div>\\r\\n</div>\\r\\n<!---->\\r\\n\"","module.exports = \"#search-session-model {\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  padding-left: 30px;\\n  /*todo: this doesn't seem right*/\\n  outline: none; }\\n  #search-session-model ::-webkit-input-placeholder {\\n    font-size: 13px; }\\n  #search-session-model :-ms-input-placeholder {\\n    font-size: 13px; }\\n  #search-session-model ::-ms-input-placeholder {\\n    font-size: 13px; }\\n  #search-session-model ::placeholder {\\n    font-size: 13px; }\\n  li {\\n  margin-left: 30px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-session-tabs-details',\r\n  templateUrl: './session-tabs-details.component.html',\r\n  styleUrls: ['./session-tabs-details.component.scss']\r\n})\r\nexport class SessionTabsDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"d-flex-column-custom justify-content-end mb-3\\\">\\r\\n  <div class=\\\"d-flex align-items-center justify-content-end\\\">\\r\\n    <!-- <i class=\\\"fa fa-plus pr-4\\\"></i>\\r\\n    <i class=\\\"fa fa-minus pr-4\\\"></i> -->\\r\\n    <button class=\\\"btn-theme-primary-outline mr-2\\\" (click)=\\\"exportToCSV()\\\">Export to CSV</button>\\r\\n    <button class=\\\"btn-theme-primary mr-2\\\" (click)=\\\"updateTC()\\\" *ngIf=\\\"isData && tableChanged\\\">Update test Case</button>\\r\\n    <button class=\\\"btn-theme-primary mr-2\\\" (click)=\\\"createTC()\\\" *ngIf=\\\"!isData && tableChanged\\\">Create test Case\\r\\n    </button>\\r\\n    <button class=\\\"btn-theme-danger mr-2\\\" (click)=\\\"beginTest(Primarytemplat)\\\" *ngIf=\\\"cancelTestFlag\\\">Cancel Test\\r\\n    </button>\\r\\n    <button class=\\\"btn-theme-primary mr-2\\\" (click)=\\\"beginTest(Primarytemplat)\\\" *ngIf=\\\"!cancelTestFlag\\\">Begin Test\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--<div [hidden]=\\\"!testCaseData\\\" (change)=\\\"onTableChange()\\\" class=\\\"d-flex-column-custom flex-grow-1\\\">-->\\r\\n<app-handsontable\\r\\n  [hidden]=\\\"!testCaseData\\\"\\r\\n  (change)=\\\"onTableChange()\\\"\\r\\n  [testData]=\\\"testCaseData\\\"\\r\\n  [columns]=\\\"handontable_column\\\"\\r\\n  [colHeaders]=\\\"handontable_colHeaders\\\"\\r\\n  (rowChanged$)=\\\"onTableChange()\\\"\\r\\n>\\r\\n</app-handsontable>\\r\\n\\r\\n<!--<app-handsontable [columns]=\\\"handontable_column\\\" [colHeaders]=\\\"handontable_colHeaders\\\"></app-handsontable>-->\\r\\n<!--</div>-->\\r\\n<!--<app-handsontable [columns]=\\\"handontable_column\\\" [colHeaders]=\\\"handontable_colHeaders\\\"></app-handsontable>-->\\r\\n\\r\\n<ng-template #Primarytemplat>\\r\\n  <div class=\\\"danger-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title mb-2\\\" style=\\\"display: flex;justify-content: start;\\\">Test is already running</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body pt-0\\\">\\r\\n      <div>\\r\\n        <p>Do you want to stop the Testing process?</p>\\r\\n        <button class=\\\"btn-theme-primary\\\" (click)=\\\"stopTest();modalRef.hide()\\\">Stop Test</button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","module.exports = \".danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n  .danger-modal .modal-header {\\n    color: #474747; }\\n  .danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  .app-handsontable {\\n  display: block;\\n  overflow-y: auto; }\\n\"","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ServerService } from '../../../server.service';\r\nimport { ConstantsService } from '../../../constants.service';\r\nimport { ITestcases } from '../../../../interfaces/testcases';\r\nimport { Observable } from 'rxjs';\r\nimport { IBot } from '../../interfaces/IBot';\r\nimport { IHeaderData } from '../../../../interfaces/header-data';\r\nimport { UtilityService } from '../../../utility.service';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-bot-testing',\r\n  templateUrl: './bot-testing.component.html',\r\n  styleUrls: ['./bot-testing.component.scss']\r\n})\r\nexport class BotTestingComponent implements OnInit {\r\n\r\n  @Input() bot: IBot;\r\n  testCases$: Observable<[string, string, string][]>;\r\n  handontable_colHeaders;\r\n  handontable_column;\r\n  testCaseData: [string, string, string][] = [[\"\", \"\", \"\"]];\r\n  testCasesUrl = this.constantsService.getBotTestingUrl();\r\n  stopTestUrl = this.constantsService.stopTestUrl();\r\n  testCaseId: number;\r\n  isData: boolean = false;\r\n  modalRef: BsModalRef;\r\n  tableChanged: boolean = false;\r\n  cancelTestFlag:boolean;\r\n  constructor(\r\n    private serverService: ServerService,\r\n    private modalService: BsModalService,\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService,\r\n    private store: Store) {\r\n  }\r\n\r\n  exportToCSV() {\r\n    let csvData = this.testCaseData;\r\n    let csvColumn = [1, 2, 3];\r\n    this.utilityService.downloadArrayAsCSV(csvData, csvColumn);\r\n  }\r\n\r\n  click() {\r\n    this.utilityService.downloadArrayAsCSV([], {});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.serverService.makeGetReq<{ meta: any, objects: ITestcases[] }>(\r\n      {\r\n        url: this.testCasesUrl,\r\n        headerData: { 'bot-access-token': this.bot.bot_access_token }\r\n      }\r\n    )\r\n      // .map((value) => {\r\n      //   return value.objects.map((item: ITestcases) => {\r\n      //     return item.data[0];\r\n      //   });\r\n      // })\r\n      .subscribe((value) => {\r\n        if (value.objects.length === 0) {\r\n          this.isData = false;\r\n        }\r\n        else {\r\n          this.isData = true;\r\n          let testCaseData = value.objects[0].data;\r\n          \r\n          let testCaseDataForBot: ITestcases = value.objects.find((testcase) => {\r\n            return testcase.bot_id === this.bot.id\r\n          });\r\n\r\n          this.testCaseData =\r\n            (testCaseDataForBot && testCaseDataForBot.data && testCaseDataForBot.data.length > 0) ? testCaseDataForBot.data : [['NO_TEST_DATA', 'NO_TEST_DATA', 'NO_TEST_DATA']];\r\n          // this.testCaseId = value.objects[0].id;\r\n          this.testCaseId = testCaseDataForBot && testCaseDataForBot.id;\r\n          // }\r\n        }\r\n      });\r\n    this.handontable_colHeaders = this.constantsService.HANDSON_TABLE_BOT_TESTING_colHeaders;\r\n    this.handontable_column = this.constantsService.HANDSON_TABLE_BOT_TESTING_columns;\r\n  }\r\n  onTableChange() {\r\n    this.tableChanged = true;\r\n  }\r\n  createTC() {\r\n    console.log(this.testCaseData);\r\n    this.serverService.makePostReq<{ meta: any, objects: ITestcases[] }>({\r\n      url: this.testCasesUrl,\r\n      headerData: { 'bot-access-token': this.bot.bot_access_token },\r\n      body: {\r\n        \"status\": \"IDLE\",\r\n        \"data\": this.testCaseData\r\n        //   .map((testCaseItem:[ string, string, string ])=>{\r\n        //     /*\r\n        //     *This is to remove third item of testcase array\r\n        //     * Not sure of needed\r\n        //     * */\r\n        //   return [testCaseItem[0], testCaseItem[1]]\r\n        // })\r\n      }\r\n    }).subscribe((value) => {\r\n      this.utilityService.showSuccessToaster('Test cases created');\r\n      this.isData = true;\r\n      this.tableChanged = false;\r\n    })\r\n  }\r\n\r\n  updateTC() {\r\n    // ;\r\n    this.serverService.makePutReq<{ meta: any, objects: ITestcases[] }>({\r\n      url: this.testCasesUrl + `${this.testCaseId}/`,\r\n      headerData: { 'bot-access-token': this.bot.bot_access_token },\r\n      body: {\r\n        'status': 'IDLE',\r\n        'data': this.testCaseData\r\n      }\r\n    }).subscribe((value) => {\r\n      this.utilityService.showSuccessToaster('Test cases updated');\r\n      this.isData = true;\r\n      this.tableChanged = false;\r\n    });\r\n  }\r\n\r\n  beginTest(Primarytemplat) {\r\n    this.cancelTestFlag = true;\r\n    this.serverService.makeGetReq<{ meta: any, objects: ITestcases[] }>(\r\n      {\r\n        url: this.testCasesUrl,\r\n        headerData: { 'bot-access-token': this.bot.bot_access_token }\r\n      }\r\n    ).subscribe((value) => {\r\n      if (value.objects[0].status === 'RUNNING') {\r\n        this.cancelTestFlag = true;\r\n        this.openCreateBotModal(Primarytemplat);\r\n      }\r\n      else {\r\n        this.serverService.makeGetReq<any>(\r\n          {\r\n            url: this.testCasesUrl + 'oneclicktesting/',\r\n            headerData: { 'bot-access-token': this.bot.bot_access_token }\r\n          }\r\n        )\r\n          .subscribe((value) => {\r\n            this.testCaseData = value.data;\r\n            this.cancelTestFlag = false;\r\n          });\r\n      }\r\n      \r\n    });\r\n\r\n  }\r\n\r\n  removeNullRowsFromTableData(arr: [string, string, string][]) {\r\n  }\r\n  openCreateBotModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-md' });\r\n  }\r\n  stopTest() {\r\n    this.serverService.makeGetReq<{ meta: any, objects: ITestcases[] }>(\r\n      {\r\n        url: this.stopTestUrl,\r\n        headerData: { 'bot-access-token': this.bot.bot_access_token }\r\n      }\r\n    )\r\n      .subscribe((value) => {\r\n        this.cancelTestFlag = false;\r\n        \r\n      });\r\n  }\r\n}\r\n\r\n","module.exports = \"<div\\r\\n  [ngClass]=\\\"{'bot-detail-grid-architecture-full-screen':isArchitectureFullScreen,'bot-detail-grid':!isArchitectureFullScreen}\\\"\\r\\n  *ngIf=\\\"bot\\\">\\r\\n\\r\\n  <div class=\\\"header\\\" *ngIf=\\\"!isArchitectureFullScreen\\\">\\r\\n    <app-bot-detail-header [bot]=\\\"bot\\\" (refreshBotDetails$)=\\\"refreshBotDetails()\\\"></app-bot-detail-header>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex-column-last-child-flex-grow-1 config bg-white px-3 py-3 shadow-theme\\\" *ngIf=\\\"!isArchitectureFullScreen\\\">\\r\\n    <div class=\\\"d-flex-column-last-child-flex-grow-1 text-theme-normal justify-content-center\\\">\\r\\n      <div class=\\\"d-flex justify-content-between px-3\\\">\\r\\n\\r\\n        <div class=\\\"heading\\\" style=\\\"font-size: 14px !important;\\\">Bot Configuration</div>\\r\\n        <div *ngIf=\\\"!showConfig\\\" class=\\\"d-flex mx-4 justify-content-between align-items-center flex-grow-1\\\">\\r\\n          <div>Bot Unique Name : <strong>{{bot.bot_unique_name}}</strong></div>\\r\\n          <div>Session Time : <strong>{{bot.room_persistence_time}} min</strong></div>\\r\\n          <div>Advance Data Protection : <strong>{{bot.advanced_data_protection}}</strong></div>\\r\\n          <div>Data Retention Period : <strong>{{bot.data_persistence_period}} Days</strong></div>\\r\\n          <div>Blank Consent : <strong>{{bot.blanket_consent}}</strong></div>\\r\\n        </div>\\r\\n        <div class=\\\"cursor-pointer\\\"\\r\\n             (click)=\\\"togglePanel()\\\">\\r\\n          <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-up':showConfig, 'fa-angle-down':!showConfig}\\\"\\r\\n             style=\\\"font-size: 20px; line-height: 12px\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <app-bot-config (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"showConfig\\\" [bot]=\\\"(bot)\\\"></app-bot-config>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--============= REDESIGN=================-->\\r\\n\\r\\n  <div class=\\\"flex-column shadow-theme architecture bg-white p-1 px-2 my align-content-start\\\"\\r\\n       *myIf=\\\"myETabNames.lower_panel_bot_detail\\\">\\r\\n    <!--tabs start-->\\r\\n    <div class=\\\"px-2\\\">\\r\\n      <ul class=\\\"nav nav-tabs border-none theme-tabbing mb-1 bg-white\\\">\\r\\n        <li *myIf=\\\"myETabNames.architecture_tab\\\" class=\\\"nav-item\\\"\\r\\n            [ngClass]=\\\"{'tab-active':selectedTab==='architecture'}\\\">\\r\\n          <a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             (click)=\\\"tabChanged('architecture')\\\"\\r\\n             [queryParams]=\\\"{build:'architecture'}\\\"><strong>Architecture</strong></a>\\r\\n        </li>\\r\\n        <li *myIf=\\\"myETabNames.testing\\\" class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active':selectedTab==='testing'}\\\">\\r\\n          <a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             (click)=\\\"tabChanged('testing')\\\"\\r\\n             [queryParams]=\\\"{build:'testing'}\\\"><strong>Testing</strong></a>\\r\\n        </li>\\r\\n        <li *myIf=\\\"myETabNames.sessions\\\" class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active':selectedTab==='sessions'}\\\">\\r\\n          <a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             (click)=\\\"tabChanged('sessions')\\\"\\r\\n             [queryParams]=\\\"{build:'sessions'}\\\"><strong>Sessions</strong></a>\\r\\n        </li>\\r\\n        <li *myIf=\\\"myETabNames.consumers\\\" class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active':selectedTab==='consumer'}\\\">\\r\\n          <a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             (click)=\\\"tabChanged('consumer')\\\"\\r\\n             [queryParams]=\\\"{build:'consumer'}\\\"><strong>Consumers</strong></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item ml-auto\\\">\\r\\n          <a class=\\\"nav-link heading\\\"\\r\\n             [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             [queryParams]=\\\"{isArchitectureFullScreen:!isArchitectureFullScreen}\\\">\\r\\n            <i class=\\\"fa\\\"\\r\\n               [ngClass]=\\\"{'fa-window-restore':isArchitectureFullScreen, 'fa-expand':!isArchitectureFullScreen}\\\"></i>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n    <!--tabs end-->\\r\\n    <!---->\\r\\n    <!--architeture starts-->\\r\\n    <div class=\\\"col-12 p-0\\\" style=\\\"height: 85%\\\" *ngIf=\\\"selectedTab==='architecture' &&  bot \\\">\\r\\n      <div class=\\\"col-12 architeture-body\\\" style=\\\"overflow-y: auto;height: 100%\\\" *myIf=\\\"myETabNames.architecture_items\\\">\\r\\n        <div class=\\\"d-flex row-body bg-white \\\" style=\\\"height: 98%\\\">\\r\\n          <!--TODO: 98% to avoid scroll bar; use grid instead-->\\r\\n          <!--side bar starts-->\\r\\n          <div class=\\\"side-bar  border-right\\\">\\r\\n            <div class=\\\"sidebar-content\\\">\\r\\n              <a routerLink=\\\".\\\"\\r\\n                 [queryParams]=\\\"{'build-tab':'pipeline'}\\\"\\r\\n                 queryParamsHandling=\\\"merge\\\"\\r\\n                 [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='pipeline'}\\\"\\r\\n                 (click)=\\\"selectedSideBarTab='pipeline'\\\"\\r\\n                 class=\\\"tab-theme font-weight-bold\\\">Pipeline\\r\\n              </a>\\r\\n              <div routerLink=\\\".\\\"\\r\\n                   [queryParams]=\\\"{'build-tab':'knowledge'}\\\"\\r\\n                   queryParamsHandling=\\\"merge\\\"\\r\\n                   [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='knowledge'}\\\"\\r\\n                   (click)=\\\"selectedSideBarTab='knowledge'\\\"\\r\\n                   class=\\\"tab-theme\\\">Knowledge base\\r\\n              </div>\\r\\n              <div routerLink=\\\".\\\"\\r\\n                   [queryParams]=\\\"{'build-tab':'code'}\\\"\\r\\n                   queryParamsHandling=\\\"merge\\\"\\r\\n                   [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='code'}\\\"\\r\\n                   (click)=\\\"selectedSideBarTab='code'\\\"\\r\\n                   class=\\\"tab-theme\\\">Code\\r\\n              </div>\\r\\n              <div routerLink=\\\".\\\"\\r\\n                   [queryParams]=\\\"{'build-tab':'integration'}\\\"\\r\\n                   queryParamsHandling=\\\"merge\\\"\\r\\n                   [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='integration'}\\\"\\r\\n                   (click)=\\\"selectedSideBarTab='integration'\\\"\\r\\n                   class=\\\"tab-theme\\\">Integrations\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--side bar ends-->\\r\\n\\r\\n          <div class=\\\"px-2 pt-2 pb-0 d-flex  w-100\\\">\\r\\n            <app-pipeline\\r\\n              (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='pipeline'\\\"\\r\\n                          [bot]=\\\"bot\\\"></app-pipeline>\\r\\n            <!--<app-knowledge-base (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"-->\\r\\n            <!--[bot]=\\\"bot\\\"></app-knowledge-base>-->\\r\\n            <app-knowledge-base-wrapper [bot]=\\\"bot\\\"\\r\\n                                        *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"></app-knowledge-base-wrapper>\\r\\n\\r\\n            <app-code-input (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='code'\\\"\\r\\n                            [bot]=\\\"bot\\\"></app-code-input>\\r\\n            <app-integration-option-list (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='integration'\\\"\\r\\n                                         [bot]=\\\"bot\\\"></app-integration-option-list>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!--architeture ends-->\\r\\n\\r\\n    <div class=\\\"p-0 d-flex d-flex-column-custom  flex-grow-1\\\"  *ngIf=\\\"selectedTab==='testing'\\\">\\r\\n      <app-bot-testing class=\\\" d-flex-column-custom flex-grow-1\\\" [bot]=\\\"bot\\\"></app-bot-testing>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12 scroll-wrapper\\\" *ngIf=\\\"selectedTab==='sessions'\\\">\\r\\n      <app-bot-sessions [id]=\\\"bot.id\\\" [bot]=\\\"bot\\\"></app-bot-sessions>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-flex-column-last-child-flex-grow-1 scroll-wrapper\\\" *ngIf=\\\"selectedTab==='consumer'\\\">\\r\\n      <app-consumers class=\\\"d-flex-column-last-child-flex-grow-1 \\\" [id]=\\\"bot.id\\\" [bot]=\\\"bot\\\"></app-consumers>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<app-imi-loader *ngIf=\\\"!bot\\\"></app-imi-loader>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n  <div class=\\\"row row-details\\\">\\r\\n    <div class=\\\"col-2  d-flex flex-column align-items-center justify-content-start\\\">\\r\\n      <i class=\\\"fa fa-area-chart p-0\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Session</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 pb-5 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-users\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Users</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-envelope\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Messages</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-exchange\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Average Message Per Session</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-clock-o\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Time Spent(hh:mm)</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-hourglass\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Time Spent Per Session (hh:mm)</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","module.exports = \".bot-detail-grid {\\n  display: -ms-grid;\\n  display: grid;\\n  height: 100vh;\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: 40px 8px auto 8px 1fr;\\n      grid-template-rows: 40px auto 1fr;\\n  grid-gap: 8px;\\n      grid-template-areas: 'header' 'config' 'architecture'; }\\n  .bot-detail-grid .header {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: header; }\\n  .bot-detail-grid .config {\\n    -ms-grid-row: 3;\\n    -ms-grid-column: 1;\\n    grid-area: config; }\\n  .bot-detail-grid .architecture {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: architecture;\\n    overflow-y: auto; }\\n  .bot-detail-grid-architecture-full-screen {\\n  display: -ms-grid;\\n  display: grid;\\n  height: calc(100vh - 76px);\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: minmax(60vh, 1fr);\\n      grid-template-rows: minmax(60vh, 1fr);\\n  grid-gap: 8px;\\n  margin-top: 10px;\\n      grid-template-areas: 'architecture'; }\\n  .bot-detail-grid-architecture-full-screen .architecture {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: architecture; }\\n  .row-details .fa {\\n  font-size: 30px;\\n  font-weight: 400;\\n  height: 40px;\\n  color: #00abd3; }\\n  .label {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #56627c;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .title {\\n  font-size: 16px;\\n  line-height: 16px;\\n  font-weight: 700;\\n  color: #56627c;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .description {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  text-align: center; }\\n  #channel-selector {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .architeture-body {\\n  height: 85%; }\\n  .architeture-body .side-bar {\\n    width: 12.5%;\\n    padding-right: 0px; }\\n  .architeture-body .tab {\\n    height: 32px;\\n    display: flex;\\n    align-items: center;\\n    padding: 6px;\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    cursor: pointer; }\\n  .architeture-body .tab:hover {\\n      background-color: #f7f7f7; }\\n  .scroll-wrapper {\\n  overflow-y: auto; }\\n  app-knowledge-base-wrapper, app-code-input, app-integration-option-list {\\n  height: 100%;\\n  overflow-y: auto;\\n  overflow-x: hidden;\\n  width: 100%;\\n  display: block; }\\n  app-integration-option-list {\\n  display: flex; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ViewBotStateModel, ViewBotStateReducer} from '../../view-bots/ngxs/view-bot.state';\r\nimport {Observable} from 'rxjs';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\nimport 'rxjs/add/operator/map';\r\nimport {IOverviewInfoResponse} from '../../../../interfaces/Analytics2/overview-info';\r\nimport {ServerService} from '../../../server.service';\r\nimport {UtilityService} from '../../../utility.service';\r\nimport {BotSessionsComponent} from '../bot-sessions/bot-sessions.component';\r\nimport {UpdateBotInfoByIdInBotInBotList, SaveVersionInfoInBot} from '../../view-bots/ngxs/view-bot.action';\r\nimport {ConstantsService, ERoleName, ETabNames} from '../../../constants.service';\r\nimport {IHeaderData} from '../../../../interfaces/header-data';\r\nimport {IUser} from '../../interfaces/user';\r\nimport {IAuthState} from '../../../auth/ngxs/auth.state';\r\n\r\n@Component({\r\n  selector: 'app-code-based-bot-detail',\r\n  templateUrl: './code-based-bot-detail.component.html',\r\n  styleUrls: ['./code-based-bot-detail.component.scss']\r\n})\r\nexport class CodeBasedBotDetailComponent implements OnInit {\r\n\r\n  myETabNames = ETabNames;\r\n  isArchitectureFullScreen = false;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  @ViewChild(BotSessionsComponent) sessionChild: BotSessionsComponent;\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  selectedTab = 'architecture';\r\n  bot$: Observable<IBot>;\r\n  bot_id: number;\r\n  showConfig: boolean = true;\r\n  overviewInfo$: Observable<IOverviewInfoResponse>;\r\n  selectedChannel: string = 'all';\r\n  start_date: string;\r\n  end_date: string;\r\n  selectedChannelDisplayName: string;\r\n  selectedDurationDisplayName: string = 'Monthly';\r\n  selectedSideBarTab: string = 'pipeline';\r\n  bot: IBot;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private serverService: ServerService,\r\n    private store: Store,\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.loggeduser$.take(1).subscribe((loggedUserState:IAuthState)=>{\r\n      let roleName = this.constantsService.loggedUser.role.name;\r\n      if(roleName===ERoleName.Admin || roleName===ERoleName['Bot Developer']){\r\n        this.selectedTab = 'architecture'\r\n      }else if(roleName===ERoleName.Tester){\r\n        this.selectedTab = 'testing'\r\n      }else{\r\n        this.selectedTab = 'sessions'\r\n      }\r\n    // });\r\n\r\n    let isArchitectureFullScreen = this.activatedRoute.snapshot.queryParamMap.get('isArchitectureFullScreen');\r\n    this.isArchitectureFullScreen = isArchitectureFullScreen==='true';\r\n    let showConfigStr = this.activatedRoute.snapshot.queryParamMap.get('show-config');\r\n    this.showConfig = (showConfigStr === 'true' || showConfigStr == undefined);\r\n    this.bot_id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n    /*TODO: replace this code by writing proper selector*/\r\n    this.selectedTab = this.activatedRoute.snapshot.queryParamMap.get('build') || this.selectedTab;\r\n    /*this.bot$ = */\r\n    this.botlist$.subscribe((botListState) => {\r\n      if (botListState.allBotList)\r\n        this.bot = botListState.allBotList.find((bot) => {\r\n          return bot.id === this.bot_id;\r\n        });\r\n      console.log(\"Bot Opened\", this.bot);\r\n      return this.bot;\r\n    });\r\n    this.selectedSideBarTab = this.activatedRoute.snapshot.queryParamMap.get('build-tab') || 'pipeline';\r\n\r\n    this.start_date = this.utilityService.getPriorDate(0);\r\n    this.end_date = this.utilityService.getPriorDate(30);\r\n    this.getOverviewInfo();\r\n    this.activatedRoute.queryParams.subscribe((queryParams)=>{\r\n      this.isArchitectureFullScreen= queryParams['isArchitectureFullScreen']==='true'\r\n    })\r\n  }\r\n\r\n  refreshBotDetails() {\r\n    this.serverService.fetchSpecificBotFromServerAndUpdateBotList(this.bot);\r\n\r\n    // let getBotByTokenUrl = this.constantsService.getSpecificBotByBotTokenUrl();\r\n    // let headerData: IHeaderData = {\r\n    //   'bot-access-token': this.bot.bot_access_token\r\n    // };\r\n    // this.serverService.makeGetReq<{ objects: IBot[] }>({url: getBotByTokenUrl, headerData})\r\n    //   .subscribe((val) => {\r\n    //\r\n    //     let bot: IBot = val.objects.find((bot) => {\r\n    //\r\n    //       return bot.id === this.bot.id;\r\n    //     });\r\n    //     this.store.dispatch([\r\n    //       new UpdateBotInfoByIdInBotInBotList({data: bot, botId: this.bot.id})\r\n    //     ]);\r\n    //   });\r\n  }\r\n\r\n  selectedChannelChanged(channel: string, name: string) {\r\n    this.selectedChannelDisplayName = name;\r\n    this.selectedChannel = channel;\r\n    this.getOverviewInfo();\r\n  }\r\n\r\n  selectedDurationChanged(priordays: number, name: string) {\r\n    this.selectedDurationDisplayName = name;\r\n    this.start_date = this.utilityService.getPriorDate(0);\r\n    this.end_date = this.utilityService.getPriorDate(priordays);\r\n    this.getOverviewInfo();\r\n  }\r\n\r\n  getOverviewInfo() {\r\n    /*TODO: improve below by adding all the fields*/\r\n    this.overviewInfo$ = this.serverService.getOverviewInfo({\r\n      bot_id: this.bot_id,\r\n      platform: this.selectedChannel,\r\n      start_date: this.start_date,\r\n      end_date: this.end_date\r\n    });\r\n  }\r\n\r\n  refreshSession() {\r\n    this.sessionChild.refreshSession();\r\n  }\r\n\r\n  tabChanged(tab: string) {\r\n    this.selectedTab = tab;\r\n  }\r\n\r\n  datachanged(data: IBot) {\r\n    ;\r\n    this.store.dispatch([\r\n      new UpdateBotInfoByIdInBotInBotList({data, botId: this.bot_id})\r\n    ]);\r\n  }\r\n\r\n  togglePanel() {\r\n    this.showConfig = !this.showConfig;\r\n    // this.router.navigate(['.'], {queryParams:{'show-config':this.showConfig}});\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: {\r\n        ...this.activatedRoute.snapshot.queryParams,\r\n        'show-config': this.showConfig\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<div class=\\\"bg-white p-3 mt-4 shadow-theme\\\">\\r\\n  <app-consumers></app-consumers>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-consumer-fullscreen-wrapper',\r\n  templateUrl: './consumer-fullscreen-wrapper.component.html',\r\n  styleUrls: ['./consumer-fullscreen-wrapper.component.scss']\r\n})\r\nexport class ConsumerFullscreenWrapperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"  <!--<div class=\\\"d-flex justify-content-end align-items-center my-2\\\">-->\\r\\n    <!--<div><i class=\\\"fa fa-refresh pr-2 cursor-pointer\\\" style=\\\"font-size: 19px\\\" (click)=\\\"reloadData()\\\"></i></div>-->\\r\\n    <!--&lt;!&ndash; <div *ngIf=\\\"!isFullscreen\\\"><i class=\\\"fa fa-external-link pr-2 cursor-pointer\\\" style=\\\"font-size: 19px\\\" (click)=\\\"goFullScreen()\\\"></i></div> &ndash;&gt;-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <app-smart-table\\r\\n    class=\\\"d-flex-column-last-child-flex-grow-1\\\"\\r\\n    [totalRecords]=\\\"totalRecords\\\"\\r\\n    (pageChanged$)=\\\"pageChanged($event)\\\"\\r\\n    [data]=\\\"(consumerTableData)|limitObjectArraysString\\\"\\r\\n    [showRefreshButton]=\\\"true\\\"\\r\\n    (refreshData$)=\\\"reloadData()\\\"\\r\\n    [settings]=\\\"smartTableSettings_Consumers\\\"\\r\\n    (customActionEvents)=\\\"customActionEventsTriggeredInSessionsTable($event,Primarytemplat)\\\"\\r\\n    [showSearchInDbButton]=\\\"true\\\"\\r\\n    (performSearchInDB$)=\\\"performSearchInDbForConsumer($event)\\\">\\r\\n  </app-smart-table>\\r\\n\\r\\n  <ng-template #Primarytemplat>\\r\\n      <div class=\\\"primary-modal\\\">\\r\\n        <div class=\\\"top-dec\\\"></div>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title mb-2\\\" style=\\\"display: flex;justify-content: start;\\\">Reason for decryption</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"modal-body pt-0\\\">\\r\\n         <!-- <div>\\r\\n           <input type=\\\"text\\\" [(ngModel)] = \\\"decryptReason\\\">\\r\\n           <button class=\\\"btn-theme-primary\\\" (click)=\\\"decryptSubmit();modalRef.hide()\\\">Submit</button>\\r\\n         </div> -->\\r\\n         <form #form=\\\"ngForm\\\">\\r\\n          <div class=\\\"text-center my-1\\\">\\r\\n            <label for=\\\"\\\" class=\\\"mr-1\\\">Reason</label>\\r\\n            <input autofocus type=\\\"text\\\" required style=\\\"border-radius: 0px !important;\\\" [(ngModel)] = \\\"decryptReason\\\" name=\\\"decryptReason\\\">\\r\\n          </div>\\r\\n          <button [disabled]=\\\"!form.valid\\\" class=\\\" btn btn-theme-success-sm\\\" (click)=\\\"decryptSubmit();modalRef.hide()\\\">Submit</button>\\r\\n        </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\"","module.exports = \".fa {\\n  color: #9e9e9e; }\\n\\n.primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n\\n.primary-modal .modal-header {\\n    color: #474747; }\\n\\n.primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\\n.danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n\\n.danger-modal .modal-header {\\n    color: #474747; }\\n\\n.danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\"","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { ServerService } from '../../../server.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ConstantsService } from '../../../constants.service';\r\nimport { IConsumerResults, IConsumerResultsFromServer } from '../../../../interfaces/consumer';\r\nimport { IBot } from '../../interfaces/IBot';\r\nimport { ViewBotStateModel } from '../../view-bots/ngxs/view-bot.state';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { ISessionItem } from '../../../../interfaces/sessions';\r\nimport { IHeaderData } from '../../../../interfaces/header-data';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-consumers',\r\n  templateUrl: './consumers.component.html',\r\n  styleUrls: ['./consumers.component.scss']\r\n})\r\nexport class ConsumersComponent implements OnInit {\r\n\r\n  @Input() id: string;\r\n  @Input() bot: IBot;\r\n  bot_id: number;\r\n  totalRecords: number;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  consumerTableData: IConsumerResults[];\r\n  consumersDecrypted: IConsumerResults ;//IConsumerItem\r\n  smartTableSettings_Consumers = this.constantsService.SMART_TABLE_CONSUMER_SETTING;\r\n  isFullscreen: false;\r\n  consumerItemToBeDecrypted: IConsumerResults;\r\n  decryptReason: string;\r\n  modalRef: BsModalRef;\r\n  constructor(\r\n    private serverService: ServerService,\r\n    private constantsService: ConstantsService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modalService: BsModalService,\r\n    private store: Store) {\r\n  }\r\n\r\n  reloadData() {\r\n    this.loadConsumerData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bot_id =\r\n      Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n\r\n    this.isFullscreen = this.activatedRoute.snapshot.data['isFullscreen'];\r\n    this.botlist$.subscribe((viewBotState) => {\r\n      this.bot = viewBotState.allBotList.find(bot => bot.id === this.bot_id);\r\n    });\r\n    this.loadConsumerData();\r\n  }\r\n\r\n  pageChanged(selectedPage: number) {\r\n    this.loadConsumerData(10, (selectedPage - 1) * 10);\r\n  }\r\n\r\n  loadConsumerData(limit: number = 10, offset: number = 0) {\r\n    let url = this.constantsService.getBotConsumerUrl(limit, offset);\r\n      this.serverService\r\n        .makeGetReq<IConsumerResultsFromServer>({ url, headerData: { 'bot-access-token': this.bot.bot_access_token } })\r\n        .map((value) => {\r\n          this.totalRecords = value.meta.total_count;\r\n          return {\r\n            ...value,\r\n            objects: value.objects.map((result) => {\r\n              // let modified_update_at = (new Date(result.updated_at)).toDateString();\r\n              return { ...result };\r\n            })\r\n          };\r\n        }).subscribe((value)=>{\r\n          this.consumerTableData = value.objects;\r\n        });\r\n  }\r\n\r\n\r\n  goFullScreen() {\r\n    this.router.navigate([`core/botdetail/${this.bot_id}/consumer`])\r\n    // http://localhost:4200/core/botdetail/27/consumer\r\n  }\r\n  customActionEventsTriggeredInSessionsTable(data: { action: string, data: IConsumerResults, source: any }, Primarytemplat) {\r\n\r\n\r\n    if (data.action === 'decrypt') {\r\n      /*use dcrypt api*/\r\n\r\n      this.consumerItemToBeDecrypted = data.data;\r\n      this.openCreateBotModal(Primarytemplat);\r\n\r\n    }\r\n  }\r\n  decryptSubmit() {\r\n\r\n    let headerData: IHeaderData = {\r\n      \"bot-access-token\": this.bot.bot_access_token\r\n    };\r\n    let body = { \"consumer_id\": this.consumerItemToBeDecrypted.id, \"decrypt_audit_type\": \"consumer\", \"message\": this.decryptReason };\r\n    let url = this.constantsService.getDecryptUrl();\r\n    this.serverService.makePostReq({ headerData, body, url })\r\n      .subscribe(() => {\r\n        this.decryptReason = \"\";\r\n        let url = this.constantsService.getBotConsumerByIdUrl(this.consumerItemToBeDecrypted.id);\r\n          this.serverService\r\n            .makeGetReq<IConsumerResults>({ url, headerData: { 'bot-access-token': this.bot.bot_access_token } })\r\n            .map((result) => {\r\n              let modified_update_at = (new Date(result.updated_at)).toDateString();\r\n              return { ...result, updated_at: modified_update_at };\r\n            })\r\n            .subscribe((value) => {\r\n\r\n              this.consumersDecrypted = value;\r\n\r\n              let index = this.consumerTableData.findIndex((value)=>value.id === this.consumerItemToBeDecrypted.id)\r\n              this.consumerTableData[index] = this.consumersDecrypted;\r\n              this.consumerTableData = [...this.consumerTableData];\r\n            });\r\n      })\r\n\r\n  }\r\n  performSearchInDbForConsumer(data){\r\n    ;\r\n    let url = this.constantsService.getBotConsumerByIdUrl(data[\"ID\"]);\r\n    this.serverService\r\n      .makeGetReq<IConsumerResults>({ url, headerData: { 'bot-access-token': this.bot.bot_access_token } })\r\n      .subscribe((consumer: IConsumerResults) => {\r\n        this.consumerTableData.push(consumer);\r\n        this.consumerTableData = [...this.consumerTableData];\r\n      });\r\n  }\r\n\r\n  openCreateBotModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-md' });\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {IConsumerResults} from '../../../../interfaces/consumer';\r\n\r\n@Pipe({\r\n  name: 'limitObjectArraysString'\r\n})\r\nexport class LimitObjectArraysStringPipe implements PipeTransform {\r\n\r\n  transform(consumerResults: IConsumerResults[], args?: any): any {\r\n    if(!consumerResults) return;\r\n    consumerResults = JSON.parse(JSON.stringify(consumerResults));\r\n\r\n    let x =consumerResults.map((consumer)=>{\r\n      for(let key in consumer){\r\n        if(consumer[key] && consumer[key].length &&  consumer[key].length>32)\r\n        consumer[key] = consumer[key].substring(1,15)+'...'\r\n      }\r\n      return consumer;\r\n    });\r\n    return x;\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"bot-detail-grid\\\" *ngIf=\\\"bot\\\">-->\\r\\n  <!--&lt;!&ndash;<div >&ndash;&gt;-->\\r\\n\\r\\n  <!--<div class=\\\"header\\\">-->\\r\\n    <!--<app-bot-detail-header [bot]=\\\"bot\\\" (refreshBotDetails$)=\\\"refreshBotDetails()\\\"></app-bot-detail-header>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"row config bg-white pb-2 pt-3 shadow-theme\\\">-->\\r\\n    <!--&lt;!&ndash;&ndash;&gt;-->\\r\\n    <!--<div class=\\\"col-12 text-theme-normal\\\">-->\\r\\n      <!--&lt;!&ndash; <div class=\\\"col-12 d-flex justify-content-between px-3 pb-1\\\" (click)=\\\"showConfig=!showConfig\\\"> &ndash;&gt;-->\\r\\n      <!--<div class=\\\"col-12 d-flex justify-content-between px-3 pb-1\\\" >-->\\r\\n\\r\\n        <!--<div class=\\\"heading\\\" style=\\\"font-size: 14px !important;\\\">Bot Configuration</div>-->\\r\\n        <!--<div *ngIf=\\\"!showConfig\\\" class=\\\"d-flex mx-4 justify-content-between align-items-center flex-grow-1\\\">-->\\r\\n          <!--<div>Bot Unique Name : <strong>{{bot.bot_unique_name}}</strong></div>-->\\r\\n          <!--<div>Session Time : <strong>{{bot.room_persistence_time}} min</strong></div>-->\\r\\n          <!--<div>Advance Data Protection : <strong>{{bot.advanced_data_protection}}</strong></div>-->\\r\\n          <!--<div>Data Retention Period : <strong>{{bot.data_persistence_period}} Days</strong></div>-->\\r\\n          <!--<div>Blank Consent : <strong>{{bot.blanket_consent}}</strong></div>-->\\r\\n        <!--</div>-->\\r\\n        <!--<div class=\\\"cursor-pointer\\\"-->\\r\\n             <!--(click)=\\\"togglePanel()\\\">-->\\r\\n          <!--<i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-up':showConfig, 'fa-angle-down':!showConfig}\\\"-->\\r\\n             <!--style=\\\"font-size: 20px; line-height: 12px\\\"></i>-->\\r\\n        <!--</div>-->\\r\\n      <!--</div>-->\\r\\n\\r\\n      <!--<app-bot-config (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"showConfig\\\" [bot]=\\\"(bot)\\\"></app-bot-config>-->\\r\\n\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--&lt;!&ndash;============= REDESIGN=================&ndash;&gt;-->\\r\\n\\r\\n  <!--<div class=\\\"row shadow-theme architecture bg-white p-1 px-2 my align-content-start\\\" *myIf=\\\"myETabNames.lower_panel_bot_detail\\\">-->\\r\\n    <!--&lt;!&ndash;tabs start&ndash;&gt;-->\\r\\n    <!--<div class=\\\"col-12  px-2\\\">-->\\r\\n      <!--<ul class=\\\"nav nav-tabs theme-tabbing mb-1 bg-white\\\" >-->\\r\\n        <!--<li *myIf=\\\"myETabNames.architecture_tab\\\" class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active':selectedTab==='architecture'}\\\">-->\\r\\n          <!--<a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"-->\\r\\n             <!--queryParamsHandling=\\\"merge\\\"-->\\r\\n             <!--replaceUrl=\\\"true\\\"-->\\r\\n             <!--(click)=\\\"tabChanged('architecture')\\\"-->\\r\\n             <!--[queryParams]=\\\"{build:'architecture'}\\\"><strong>Architecture</strong></a>-->\\r\\n        <!--</li>-->\\r\\n      <!--</ul>-->\\r\\n\\r\\n    <!--</div>-->\\r\\n    <!--&lt;!&ndash;tabs end&ndash;&gt;-->\\r\\n\\r\\n    <!--&lt;!&ndash;architeture starts&ndash;&gt;-->\\r\\n    <!--<div class=\\\"col-12 p-0\\\" style=\\\"height: 90%\\\" *ngIf=\\\"selectedTab==='architecture' &&  bot \\\" >-->\\r\\n      <!--<div class=\\\"col-12 architeture-body\\\" style=\\\"overflow-y: auto;height: 100%\\\" *myIf=\\\"myETabNames.lower_panel_bot_detail\\\">-->\\r\\n        <!--<div class=\\\"d-flex row-body bg-white \\\" style=\\\"height: 98%\\\">&lt;!&ndash;TODO: 98% to avoid scroll bar; use grid instead&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;side bar starts&ndash;&gt;-->\\r\\n          <!--<div class=\\\"side-bar  border-right\\\">-->\\r\\n            <!--<div class=\\\"sidebar-content\\\">-->\\r\\n              <!--<a routerLink=\\\".\\\"-->\\r\\n                 <!--[queryParams]=\\\"{'build-tab':'pipeline'}\\\"-->\\r\\n                 <!--queryParamsHandling=\\\"merge\\\"-->\\r\\n                 <!--[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='pipeline'}\\\"-->\\r\\n                 <!--(click)=\\\"selectedSideBarTab='pipeline'\\\"-->\\r\\n                 <!--class=\\\"tab-theme font-weight-bold\\\">Pipeline-->\\r\\n              <!--</a>-->\\r\\n              <!--<div routerLink=\\\".\\\"-->\\r\\n                   <!--[queryParams]=\\\"{'build-tab':'knowledge'}\\\"-->\\r\\n                   <!--queryParamsHandling=\\\"merge\\\"-->\\r\\n                   <!--[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='knowledge'}\\\"-->\\r\\n                   <!--(click)=\\\"selectedSideBarTab='knowledge'\\\"-->\\r\\n                   <!--class=\\\"tab-theme\\\">Knowledge base-->\\r\\n              <!--</div>-->\\r\\n            <!--</div>-->\\r\\n          <!--</div>-->\\r\\n          <!--&lt;!&ndash;side bar ends&ndash;&gt;-->\\r\\n\\r\\n          <!--<div class=\\\"px-2 pt-2 pb-0 d-flex  w-100\\\">-->\\r\\n            <!--<app-pipeline (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='pipeline'\\\"-->\\r\\n                          <!--[bot]=\\\"bot\\\"></app-pipeline>-->\\r\\n            <!--<app-knowledge-base-wrapper [bot]=\\\"bot\\\" *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"></app-knowledge-base-wrapper>-->\\r\\n          <!--</div>-->\\r\\n\\r\\n        <!--</div>-->\\r\\n\\r\\n      <!--</div>-->\\r\\n\\r\\n    <!--</div>-->\\r\\n    <!--&lt;!&ndash;architeture ends&ndash;&gt;-->\\r\\n\\r\\n  <!--</div>-->\\r\\n\\r\\n<!--</div>-->\\r\\n\\r\\n<!--<ng-template #placeholder>-->\\r\\n  <!--<div class=\\\"row row-details\\\">-->\\r\\n    <!--<div class=\\\"col-2  d-flex flex-column align-items-center justify-content-start\\\">-->\\r\\n      <!--<i class=\\\"fa fa-area-chart p-0\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Total Session</span>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"col-2 pb-5 d-flex flex-column align-items-center\\\">-->\\r\\n      <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Total Users</span>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"col-2 d-flex flex-column align-items-center\\\">-->\\r\\n      <!--<i class=\\\"fa fa-envelope\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Total Messages</span>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"col-2 d-flex flex-column align-items-center\\\">-->\\r\\n      <!--<i class=\\\"fa fa-exchange\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Average Message Per Session</span>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"col-2 d-flex flex-column align-items-center\\\">-->\\r\\n      <!--<i class=\\\"fa fa-clock-o\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Total Time Spent(hh:mm)</span>-->\\r\\n    <!--</div>-->\\r\\n    <!--<div class=\\\"col-2 d-flex flex-column align-items-center\\\">-->\\r\\n      <!--<i class=\\\"fa fa-hourglass\\\"></i>-->\\r\\n      <!--<span class=\\\"number\\\">0</span>-->\\r\\n      <!--<span class=\\\"description\\\">Time Spent Per Session (hh:mm)</span>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n<!--</ng-template>-->\\r\\n\\r\\n<!--copied from code based bot below-->\\r\\n<!---->\\r\\n<div\\r\\n  [ngClass]=\\\"{'bot-detail-grid-architecture-full-screen':isArchitectureFullScreen,'bot-detail-grid':!isArchitectureFullScreen}\\\"\\r\\n  *ngIf=\\\"bot\\\">\\r\\n\\r\\n  <div class=\\\"header\\\" *ngIf=\\\"!isArchitectureFullScreen\\\">\\r\\n    <app-bot-detail-header [bot]=\\\"bot\\\" (refreshBotDetails$)=\\\"refreshBotDetails()\\\"></app-bot-detail-header>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex-column-last-child-flex-grow-1 config bg-white px-3 py-3 shadow-theme\\\" *ngIf=\\\"!isArchitectureFullScreen\\\">\\r\\n    <div class=\\\"d-flex-column-last-child-flex-grow-1 text-theme-normal justify-content-center\\\">\\r\\n      <div class=\\\"d-flex justify-content-between px-3\\\">\\r\\n\\r\\n        <div class=\\\"heading\\\" style=\\\"font-size: 14px !important;\\\">Bot Configuration</div>\\r\\n        <div *ngIf=\\\"!showConfig\\\" class=\\\"d-flex mx-4 justify-content-between align-items-center flex-grow-1\\\">\\r\\n          <div>Bot Unique Name : <strong>{{bot.bot_unique_name}}</strong></div>\\r\\n          <div>Session Time : <strong>{{bot.room_persistence_time}} min</strong></div>\\r\\n          <div>Advance Data Protection : <strong>{{bot.advanced_data_protection}}</strong></div>\\r\\n          <div>Data Retention Period : <strong>{{bot.data_persistence_period}} Days</strong></div>\\r\\n          <div>Blank Consent : <strong>{{bot.blanket_consent}}</strong></div>\\r\\n        </div>\\r\\n        <div class=\\\"cursor-pointer\\\"\\r\\n             (click)=\\\"togglePanel()\\\">\\r\\n          <i class=\\\"fa\\\" [ngClass]=\\\"{'fa-angle-up':showConfig, 'fa-angle-down':!showConfig}\\\"\\r\\n             style=\\\"font-size: 20px; line-height: 12px\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <app-bot-config (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"showConfig\\\" [bot]=\\\"(bot)\\\"></app-bot-config>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--============= REDESIGN=================-->\\r\\n\\r\\n  <div class=\\\"flex-column shadow-theme architecture bg-white p-1 px-2 my align-content-start\\\"\\r\\n       *myIf=\\\"myETabNames.lower_panel_bot_detail\\\">\\r\\n    <!--tabs start-->\\r\\n    <div class=\\\"px-2\\\">\\r\\n      <ul class=\\\"nav nav-tabs border-none theme-tabbing mb-1 bg-white\\\">\\r\\n        <li *myIf=\\\"myETabNames.architecture_tab\\\" class=\\\"nav-item\\\"\\r\\n            [ngClass]=\\\"{'tab-active':selectedTab==='architecture'}\\\">\\r\\n          <a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             (click)=\\\"tabChanged('architecture')\\\"\\r\\n             [queryParams]=\\\"{build:'architecture'}\\\"><strong>Architecture</strong></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item ml-auto\\\">\\r\\n          <a class=\\\"nav-link heading\\\"\\r\\n             [routerLink]=\\\"['.']\\\"\\r\\n             queryParamsHandling=\\\"merge\\\"\\r\\n             replaceUrl=\\\"true\\\"\\r\\n             [queryParams]=\\\"{isArchitectureFullScreen:!isArchitectureFullScreen}\\\">\\r\\n            <i class=\\\"fa\\\"\\r\\n               [ngClass]=\\\"{'fa-window-restore':isArchitectureFullScreen, 'fa-expand':!isArchitectureFullScreen}\\\"></i>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n    </div>\\r\\n    <!--tabs end-->\\r\\n    <!---->\\r\\n    <!--architeture starts-->\\r\\n    <div class=\\\"col-12 p-0\\\" style=\\\"height: 85%\\\" *ngIf=\\\"selectedTab==='architecture' &&  bot \\\">\\r\\n      <div class=\\\"col-12 architeture-body\\\" style=\\\"overflow-y: auto;height: 100%\\\" *myIf=\\\"myETabNames.architecture_items\\\">\\r\\n        <div class=\\\"d-flex row-body bg-white \\\" style=\\\"height: 98%\\\">\\r\\n          <!--TODO: 98% to avoid scroll bar; use grid instead-->\\r\\n          <!--side bar starts-->\\r\\n          <div class=\\\"side-bar  border-right\\\">\\r\\n            <div class=\\\"sidebar-content\\\">\\r\\n              <a routerLink=\\\".\\\"\\r\\n                 [queryParams]=\\\"{'build-tab':'pipeline'}\\\"\\r\\n                 queryParamsHandling=\\\"merge\\\"\\r\\n                 [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='pipeline'}\\\"\\r\\n                 (click)=\\\"selectedSideBarTab='pipeline'\\\"\\r\\n                 class=\\\"tab-theme font-weight-bold\\\">Pipeline\\r\\n              </a>\\r\\n              <div routerLink=\\\".\\\"\\r\\n                   [queryParams]=\\\"{'build-tab':'knowledge'}\\\"\\r\\n                   queryParamsHandling=\\\"merge\\\"\\r\\n                   [ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='knowledge'}\\\"\\r\\n                   (click)=\\\"selectedSideBarTab='knowledge'\\\"\\r\\n                   class=\\\"tab-theme\\\">Knowledge base\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!--side bar ends-->\\r\\n\\r\\n          <div class=\\\"px-2 pt-2 pb-0 d-flex  w-100\\\">\\r\\n            <app-pipeline\\r\\n              (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='pipeline'\\\"\\r\\n              [bot]=\\\"bot\\\"></app-pipeline>\\r\\n            <!--<app-knowledge-base (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"-->\\r\\n            <!--[bot]=\\\"bot\\\"></app-knowledge-base>-->\\r\\n            <app-knowledge-base-wrapper [bot]=\\\"bot\\\"\\r\\n                                        *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"></app-knowledge-base-wrapper>\\r\\n\\r\\n            <!--<app-code-input (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='code'\\\"-->\\r\\n                            <!--[bot]=\\\"bot\\\"></app-code-input>-->\\r\\n            <!--<app-integration-option-list (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='integration'\\\"-->\\r\\n                                         <!--[bot]=\\\"bot\\\"></app-integration-option-list>-->\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <!--architeture ends-->\\r\\n\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<app-imi-loader *ngIf=\\\"!bot\\\"></app-imi-loader>\\r\\n\\r\\n<ng-template #placeholder>\\r\\n  <div class=\\\"row row-details\\\">\\r\\n    <div class=\\\"col-2  d-flex flex-column align-items-center justify-content-start\\\">\\r\\n      <i class=\\\"fa fa-area-chart p-0\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Session</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 pb-5 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-users\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Users</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-envelope\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Messages</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-exchange\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Average Message Per Session</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-clock-o\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Total Time Spent(hh:mm)</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-2 d-flex flex-column align-items-center\\\">\\r\\n      <i class=\\\"fa fa-hourglass\\\"></i>\\r\\n      <span class=\\\"number\\\">0</span>\\r\\n      <span class=\\\"description\\\">Time Spent Per Session (hh:mm)</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","module.exports = \".bot-detail-grid {\\n  display: -ms-grid;\\n  display: grid;\\n  height: 100vh;\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: 40px 8px auto 8px minmax(60vh, 1fr);\\n      grid-template-rows: 40px auto minmax(60vh, 1fr);\\n  grid-gap: 8px;\\n      grid-template-areas: 'header'\\r 'config'\\r 'architecture'; }\\n  .bot-detail-grid .header {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: header; }\\n  .bot-detail-grid .config {\\n    -ms-grid-row: 3;\\n    -ms-grid-column: 1;\\n    grid-area: config; }\\n  .bot-detail-grid .architecture {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: architecture; }\\n  .row-details .fa {\\n  font-size: 30px;\\n  font-weight: 400;\\n  height: 40px;\\n  color: #00abd3; }\\n  .label {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #56627c;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .title {\\n  font-size: 16px;\\n  line-height: 16px;\\n  font-weight: 700;\\n  color: #56627c;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .description {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  text-align: center; }\\n  #channel-selector {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .architeture-body {\\n  height: 85%; }\\n  .architeture-body .side-bar {\\n    width: 12.5%;\\n    padding-right: 0px; }\\n  .architeture-body .tab {\\n    height: 32px;\\n    display: flex;\\n    align-items: center;\\n    padding: 6px;\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    cursor: pointer; }\\n  .architeture-body .tab:hover {\\n      background-color: #f7f7f7; }\\n  .scroll-wrapper {\\n  overflow-y: scroll;\\n  height: 90%; }\\n  app-knowledge-base-wrapper, app-code-input, app-integration-option-list, app-bot-testing {\\n  height: 100%;\\n  overflow-y: scroll;\\n  overflow-x: hidden;\\n  width: 100%;\\n  display: block; }\\n  app-integration-option-list {\\n  display: flex; }\\n  .bot-detail-grid-architecture-full-screen {\\n  display: -ms-grid;\\n  display: grid;\\n  height: calc(100vh - 76px);\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: minmax(60vh, 1fr);\\n      grid-template-rows: minmax(60vh, 1fr);\\n  grid-gap: 8px;\\n  margin-top: 10px;\\n      grid-template-areas: 'architecture'; }\\n  .bot-detail-grid-architecture-full-screen .architecture {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: architecture; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UpdateBotInfoByIdInBotInBotList} from '../../view-bots/ngxs/view-bot.action';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {UtilityService} from '../../../utility.service';\r\nimport {BotSessionsComponent} from '../bot-sessions/bot-sessions.component';\r\nimport {ServerService} from '../../../server.service';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {IOverviewInfoResponse} from '../../../../interfaces/Analytics2/overview-info';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ViewBotStateModel} from '../../view-bots/ngxs/view-bot.state';\r\nimport {ETabNames} from '../../../constants.service';\r\n\r\n@Component({\r\n  selector: 'app-pipeline-based-bot-detail',\r\n  templateUrl: './pipeline-based-bot-detail.component.html',\r\n  styleUrls: ['./pipeline-based-bot-detail.component.scss']\r\n})\r\nexport class PipelineBasedBotDetailComponent implements OnInit {\r\nmyETabNames = ETabNames\r\n\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  isArchitectureFullScreen = false;\r\n  @ViewChild(BotSessionsComponent) sessionChild: BotSessionsComponent;\r\n  selectedTab = \"architecture\";\r\n  bot$: Observable<IBot>;\r\n  bot: IBot;\r\n  bot_id: number;\r\n  showConfig:boolean =true;\r\n  overviewInfo$: Observable<IOverviewInfoResponse>;\r\n  selectedChannel: string = 'all';\r\n  start_date: string;\r\n  end_date: string;\r\n  selectedChannelDisplayName: string;\r\n  selectedDurationDisplayName: string = 'Monthly';\r\n  selectedSideBarTab: string = 'pipeline';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private serverService: ServerService,\r\n    private store: Store,\r\n    private utilityService: UtilityService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    let isArchitectureFullScreen = this.activatedRoute.snapshot.queryParamMap.get('isArchitectureFullScreen');\r\n    this.isArchitectureFullScreen = isArchitectureFullScreen==='true';\r\n\r\n    this.bot_id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\r\n    /*TODO: replace this code by writing proper selector*/\r\n    this.selectedTab = this.activatedRoute.snapshot.queryParamMap.get('build') || \"architecture\";\r\n    this.botlist$.subscribe((botlist) => {\r\n      this.bot = botlist.allBotList.find((bot) => {\r\n        return bot.id === this.bot_id;//\r\n      })\r\n    });\r\n\r\n    this.selectedSideBarTab = this.activatedRoute.snapshot.queryParamMap.get('build-tab')||'pipeline';\r\n\r\n    this.start_date = this.utilityService.getPriorDate(0);\r\n    this.end_date = this.utilityService.getPriorDate(30);\r\n    this.getOverviewInfo();\r\n    this.activatedRoute.queryParams.subscribe((queryParams)=>{\r\n      this.isArchitectureFullScreen= queryParams['isArchitectureFullScreen']==='true'\r\n    })\r\n\r\n  }\r\n\r\n  selectedChannelChanged(channel: string, name: string) {\r\n    this.selectedChannelDisplayName = name;\r\n    this.selectedChannel = channel;\r\n    this.getOverviewInfo();\r\n  }\r\n\r\n  selectedDurationChanged(priordays: number, name: string) {\r\n    this.selectedDurationDisplayName = name;\r\n    this.start_date = this.utilityService.getPriorDate(0);\r\n    this.end_date = this.utilityService.getPriorDate(priordays);\r\n    this.getOverviewInfo();\r\n  }\r\n\r\n  getOverviewInfo() {\r\n    /*TODO: improve below by adding all the fields*/\r\n    this.overviewInfo$ = this.serverService.getOverviewInfo({\r\n      bot_id: this.bot_id,\r\n      platform: this.selectedChannel,\r\n      start_date: this.start_date,\r\n      end_date: this.end_date\r\n    });\r\n  }\r\n\r\n  refreshSession() {\r\n    this.sessionChild.refreshSession();\r\n  }\r\n\r\n  tabChanged(tab: string) {\r\n    this.selectedTab = tab;\r\n  }\r\n\r\n  datachanged(data:IBot){\r\n    this.store.dispatch([\r\n      new UpdateBotInfoByIdInBotInBotList({data, botId:this.bot_id})\r\n    ]);\r\n  }\r\n\r\n  refreshBotDetails(){\r\n    this.serverService.fetchSpecificBotFromServerAndUpdateBotList(this.bot);\r\n  }\r\n\r\n  togglePanel(){\r\n    /*TODO: this code is repeated in code-based-bot-detail.component.ts, put it in a service*/\r\n    this.showConfig = !this.showConfig;\r\n    // this.router.navigate(['.'], {queryParams:{'show-config':this.showConfig}});\r\n    this.router.navigate([], {\r\n      relativeTo: this.activatedRoute,\r\n      queryParams: {\r\n        ...this.activatedRoute.snapshot.queryParams,\r\n        'show-config': this.showConfig\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  session works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-session',\r\n  templateUrl: './session.component.html',\r\n  styleUrls: ['./session.component.scss']\r\n})\r\nexport class SessionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-grid\\\">\\r\\n  <div class=\\\"row row-version my-2 m-0\\\" style=\\\"position: relative\\\" (clickOutside)=\\\"showVersionList = false\\\">\\r\\n    <div class=\\\"col-6 p-0\\\" [ngClass]=\\\"{'bg-theme-secondary':!selectedVersion}\\\">\\r\\n      <div *ngIf=\\\"selectedVersion\\\"\\r\\n           class=\\\"d-flex align-items-center flex-bot-versioning-toaster border-theme-secondary\\\">\\r\\n        <div class=\\\"version-active-label\\\" *ngIf=\\\"selectedVersion\\\"\\r\\n             [ngClass]=\\\"{'bg-label-active':selectedVersion?.id === activeVersion?.id,'bg-label-inactive':selectedVersion?.id !== activeVersion?.id}\\\">\\r\\n          <div>{{selectedVersion.id === (activeVersion && activeVersion.id)?'Active':'Inactive'}}</div>\\r\\n        </div>\\r\\n        <!--<button *ngIf=\\\"selectedVersion?.id === activeVersion?.id\\\" class=\\\"btn btn-theme-primary mr-1\\\"-->\\r\\n        <!--style=\\\"flex-basis: 56px\\\">Active-->\\r\\n        <!--</button>-->\\r\\n        <!--<button-->\\r\\n        <!--*ngIf=\\\"selectedVersion?.id !== activeVersion?.id\\\" class=\\\"btn btn-theme-dark mr-1\\\"-->\\r\\n        <!--style=\\\"flex-basis: 56px\\\">Inactive-->\\r\\n        <!--</button>-->\\r\\n        <div class=\\\"count mx-1 flex-shrink-0 flex-grow-0\\\">{{selectedVersion.version}}</div>\\r\\n        <div class=\\\"forked mr-1 pl-1\\\" *ngIf=\\\"selectedVersion.forked_from !== 0\\\">Forked from version\\r\\n          {{selectedVersion.forked_from}}\\r\\n        </div>\\r\\n        <div class=\\\"forked mr-1 pl-1\\\" *ngIf=\\\"selectedVersion.forked_from === 0\\\">Default created version\\r\\n        </div>\\r\\n        <div class=\\\"update d-flex flex-column mr-1 justify-content-center\\\">\\r\\n          <div>Last update</div>\\r\\n          <div class=\\\"d-flex justify-content-left pt-1\\\" *ngIf=\\\"selectedVersion\\\">\\r\\n            <!-- <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.updated_fields['df_template'], 'dark-green':activeTab==='df_template'}\\\"></i> -->\\r\\n               <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.changed_fields['df_template'], 'dark-green':selectedVersion.updated_fields['df_template']}\\\"></i>\\r\\n            <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.changed_fields['df_rules'], 'dark-green':selectedVersion.updated_fields['df_rules']}\\\"></i>\\r\\n            <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.changed_fields['generation_rules'], 'dark-green':selectedVersion.updated_fields['generation_rules']}\\\"></i>\\r\\n            <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.changed_fields['generation_templates'], 'dark-green':selectedVersion.updated_fields['generation_templates']}\\\"></i>\\r\\n            <i class=\\\"fa fa-circle\\\"\\r\\n               [ngClass]=\\\"{'text-danger':selectedVersion.changed_fields['workflow'], 'dark-green':selectedVersion.updated_fields['workflow']}\\\"></i>\\r\\n          </div>\\r\\n          <!--<form class=\\\"d-flex\\\">-->\\r\\n          <!--<input type=\\\"radio\\\" name=\\\"optradio\\\" checked>-->\\r\\n          <!--<input type=\\\"radio\\\" name=\\\"optradio\\\">-->\\r\\n          <!--<input type=\\\"radio\\\" name=\\\"optradio\\\">-->\\r\\n          <!--<input type=\\\"radio\\\" name=\\\"optradio\\\">-->\\r\\n          <!--<input type=\\\"radio\\\" name=\\\"optradio\\\">-->\\r\\n          <!--</form>-->\\r\\n        </div>\\r\\n        <div class=\\\"insert mr-1\\\"\\r\\n             [popover]=\\\"selectedVersion && selectedVersion.comment\\\"\\r\\n             placement=\\\"bottom\\\"\\r\\n             triggers=\\\"mouseenter:mouseleave\\\">{{selectedVersion.comment.length>70?(((selectedVersion.comment)|slice:0:100) +\\\"...\\\"):selectedVersion?.comment}}\\r\\n          <!--<div class=\\\"insert mr-1\\\">{{(selectedVersion.comment)|slice:0:100}}-->\\r\\n        </div>\\r\\n        <!---->\\r\\n        <i (click)=\\\"showVersionList= !showVersionList\\\"\\r\\n           *ngIf=\\\"bot.store_bot_versions.length > 1\\\"\\r\\n           class=\\\"fa py-2 px-3 bg-theme-primary text-white ml-auto cursor-pointer\\\"\\r\\n           [ngClass]=\\\"{'fa-angle-up':showVersionList, 'fa-angle-down':!showVersionList}\\\"\\r\\n           style=\\\"height: 100%\\\"></i>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <button [disabled]=\\\"!selectedVersion\\\"\\r\\n              class=\\\"btn btn-theme-primary-outline mr-1\\\"\\r\\n              (click)=\\\"saveSelectedVersion()\\\">\\r\\n        {{(!bot.store_bot_versions || !bot.store_bot_versions.length || bot.store_bot_versions.length>0)?\\\"Save\\\":\\\"Create\\\"}}\\r\\n        version\\r\\n      </button>\\r\\n      <!--SHOAIB, I DONT UNDERSTAND WHY FOLLOWING WAS DONE-->\\r\\n      <!--<button class=\\\"btn btn-theme-primary-outline\\\" *ngIf=\\\"selectedVersion\\\"-->\\r\\n              <!--[disabled]=\\\"!bot.store_bot_versions || bot.store_bot_versions.length===0\\\"-->\\r\\n              <!--(click)=\\\"openForkNewVersionModal(Primarytemplate)\\\">-->\\r\\n              <!--{{(selectedVersion.changed_fields['df_template'] || selectedVersion.changed_fields['df_rules']  ||-->\\r\\n               <!--selectedVersion.changed_fields['generation_rules'] || selectedVersion.changed_fields['generation_templates'] ||-->\\r\\n               <!--selectedVersion.changed_fields['workflow'])?\\\"Save as new version\\\":\\\"Create new version\\\"}}-->\\r\\n      <!--</button>-->\\r\\n      <button class=\\\"btn btn-theme-primary-outline\\\" *ngIf=\\\"selectedVersion\\\"\\r\\n              [disabled]=\\\"!bot.store_bot_versions || bot.store_bot_versions.length===0\\\"\\r\\n              (click)=\\\"openForkNewVersionModal(Primarytemplate)\\\">\\r\\n        Fork new version\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"row row-flex-bot-versioning-toaster border-theme-secondary  border-top-0 mx-0\\\"\\r\\n         *ngIf=\\\"showVersionList\\\" style=\\\"max-height: 50vh; overflow-y: scroll\\\">\\r\\n      <div class=\\\"col-12 py-1 px-0 cursor-pointer hover-change-background border-bottom-theme-secondary\\\"\\r\\n           *ngFor=\\\"let version of bot.store_bot_versions | filterActiveBot:selectedVersion.id\\\">\\r\\n        <div class=\\\"d-flex align-items-center flex-bot-versioning-toaster\\\"\\r\\n             (click)=\\\"changeSelectedVersion(version); showVersionList = false; tabClicked('df_template');\\\">\\r\\n          <!--<div class=\\\"active-label-text\\\">{{(version.id === (activeVersion && activeVersion.id))?'Active':'Inactive'}}</div>-->\\r\\n          <!--<p>{{activeVersion|json}}</p>-->\\r\\n          <div class=\\\"version-active-label\\\">\\r\\n            <div>{{version.id === (activeVersion && activeVersion.id)?'Active':'Inactive'}}</div>\\r\\n          </div>\\r\\n          <!--<div class=\\\"active-label-text\\\">{{version.id +\\\"\\\"+activeVersion.id }}</div>-->\\r\\n          <div class=\\\"count mr-1\\\">{{version.version}}</div>\\r\\n          <div class=\\\"forked mr-1 pl-1\\\" *ngIf=\\\"version.forked_from !== 0\\\">Forked from version\\r\\n            {{version.forked_from}}\\r\\n          </div>\\r\\n          <div class=\\\"forked mr-1 pl-1\\\" *ngIf=\\\"version.forked_from === 0\\\">Default created version\\r\\n          </div>\\r\\n          <!-- <div class=\\\"forked mr-1 pl-1\\\" [style.visibility]=\\\"version.forked_from>0 ? 'visible' : 'hidden'\\\">Forked from version\\r\\n            {{version.forked_from}}\\r\\n          </div> -->\\r\\n          <div class=\\\"update d-flex flex-column mr-1 justify-content-center\\\" *ngIf=\\\"version\\\">\\r\\n            <div class=\\\"mr-1\\\">Last update</div>\\r\\n            <div class = \\\"justify-content-left pt-1\\\">\\r\\n              <i class=\\\"fa fa-circle\\\"\\r\\n                 [ngClass]=\\\"{'dark-green':version.updated_fields['df_template']}\\\"></i>\\r\\n              <i class=\\\"fa fa-circle\\\"\\r\\n                 [ngClass]=\\\"{'dark-green':version.updated_fields['df_rules']}\\\"></i>\\r\\n              <i class=\\\"fa fa-circle\\\"\\r\\n                 [ngClass]=\\\"{'dark-green':version.updated_fields['generation_rules']}\\\"></i>\\r\\n              <i class=\\\"fa fa-circle\\\"\\r\\n                 [ngClass]=\\\"{'dark-green':version.updated_fields['generation_templates']}\\\"></i>\\r\\n              <i class=\\\"fa fa-circle\\\"\\r\\n                 [ngClass]=\\\"{'dark-green':version.updated_fields['workflow']}\\\"></i>\\r\\n\\r\\n            </div>\\r\\n            <!--<form>-->\\r\\n            <!--<input type=\\\"radio\\\" [checked]=\\\"false\\\">-->\\r\\n            <!--<input type=\\\"radio\\\">-->\\r\\n            <!--<input type=\\\"radio\\\">-->\\r\\n            <!--<input type=\\\"radio\\\">-->\\r\\n            <!--<input type=\\\"radio\\\">-->\\r\\n            <!--</form>-->\\r\\n          </div>\\r\\n          <div class=\\\"insert mr-1\\\" >{{version.comment.length>70?(((version.comment)|slice:0:100) +\\\"...\\\"):version?.comment}}\\r\\n          </div>\\r\\n          <i class=\\\" py-2 px-3 \\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row row-tabs\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"card \\\">\\r\\n\\r\\n\\r\\n        <!--tabs start-->\\r\\n        <div class=\\\"card-body p-0 mr-4\\\">\\r\\n          <ul class=\\\"nav nav-tabs theme-tabbing\\\">\\r\\n            <li class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active': activeTab===myEBotVersionTabs.df_template}\\\">\\r\\n              <a class=\\\"nav-link text-theme-normal\\\"\\r\\n                 (click)=\\\"tabClicked(myEBotVersionTabs.df_template)\\\">DF Template</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active': activeTab===myEBotVersionTabs.df_rules}\\\">\\r\\n              <a class=\\\"nav-link text-theme-normal\\\" (click)=\\\"tabClicked(myEBotVersionTabs.df_rules)\\\">DF\\r\\n                Rules</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-theme-normal\\\" [ngClass]=\\\"{'tab-active': activeTab===myEBotVersionTabs.generation_rules}\\\">\\r\\n              <a class=\\\"nav-link\\\"\\r\\n                 (click)=\\\"tabClicked(myEBotVersionTabs.generation_rules)\\\">Generation Rules</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-theme-normal\\\" [ngClass]=\\\"{'tab-active': activeTab===myEBotVersionTabs.generation_templates}\\\">\\r\\n              <a class=\\\"nav-link\\\"\\r\\n                 (click)=\\\"tabClicked(myEBotVersionTabs.generation_templates)\\\">Generation Template</a>\\r\\n            </li>\\r\\n            <li class=\\\"nav-item text-theme-normal\\\" [ngClass]=\\\"{'tab-active': activeTab===myEBotVersionTabs.workflow}\\\">\\r\\n              <a class=\\\"nav-link\\\"\\r\\n                 (click)=\\\"tabClicked(myEBotVersionTabs.workflow)\\\">Workflows</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n\\r\\n          <!--tabs end-->\\r\\n\\r\\n          <!--code editor starts-->\\r\\n          <!--todo: make this row independent-->\\r\\n          <!--<div class=\\\"row pl-3 genTempGrid pt-2\\\" *ngIf=\\\"activeTab === 'generationTemplates'\\\">-->\\r\\n            <!--<div class=\\\"genTempGridItem intent-header\\\">-->\\r\\n              <!--<div class=\\\"text-bold\\\">Intent Header</div>-->\\r\\n              <!--<input type=\\\"text\\\" placeholder=\\\"Search Intent\\\">-->\\r\\n\\r\\n              <!--&lt;!&ndash; these div's will come from *ngFor &ndash;&gt;-->\\r\\n              <!--<div class=\\\"p-1\\\" *ngFor=\\\"let x of intentList\\\">{{x.name}}</div>-->\\r\\n            <!--</div>-->\\r\\n            <!--<div class=\\\"genTempGridItem\\\">-->\\r\\n              <!--<div class=\\\"col-12 pt-2 d-flex justify-content-end\\\">-->\\r\\n                <!--<label for=\\\"uploadInput\\\" class=\\\"btn btn-theme-primary-outline\\\">Upload File-->\\r\\n                  <!--<input type=\\\"file\\\"-->\\r\\n                         <!--hidden-->\\r\\n                         <!--id=\\\"uploadInput\\\"-->\\r\\n                         <!--accept='text/plain' multiple-->\\r\\n                         <!--(change)='openFile(uploadInput);uploadInput.value=null'-->\\r\\n                         <!--#uploadInput>-->\\r\\n                <!--</label>-->\\r\\n              <!--</div>-->\\r\\n              <!--&lt;!&ndash;&ndash;&gt;-->\\r\\n              <!--<div class=\\\"col-12 \\\">-->\\r\\n                <!--<app-code-editor [text]=\\\"editorCode\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n              <!--</div>-->\\r\\n            <!--</div>-->\\r\\n            <!--<div class=\\\"genTempGridItem bot-templates\\\">-->\\r\\n              <!--<ul>-->\\r\\n                <!--<li class=\\\"bot-template-heading\\\">-->\\r\\n                  <!--<div class=\\\"text-bold\\\">Bot Response Template</div>-->\\r\\n                  <!--<div class=\\\"text-lite\\\">Drag & Drop elements to add to response</div>-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n                <!--<li>-->\\r\\n                  <!--<i class=\\\"fa fa-users\\\"></i>-->\\r\\n                  <!--Textie-->\\r\\n                <!--</li>-->\\r\\n              <!--</ul>-->\\r\\n              <!--&lt;!&ndash; <div class=\\\"template-heading\\\">-->\\r\\n                <!--<div>Bot Response Templates</div>-->\\r\\n              <!--</div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\">-->\\r\\n                <!--<i class=\\\"fa fa-users\\\" style=\\\"font-size: 12px\\\"></i>-->\\r\\n                <!--dasdasd das das da sda-->\\r\\n              <!--</div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div>-->\\r\\n              <!--<div class=\\\"bot-templates\\\"></div> &ndash;&gt;-->\\r\\n\\r\\n            <!--</div>-->\\r\\n          <!--</div>-->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--<div class=\\\"code-editor-row code-editor-row-min position-relative\\\" *ngIf=\\\"showConfig\\\">-->\\r\\n        <!--<app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.df_template\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.df_template]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n        <!--<app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.df_rules\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.df_rules]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n        <!--<app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.generation_rules\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.generation_rules]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n        <!--<app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.generation_templates\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.generation_templates]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n        <!--<app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.workflow\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.workflow]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>-->\\r\\n  <!--</div>-->\\r\\n  <div class=\\\"code-editor-row code-editor-row-max position-relative\\\">\\r\\n        <app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.df_template\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.df_template]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>\\r\\n        <app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.df_rules\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.df_rules]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>\\r\\n        <app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.generation_rules\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.generation_rules]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>\\r\\n        <app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.generation_templates\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.generation_templates]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>\\r\\n        <app-code-editor [hidden]=\\\"activeTab!==myEBotVersionTabs.workflow\\\" [text]=\\\"editorCodeObj[myEBotVersionTabs.workflow]\\\" (textChangedEvent)=\\\"saveText($event)\\\"></app-code-editor>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n<!--fork new version modal starts-->\\r\\n<ng-template #Primarytemplate>\\r\\n  <div class=\\\"primary-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\" style=\\\"display: block!important;\\\">\\r\\n      <div class=\\\"d-flex\\\">\\r\\n        <h4 class=\\\"modal-title mb-2\\\"> Fork to a new version</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <p>By default it will be saved and not be made active. You need to update changes to make it active.</p>\\r\\n\\r\\n        <!--<button type=\\\"button\\\" class=\\\"close pull-right p-2\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">-->\\r\\n            <!--<span aria-hidden=\\\"true\\\">&times;</span>-->\\r\\n          <!--</button>-->\\r\\n      <!--<h4 class=\\\"modal-title mb-2\\\"> Fork to a new version</h4>-->\\r\\n      <!--<p>It will not be made active by default but saved. You need to update changes to make it active</p>-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form class=\\\"row\\\" #fork_new_version_form=\\\"ngForm\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3 d-flex justify-content-end\\\">\\r\\n          <label for=\\\"\\\">Fork from</label>\\r\\n        </div>\\r\\n        <!---->\\r\\n        <div class=\\\"col-md-9 px-0 d-flex justify-content-start\\\">\\r\\n          <!--<input type=\\\"password\\\" [(ngModel)]=\\\"forked_From\\\" name=\\\"old_password\\\">-->\\r\\n          <select class=\\\"concept1\\\" [(ngModel)]=\\\"forked_version_number\\\" required type=\\\"number\\\" name=\\\"version_id\\\" #select>\\r\\n            <option type=\\\"button\\\" *ngFor=\\\"let version of bot.store_bot_versions\\\">\\r\\n              <button>{{version.version}}</button>\\r\\n            </option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3 my-2\\\">\\r\\n          <label for=\\\"\\\">Comments on the new version</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-9 px-0 d-flex justify-content-start my-2\\\">\\r\\n          <textarea type=\\\"text\\\" style=\\\"width: 100%\\\" [(ngModel)]=\\\"forked_comments\\\" name=\\\"comment\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <p *ngIf=\\\"errorMessage\\\" class=\\\"text-danger\\\">{{errorMessage}}</p>\\r\\n          <button class=\\\"btn btn-theme-primary-outline mr-1\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n          <!--<button class=\\\"btn btn-theme-primary\\\" (click)=\\\"forkNewVersion()\\\">-->\\r\\n            <!--{{(selectedVersion.changed_fields['df_template'] || selectedVersion.changed_fields['df_rules']  ||-->\\r\\n               <!--selectedVersion.changed_fields['generation_rules'] || selectedVersion.changed_fields['generation_templates'] ||-->\\r\\n               <!--selectedVersion.changed_fields['workflow'])?\\\"Save as new version\\\":\\\"Create new version\\\"}}-->\\r\\n          <!--</button>-->\\r\\n\\r\\n          <button class=\\\"btn btn-theme-primary\\\" (click)=\\\"forkNewVersion()\\\">\\r\\n            Fork\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!--fork new version modal end-->\\r\\n\"","module.exports = \"::ng-deep .code-editor-row-min .CodeMirror, ::ng-deep .code-editor-row-min .CodeMirror-scroll {\\n  width: 100% !important;\\n  height: 100% !important; }\\n\\n::ng-deep .code-editor-row-max .CodeMirror, ::ng-deep .code-editor-row-max .CodeMirror-scroll {\\n  width: 100% !important;\\n  height: 100% !important; }\\n\\n.card {\\n  border: none; }\\n\\n.active {\\n  border-color: white !important;\\n  border-bottom: 2px solid #00abd3 !important; }\\n\\n.nav-link {\\n  font-size: 12px; }\\n\\n.row-flex-bot-versioning-toaster {\\n  background-color: white;\\n  position: absolute;\\n  top: 100%;\\n  left: 0;\\n  z-index: 20;\\n  width: 50%; }\\n\\n.text-bold {\\n  font-size: 13px;\\n  font-weight: bold;\\n  color: #474747; }\\n\\n.text-lite {\\n  font-size: 11px;\\n  color: #9e9e9e; }\\n\\n.genTempGrid {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1fr 2.5fr 1fr;\\n      grid-template-columns: 1fr 2.5fr 1fr;\\n  background-color: #f7f7f7; }\\n\\n.intent-header {\\n  background-color: #ffffff; }\\n\\n.intent-header .text-bold {\\n    padding: 4px; }\\n\\n.intent-header input {\\n    margin: 4px;\\n    height: 25px;\\n    border-radius: 2px;\\n    width: 95%;\\n    border: solid 1px #e0e0e0;\\n    padding-left: 8px; }\\n\\n.bot-templates {\\n  border-left: solid 1px #e0e0e0; }\\n\\n.bot-templates ul {\\n    list-style-type: none;\\n    padding: 0;\\n    padding-right: 30px;\\n    padding-left: 15px; }\\n\\n.bot-templates ul > li {\\n      color: #474747;\\n      background-color: #ffffff;\\n      height: 40px;\\n      margin-bottom: 8px;\\n      border-radius: 2px;\\n      list-style-type: none;\\n      display: flex;\\n      align-items: center;\\n      padding: 5px; }\\n\\n.bot-templates ul > li .fa {\\n        font-size: 12px;\\n        margin-right: 8px; }\\n\\n.bot-templates ul .bot-template-heading {\\n      flex-direction: column;\\n      height: auto; }\\n\\n.bot-templates ul .bot-template-heading {\\n      background-color: #f7f7f7; }\\n\\n.flex-bot-versioning-toaster {\\n  height: 32px;\\n  width: 100%; }\\n\\n.flex-bot-versioning-toaster .bg-label-active {\\n    background-color: #00abd3;\\n    color: white; }\\n\\n.flex-bot-versioning-toaster .bg-label-inactive {\\n    background-color: #474747;\\n    color: white; }\\n\\n.flex-bot-versioning-toaster .count {\\n    text-align: left;\\n    font-size: 20px;\\n    line-height: 24px;\\n    font-weight: 700;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.flex-bot-versioning-toaster form {\\n    display: flex;\\n    justify-content: center; }\\n\\n.flex-bot-versioning-toaster input[type=radio] {\\n    width: 6px;\\n    margin-right: 3px; }\\n\\n.flex-bot-versioning-toaster .forked, .flex-bot-versioning-toaster .update, .flex-bot-versioning-toaster .update > div {\\n    text-align: left;\\n    font-size: 11px;\\n    line-height: 10px;\\n    font-weight: 700;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    flex-shrink: 0;\\n    flex-grow: 0; }\\n\\n.flex-bot-versioning-toaster .forked {\\n    flex-basis: 84px; }\\n\\n.flex-bot-versioning-toaster .update {\\n    flex-basis: 80px;\\n    text-align: center;\\n    -ms-grid-row-align: stretch;\\n        align-self: stretch; }\\n\\n.flex-bot-versioning-toaster .update .fa {\\n      margin-right: 2px;\\n      color: #bebebe;\\n      font-size: 7px; }\\n\\n.flex-bot-versioning-toaster .update .dark-green {\\n      color: #8cd82f; }\\n\\n.flex-bot-versioning-toaster .insert {\\n    font-size: 11px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n\\n.primary-modal .modal-header {\\n    color: #474747; }\\n\\n.primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\\n.primary-modal .modal-body .fa {\\n  font-size: 48px;\\n  color: #00abd3;\\n  padding: 10px 0px; }\\n\\n.danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n\\n.danger-modal .modal-header {\\n    color: #474747; }\\n\\n.danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\\n.modal-body {\\n  padding: 25px 20px !important; }\\n\\n.modal-body label {\\n    font-size: 11px; }\\n\\n.modal-body input {\\n    border-radius: 2px;\\n    border: solid 1px #e0e0e0;\\n    height: 28px;\\n    width: 150px;\\n    padding: 0px 8px; }\\n\\n.modal-body hr {\\n    border-color: #e0e0e0; }\\n\\n.version-active-label {\\n  align-self: stretch;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-basis: 60px;\\n  flex-shrink: 0;\\n  flex-grow: 0; }\\n\\n.hover-change-background:hover {\\n  background-color: #ededed; }\\n\\napp-code-editor {\\n  height: 100%;\\n  width: 80vw;\\n  display: flex; }\\n\\n.container-grid {\\n  height: 100%;\\n  display: -ms-grid;\\n  display: grid;\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: auto auto 1fr;\\n      grid-template-rows: auto auto 1fr;\\n      grid-template-areas: 'version' 'tabs' 'editor'; }\\n\\n.container-grid .row-version {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: version; }\\n\\n.container-grid .row-tabs {\\n    -ms-grid-row: 2;\\n    -ms-grid-column: 1;\\n    grid-area: tabs; }\\n\\n.container-grid .code-editor-row {\\n    -ms-grid-row: 3;\\n    -ms-grid-column: 1;\\n    grid-area: editor; }\\n\"","import {Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {Store, Select} from '@ngxs/store';\r\nimport {IBot, IBotVersionData, IBotVersionResult, ICode} from '../../../../../interfaces/IBot';\r\nimport {ServerService} from '../../../../../../server.service';\r\nimport {ConstantsService} from '../../../../../../constants.service';\r\nimport {\r\n  SaveVersionInfoInBot,\r\n  UpdateBotInfoByIdInBotInBotList,\r\n  UpdateVersionInfoByIdInBot\r\n} from '../../../../../view-bots/ngxs/view-bot.action';\r\nimport {SaveCodeInfo} from '../../../../ngxs/buildbot.action';\r\nimport {ViewBotStateModel} from '../../../../../view-bots/ngxs/view-bot.state';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {IHeaderData} from '../../../../../../../interfaces/header-data';\r\nimport {UtilityService} from '../../../../../../utility.service';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {IBotCreationState} from '../../../../ngxs/buildbot.state';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {CodeEditorComponent} from '../code-editor/code-editor.component';\r\nimport {EBotType} from '../../../../../view-bots/view-bots.component';\r\nimport {EventService} from '../../../../../../event.service';\r\nimport {take} from 'rxjs/operators';\r\n\r\nexport enum EBotVersionTabs {\r\n  df_template = 'df_template',\r\n  df_rules = 'df_rules',\r\n  generation_rules = 'generation_rules',\r\n  generation_templates = 'generation_templates',\r\n  workflow = 'workflow'\r\n}\r\n\r\n@Component({\r\n  selector: 'app-code-input',\r\n  templateUrl: './code-input.component.html',\r\n  styleUrls: ['./code-input.component.scss'],\r\n\r\n})\r\nexport class CodeInputComponent implements OnInit, OnDestroy {\r\n\r\n  showConfig = true;\r\n  myEBotVersionTabs = EBotVersionTabs;\r\n  activeTab: string = 'df_template';\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  botlist$_sub: Subscription;\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  @Input() bot: IBot;\r\n  @Output() datachanged$ = new EventEmitter();\r\n  modalRef: BsModalRef;\r\n  forked_From: number;\r\n  forked_comments: string;\r\n  errorMessage: string;\r\n  activeVersion:IBotVersionData;\r\n  forked_version_number: number ;\r\n  // @ViewChild('fork_new_version_form') fork_new_version_form: HTMLFormElement;\r\n\r\n  editorCode;\r\n  // editorCodeObj:{text:string} = {text:\"\"};\r\n  editorCodeObj = {\r\n    'df_template': {text: ''},\r\n    'df_rules': {text: ''},\r\n    'generation_rules': {text: ''},\r\n    'generation_templates': {text: ''},\r\n    'workflow': {text: ''},\r\n  };\r\n  showVersionList = false;\r\n\r\n  selectedVersion: IBotVersionData;\r\n  code: ICode;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private constantsService: ConstantsService,\r\n    private eventService: EventService,\r\n    private utilityService: UtilityService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private modalService: BsModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.queryParams.subscribe((queryParam) => {\r\n      /*when upper panel minimizes or maximizes, change lower panel height accordingly*/\r\n      let showConfigStr = this.activatedRoute.snapshot.queryParamMap.get('show-config');\r\n      this.showConfig = (showConfigStr === 'true' || showConfigStr == undefined);\r\n    });\r\n\r\n    // let url = this.constantsService.getAllVersionsByBotId();\r\n    // let botId = this.bot.id;\r\n    // this.serverService.makeGetReq<IBotVersionResult>({url, headerData: {'bot-access-token': this.bot.bot_access_token}})\r\n    //   .subscribe((botVersionResult) => {\r\n    //     this.store.dispatch([\r\n    //       new SaveVersionInfoInBot({data: botVersionResult.objects, botId: this.bot.id})\r\n    //     ]);\r\n    //   });\r\n    this.serverService.getAllVersionOfBotFromServerAndStoreInBotInBotList(this.bot.id, this.bot.bot_access_token);\r\n    this.botlist$_sub = this.botlist$.subscribe((value) => {\r\n      this.utilityService.getActiveVersionInBot(this.bot);\r\n      // let activeVersion = this.bot.store_bot_versions && this.bot.store_bot_versions.find((BotVersion) => {\r\n      //   return this.bot.active_version_id === BotVersion.id;\r\n      // });\r\n      /*\r\n      * if active version exists, selected version =active version\r\n      * otherwise, selected version = first version, if that exists\r\n      * */\r\n      let activeVersion = this.activeVersion = this.utilityService.getActiveVersionInBot(this.bot);\r\n      if(this.selectedVersion)\r\n        this.selectedVersion = this.selectedVersion;\r\n      else\r\n        this.selectedVersion = activeVersion ? activeVersion : (this.bot.store_bot_versions && this.bot.store_bot_versions.length && this.bot.store_bot_versions[0]);\r\n      this.forked_version_number = this.selectedVersion && this.selectedVersion.version;\r\n      // if (!activeVersion) {\r\n      //   try {\r\n      //     this.selectedVersion = this.bot.store_bot_versions[0];\r\n      //   } catch (e) {\r\n      //     console.log(e);\r\n      //   }\r\n      // }\r\n      // if (!this.selectedVersion) {\r\n      // this.selectedVersion = activeVersion;\r\n      this.activeTab = this.activatedRoute.snapshot.queryParamMap.get('code-tab') || EBotVersionTabs.df_template;\r\n      // }\r\n      this.bot.store_selected_version = this.selectedVersion && this.selectedVersion.id;\r\n      this.tabClicked(this.activeTab);\r\n\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n\r\n\r\n  }\r\n\r\n  async openFile(inputEl) {\r\n    this.editorCodeObj[this.activeTab].text = await this.utilityService.readInputFileAsText(inputEl);\r\n    this.editorCodeObj[this.activeTab] = {...this.editorCodeObj[this.activeTab]};\r\n  }\r\n\r\n  @ViewChild(CodeEditorComponent) codeEditorComponent: ElementRef;\r\n\r\n\r\n  tabClicked(activeTab: string) {\r\n\r\n    this.activeTab = activeTab;\r\n    /*TODO: We dont need code here... just replace it with selectedVersion. Also we dont need ICode interface*/\r\n    if (this.selectedVersion) {\r\n      this.editorCodeObj[this.activeTab].text = this.selectedVersion[this.activeTab];\r\n      this.editorCodeObj[this.activeTab] = {...this.editorCodeObj[this.activeTab]};\r\n    }\r\n    this.router.navigate([`core/botdetail/${EBotType.chatbot}/`, this.bot.id], {\r\n      queryParams: {'code-tab': activeTab},\r\n      queryParamsHandling: 'merge',\r\n      replaceUrl: true\r\n    });\r\n  }\r\n\r\n  saveText(codeStr: string) {\r\n    /*\r\n    *at this point some changes have been made to selected version's codeText\r\n    * */\r\n\r\n    if (this.selectedVersion && this.selectedVersion.id) {\r\n      let selectedVersion_pristine = this.bot.store_bot_versions && this.bot.store_bot_versions.find((version) => version.id === this.selectedVersion.id);\r\n      let codeTextPristine = selectedVersion_pristine[this.activeTab];\r\n      if (!this.selectedVersion.changed_fields[this.activeTab])/*If field is dirty from server, nothing can change it*/\r\n        this.selectedVersion.changed_fields[this.activeTab] = codeStr !== codeTextPristine;\r\n      this.selectedVersion[this.activeTab] = codeStr;\r\n    } else {\r\n      /*we are creating a new version*/\r\n      /*find bot version with id = -1*/\r\n      let new_version: Partial<IBotVersionData> = this.bot.store_bot_versions && this.bot.store_bot_versions.find((version) => version.id === -1);\r\n      if (!new_version) {\r\n        new_version = this.constantsService.getNewBotVersionTemplate(this.bot.id);\r\n        if (!this.bot.store_bot_versions) {\r\n          this.bot.store_bot_versions = [];\r\n        }\r\n        this.bot.store_bot_versions.push(new_version);\r\n      }\r\n      this.selectedVersion = new_version;\r\n      this.selectedVersion[this.activeTab] = codeStr;\r\n    }\r\n    /*comparing old code text to new*/\r\n\r\n\r\n  }\r\n\r\n  saveSelectedVersion() {\r\n\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': this.bot.bot_access_token\r\n    };\r\n    this.selectedVersion.updated_fields = this.selectedVersion.changed_fields;\r\n    this.selectedVersion.changed_fields = {\r\n      \"df_template\" : false,\r\n      \"df_rules\" : false,\r\n      \"generation_rules\" : false,\r\n      \"generation_template\" : false,\r\n      \"workflows\" : false\r\n    }\r\n    if (this.selectedVersion.id && this.selectedVersion.id !== -1) {\r\n      let url = this.constantsService.getSaveVersionByBotId(this.bot.id);\r\n      this.serverService.makePutReq({url, body: this.selectedVersion, headerData})\r\n        .subscribe((value: IBotVersionData) => {\r\n          this.selectedVersion = Object.assign(this.selectedVersion, value);\r\n          console.log(this.bot.store_bot_versions);\r\n          this.store.dispatch([\r\n            new UpdateVersionInfoByIdInBot({data: value, botId: this.bot.id})\r\n          ]);\r\n          this.utilityService.showSuccessToaster('New version saved');\r\n        });\r\n    } else {\r\n      let url = this.constantsService.getCreateNewVersionByBotId(this.bot.id);\r\n      let body = this.selectedVersion;\r\n      delete body.id;\r\n      delete body.resource_uri;\r\n      delete body.forked_from;\r\n      /*remove version id = -1, from store*/\r\n      this.bot.store_bot_versions.length = 0;\r\n      this.serverService.makePostReq({url, body, headerData})\r\n        .subscribe((forkedVersion: IBotVersionData) => {\r\n          console.log(forkedVersion);\r\n          this.selectedVersion = forkedVersion;\r\n          this.utilityService.showSuccessToaster('New version forked');\r\n          this.store.dispatch([\r\n            new UpdateVersionInfoByIdInBot({data: forkedVersion, botId: this.bot.id})\r\n          ]);\r\n          // this.ngOnInit();\r\n          /*TODO: implement it correctly*/\r\n        });\r\n    }\r\n  }\r\n\r\n  openForkNewVersionModal(template) {\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-md'});\r\n    return;\r\n\r\n    // let headerData: IHeaderData = {\r\n    //   'bot-access-token': this.bot.bot_access_token\r\n    // };\r\n    // let url = this.constantsService.getCreateNewVersionByBotId(this.bot.id);\r\n    // // this.selectedVersion.version=12;\r\n    //\r\n    // delete this.selectedVersion.id;\r\n    // delete this.selectedVersion.resource_uri;\r\n    // delete this.selectedVersion.resource_uri;\r\n    //\r\n    // this.serverService.makePostReq({url, body: this.selectedVersion, headerData})\r\n    //   .subscribe((forkedVersion: IBotVersionData) => {\r\n    //     console.log(forkedVersion);\r\n    //     this.selectedVersion = forkedVersion;\r\n    //     this.utilityService.showSuccessToaster('new version forked successfully!')\r\n    //     ;\r\n    //     this.ngOnInit();\r\n    //     /*TODO: implement it correctly*/\r\n    //   });\r\n  }\r\n\r\n  forkNewVersion() {\r\n\r\n    if (!this.forked_version_number) {\r\n      this.flashErrorMessage('Please select version id');\r\n      return;\r\n    }\r\n    this.modalRef.hide();\r\n    let forkedVersionInfo = this.bot.store_bot_versions.find((versions) => versions.version == this.forked_version_number);\r\n    forkedVersionInfo = {...forkedVersionInfo};\r\n    forkedVersionInfo.updated_fields = forkedVersionInfo.changed_fields;\r\n    forkedVersionInfo.changed_fields = {\r\n      \"df_template\" : false,\r\n      \"df_rules\" : false,\r\n      \"generation_rules\" : false,\r\n      \"generation_template\" : false,\r\n      \"workflows\" : false\r\n    }\r\n    forkedVersionInfo.comment = this.forked_comments;\r\n    forkedVersionInfo.forked_from = this.forked_version_number;\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': this.bot.bot_access_token\r\n    };\r\n    let url = this.constantsService.getCreateNewVersionByBotId(this.bot.id);\r\n    delete forkedVersionInfo.id;\r\n    delete forkedVersionInfo.resource_uri;\r\n    delete forkedVersionInfo.resource_uri;\r\n\r\n    this.serverService.makePostReq({url, body: forkedVersionInfo, headerData})\r\n      .subscribe((forkedVersion: IBotVersionData) => {\r\n        console.log(forkedVersion);\r\n        this.bot.store_bot_versions.push(forkedVersion);\r\n        this.utilityService.showSuccessToaster('New version forked');\r\n        this.forked_comments = '';\r\n        this.forked_version_number = null;\r\n        this.store.dispatch([\r\n          new UpdateVersionInfoByIdInBot({botId: this.bot.id, data: forkedVersion})\r\n        ]).subscribe(() => {\r\n          this.changeSelectedVersion(forkedVersion)\r\n          // this.selectedVersion = forkedVersion;\r\n        });\r\n        // this.ngOnInit();\r\n        /*TODO: implement it correctly*/\r\n      });\r\n  }\r\n\r\n  changeSelectedVersion(version) {\r\n    this.bot.store_selected_version = version.id;\r\n    this.selectedVersion = version;\r\n    this.forked_version_number = this.selectedVersion.version;\r\n    this.tabClicked(this.activeTab);\r\n  }\r\n\r\n  toggleVersionList() {\r\n    return this.showVersionList = !this.showVersionList;\r\n  }\r\n\r\n  flashErrorMessage(message: string) {\r\n    this.errorMessage = message;\r\n    setTimeout(() => {\r\n      this.errorMessage = '';\r\n    }, 3000);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.botlist$_sub && this.botlist$_sub.unsubscribe();\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"card mb-2\\\">\\r\\n  <div class=\\\"card-body d-flex justify-content-between justify-content-center\\\">\\r\\n    <div class=\\\"org-detail d-flex justify-content-center\\\">\\r\\n      <img style=\\\"height: 20px\\\" class=\\\"pr-2\\\" src=\\\"https://dev.imibot.ai/assets/img/app/integrations/imiconnect.png\\\"\\r\\n           alt=\\\"\\\">\\r\\n      <span class=\\\"lead-text\\\">IMICONNECT</span>\\r\\n    </div>\\r\\n    <div class=\\\"switch\\\">\\r\\n      <ui-switch size=\\\"small\\\" switchColor=\\\"white\\\" style=\\\"height: 10px\\\" defaultBgColor=\\\"grey\\\" (change)=\\\"onChange($event)\\\"\\r\\n                 [checked]=\\\"false\\\"></ui-switch>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row d-flex justify-content-center\\\">\\r\\n  <div class=\\\"col-11\\\">\\r\\n    <div [hidden]=\\\"isActive\\\" class=\\\"form-context\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>App id</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter app id\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>App id</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter app id\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label>App id</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter app id\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".card {\\n  border: none; }\\n  .card .card-body {\\n    border-bottom: 1px solid rgba(128, 128, 128, 0.72); }\\n  .form-context label {\\n  font-size: 12px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding-bottom: 0;\\n  margin-bottom: 0; }\\n  .form-context input {\\n  padding: 0;\\n  margin-top: 0;\\n  margin-left: 1px;\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  border-bottom: 1px solid #e0e0e0;\\n  border-radius: 0; }\\n  .form-context input::-webkit-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .form-context input:-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .form-context input::-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .form-context input::placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .form-context .lead-text {\\n  font-size: 16px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-integration-item',\r\n  templateUrl: './integration-item.component.html',\r\n  styleUrls: ['./integration-item.component.scss']\r\n})\r\nexport class IntegrationItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  @Input()  orgName:string;\r\n  @Input()  formFields:string[];\r\n  isActive:boolean;\r\n\r\n  ngOnInit() {\r\n  }\r\n  onChange($event){\r\n    this.isActive  = $event;\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {StoreVariableService} from './store--variable.service';\r\nimport {Observable} from 'rxjs';\r\nimport {Select} from '@ngxs/store';\r\nimport {IAppState} from '../../../../../../ngxs/app.state';\r\nimport {UtilityService} from '../../../../../../utility.service';\r\n\r\n@Pipe({\r\n  name: 'displayNameForKeyIntegration'\r\n})\r\nexport class DisplayNameForKeyIntegrationPipe implements PipeTransform {\r\n\r\n  constructor(private utilityService:UtilityService){}\r\n\r\n  transform(key: any, args?: any): any {\r\n    return this.utilityService.getDisplayNameForKey_Integration(key);\r\n    // return key;\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<button (click)=\\\"click()\\\">click()</button>-->\\r\\n<!--<form #test=\\\"ngForm\\\">-->\\r\\n  <!--<ui-switch type=\\\"checkbox\\\" size=\\\"small\\\" ngModel [checked]=\\\"false\\\"  name=\\\"enabled\\\" ></ui-switch>-->\\r\\n<!--</form>-->\\r\\n<form class=\\\"grid-integrations form-theme\\\" style=\\\"width: 100%; overflow-y: auto\\\" #form_new=\\\"ngForm\\\">\\r\\n\\r\\n  <div *ngFor=\\\"let form_value_key of myObject.keys(formValue)\\\"\\r\\n       class=\\\"grid-integration-groups px-4 mb-3\\\"\\r\\n       ngModelGroup=\\\"{{form_value_key}}\\\">\\r\\n    <div class=\\\"integration-heading\\\">{{form_value_key|integrationNameFormatter|titlecase}}</div>\\r\\n    <div\\r\\n      *ngFor=\\\"let integration_keys of myObject.keys(formValue[form_value_key])\\\"\\r\\n      requiredIfOneFilledValidator\\r\\n      ngModelGroup=\\\"{{integration_keys}}\\\"\\r\\n      class=\\\"border px-3\\\">\\r\\n      <div class=\\\"d-flex justify-content-center align-items-center\\\" style=\\\"height: 90px\\\">\\r\\n        <img\\r\\n             style=\\\"height: 16px; width: 16px\\\"\\r\\n             [src]=\\\"getLogo(integration_keys)\\\"\\r\\n             alt=\\\"\\\">\\r\\n        <div class=\\\"heading my-0 mx-2\\\">{{integration_keys.toUpperCase()}}</div>\\r\\n        <ui-switch size=\\\"small\\\" [checked]=\\\"false\\\" ngModel name=\\\"enabled\\\" (change)=\\\"onSwitchChange(formValueFinal[form_value_key][integration_keys])\\\"></ui-switch>\\r\\n      </div>\\r\\n      <div [hidden]=\\\"!formValueFinal[form_value_key][integration_keys]['enabled']\\\" >\\r\\n        <div *ngFor=\\\"let integration_input_keys of formValue[form_value_key][integration_keys]|integrationInputKeysFilter\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"required\\\">{{integration_input_keys|displayNameForKeyIntegration}}</label>\\r\\n            <input ngModel type=\\\"text\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n                   [name]=\\\"integration_input_keys\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"[requiredifonefilledvalidator].ng-invalid {\\n  border: 1px solid red !important; }\\n\\n.ngModelGroup-border {\\n  padding: 1px;\\n  padding-top: 8px;\\n  padding-bottom: 8px;\\n  border-radius: 2px;\\n  margin-bottom: 8px;\\n  border: 1px solid rgba(128, 128, 128, 0.72); }\\n\\n.grid-integrations label {\\n  color: #00abd3; }\\n\\n.grid-integration-groups {\\n  display: -ms-grid;\\n  display: grid;\\n  align-items: start;\\n  grid-template-columns: repeat(auto-fill, minmax(190px, 1fr));\\n  grid-column-gap: 1%;\\n  grid-row-gap: 20px;\\n  justify-content: center; }\\n\\n.integration-heading {\\n  grid-column: 1/-1;\\n  font-weight: bold;\\n  color: #474747;\\n  font-size: 16px; }\\n\"","import {AfterContentInit, AfterViewInit, Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {Select, Selector, Store} from '@ngxs/store';\r\nimport {IBot, IBotVersionResult} from '../../../../../interfaces/IBot';\r\nimport {IIntegrationMasterListItem, IIntegrationOption} from '../../../../../../../interfaces/integration-option';\r\nimport {SaveNewBotInfo_CodeBased, SaveIntegrationInfo} from '../../../../ngxs/buildbot.action';\r\nimport {NgForm} from '@angular/forms';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ConstantsService} from '../../../../../../constants.service';\r\nimport {Observable} from 'rxjs';\r\nimport {IBotCreationState} from '../../../../ngxs/buildbot.state';\r\nimport {IAppState} from '../../../../../../ngxs/app.state';\r\nimport {EFormValidationErrors} from '../../../../../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-integration-option-list',\r\n  templateUrl: './integration-option-list.component.html',\r\n  styleUrls: ['./integration-option-list.component.scss'],\r\n  host: {\r\n    \"[style.display]\": \"'block'\",\r\n    \"[style.height.percent]\": \"100\",\r\n    \"[style.overflow]\": \"scroll\",\r\n  }\r\n})\r\nexport class IntegrationOptionListComponent implements OnInit, AfterViewInit {\r\n\r\n  test:boolean;\r\n  isActive: boolean;\r\n  enable = false;\r\n  formValue: IIntegrationOption;\r\n  formValueFinal: IIntegrationOption;\r\n  @Input() bot: IBot;\r\n  @ViewChild('form') f: NgForm;\r\n  @ViewChild('form_new') f_new: NgForm;\r\n  @ViewChild('test') test_new: NgForm;\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  @Output() datachanged$ = new EventEmitter();\r\n  @Select() app$: Observable<IAppState>;\r\n  myObject = Object;\r\n  routeParent;\r\n  masterIntegrationList: IIntegrationMasterListItem[];\r\n  masterIntegrationListSerialized = [];\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private activatedRoute: ActivatedRoute,\r\n    private constantsService: ConstantsService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.app$.subscribe((value) => {\r\n      this.masterIntegrationList = value.masterIntegrationList;\r\n    });\r\n\r\n    this.routeParent = this.activatedRoute.snapshot.data;\r\n    if (this.bot) {\r\n      this.formValue = this.bot.integrations;\r\n    } else if (this.routeParent['buildBot']) {\r\n      this.botcreationstate$.subscribe((botCreationState: IBotCreationState) => {\r\n        this.formValue = botCreationState.codeBased.integrations;\r\n      });\r\n    }\r\n\r\n    // this.formValueFinal = this.constantsService.integrationOptionListTemplate;\r\n    // this.formValueFinal =  this.bot.integrations;\r\n\r\n    this.masterIntegrationList.forEach((integrationItem) => {\r\n      let integration_type_key = integrationItem.integration_type;\r\n      let integration_name_key = integrationItem.key;\r\n      let tempObj = {};\r\n      tempObj[integration_name_key] = integrationItem.inputs.reduce((aggregate, value: { 'display_text': string, 'param_name': string }) => {\r\n        let obj = {};\r\n        obj[value.param_name] = '';\r\n        return {...aggregate, ...obj};\r\n      }, {enabled:false});\r\n      if (this.masterIntegrationListSerialized[integration_type_key]) {\r\n        this.masterIntegrationListSerialized[integration_type_key] = {\r\n          ...this.masterIntegrationListSerialized[integration_type_key],\r\n          ...tempObj\r\n        };\r\n      } else {\r\n        this.masterIntegrationListSerialized[integration_type_key] = {...tempObj};\r\n      }\r\n    });\r\n    this.formValue =\r\n    this.formValueFinal = {\r\n      channels: {\r\n        ...this.masterIntegrationListSerialized['channels'],\r\n        ...this.formValue.channels\r\n      },\r\n      ccsp_details: {\r\n        ...this.masterIntegrationListSerialized['ccsp_details'],\r\n        ...this.formValue.ccsp_details\r\n      },\r\n      fulfillment_provider_details: {\r\n        ...this.masterIntegrationListSerialized['fulfillment_provider_details'],\r\n        ...this.formValue.fulfillment_provider_details\r\n      }\r\n    };\r\n\r\n\r\n  }\r\n\r\n  getLogo(key) {\r\n    let matchedMasterIntegration = this.masterIntegrationList.find((masterIntegrationItem) => {\r\n      return masterIntegrationItem.key === key;\r\n    });\r\n    return matchedMasterIntegration.icon;\r\n\r\n  }\r\n\r\n  onChange($event) {\r\n    this.isActive = $event;\r\n  }\r\n\r\n  click() {\r\n    console.log(this.formValue);\r\n    console.log(this.test);\r\n    console.log(this.test_new.value);\r\n  }\r\n\r\n  // test = false;\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      this.f_new.form.patchValue(this.formValueFinal);\r\n    });\r\n\r\n\r\n    this.f_new.valueChanges.debounceTime(1000).subscribe((integrationInfo: IIntegrationOption) => {\r\n      if (!this.f_new.dirty) return;\r\n      let formValidityObj =  {};\r\n      formValidityObj[EFormValidationErrors.form_validation_integration] = this.f_new && this.f_new.valid;\r\n\r\n\r\n      this.datachanged$.emit({integrations: integrationInfo,...formValidityObj});\r\n      // if (this.routeParent['buildBot'])\r\n      //   this.store.dispatch([\r\n      //     new SaveBasicInfo({data: {integrations: integrationInfo}})\r\n      //   ]);\r\n    });\r\n\r\n    // this.f_new.valueChanges.subscribe((value)=>{\r\n    //   ;\r\n    //   // if(value)\r\n    //     this.formValueFinal = value;\r\n    // })\r\n  }\r\n\r\n  onSwitchChange(obj) {\r\n    obj.enabled = !obj.enabled;\r\n  }\r\n\r\n\r\n  click1() {\r\n    console.log(this.f_new.value);\r\n    console.log(this.formValueFinal);\r\n  }\r\n\r\n}\r\n","import { Component, VERSION, ViewChild, Directive, forwardRef } from '@angular/core';\r\nimport { Validator, FormGroup, NG_VALIDATORS, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[ngModelGroup][requiredIfOneFilledValidator]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => RequiredIfOneFilledValidator),\r\n    multi: true\r\n  }]\r\n})\r\nexport class RequiredIfOneFilledValidator implements Validator {\r\n  validate(group: AbstractControl): ValidationErrors | null {\r\n    const controls = (group as FormGroup).controls;\r\n    let formData = group.value;\r\n    if(formData.enabled){\r\n      for(let key in formData) {\r\n        if(!formData[key])return { required: true };\r\n      }\r\n    }\r\n    return null;\r\n    // const controlNames = Object.keys(controls);\r\n    // controlNames.shift();//enabled is not counted\r\n    // const filledCount = controlNames.filter(name => !!controls[name].value).length\r\n    //\r\n    // return filledCount > 0 && filledCount < controlNames.length ? { required: true } : null;\r\n  }\r\n}\r\n","module.exports = \"<app-knowledge-base\\r\\n  (updateOrSaveParentNers$)=\\\"updateOrSaveCustomNer($event)\\\"\\r\\n  (pageChanged$)=\\\"pageChanged($event)\\\"\\r\\n  [custumNerDataForSmartTable]=\\\"custumNerDataForSmartTable\\\"\\r\\n  [currentPageNumber]=\\\"currentPageNumber\\\"\\r\\n  [totalRecords]=\\\"totalRecords\\\"\\r\\n  (deleteNer$)=\\\"deleteNer($event)\\\"\\r\\n  >\\r\\n</app-knowledge-base>\\r\\n\"","module.exports = \"app-knowledge-base {\\n  display: block;\\n  height: 100%;\\n  width: 100%; }\\n\"","import {Component, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {IUser} from '../../../../interfaces/user';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ServerService} from '../../../../../server.service';\r\nimport {ConstantsService} from '../../../../../constants.service';\r\nimport {ICustomNerItem} from '../../../../../../interfaces/custom-ners';\r\nimport {Observable} from 'rxjs';\r\nimport {IHeaderData} from '../../../../../../interfaces/header-data';\r\nimport {IBot} from '../../../../interfaces/IBot';\r\nimport {UtilityService} from '../../../../../utility.service';\r\nimport {EBotType} from '../../../../view-bots/view-bots.component';\r\nimport {KnowledgeBaseComponent} from '../knowledge-base/knowledge-base.component';\r\n\r\n@Component({\r\n  selector: 'app-knowledge-base-wrapper',\r\n  templateUrl: './knowledge-base-wrapper.component.html',\r\n  styleUrls: ['./knowledge-base-wrapper.component.scss']\r\n})\r\nexport class KnowledgeBaseWrapperComponent implements OnInit {\r\n\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  @Input() bot: IBot;\r\n  @ViewChild(KnowledgeBaseComponent) knowledgeBaseComponent: KnowledgeBaseComponent;\r\n  enterpriseNerData: ICustomNerItem[];\r\n  settings = this.constantsService.SMART_TABLE_KNOWLEDGEBASE_SETTING;\r\n  totalRecords: number = 10;\r\n  currentPageNumber = 1;\r\n  // custumNerDataForSmartTable = [];\r\n  custumNerDataForSmartTable: ICustomNerItem[];\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.currentPageNumber = Number(this.activatedRoute.snapshot.queryParamMap.get('page') || '1');\r\n    this.fetchNers(10, this.currentPageNumber - 1);\r\n  }\r\n\r\n  pageChanged(currentPageNumber) {\r\n    this.router.navigate(['.'], {\r\n      queryParams: {page: currentPageNumber},\r\n      queryParamsHandling: 'merge',\r\n      relativeTo: this.activatedRoute\r\n    });\r\n    this.currentPageNumber = currentPageNumber;\r\n    this.fetchNers(10, currentPageNumber - 1);\r\n  }\r\n\r\n\r\n  fetchNers(limit: number = 10, offset: number = 0) {\r\n\r\n    let url = this.constantsService.getCustomBotNER(limit, (offset * 10));\r\n    let headerData: IHeaderData = {'bot-access-token': this.bot.bot_access_token};\r\n    this.serverService.makeGetReq({url, headerData})\r\n      .subscribe((value: { meta: { total_count: number }, objects: [ICustomNerItem] }) => {\r\n        this.totalRecords = value.meta.total_count;\r\n        this.custumNerDataForSmartTable = value.objects;\r\n        /*For selected ner*/\r\n        let selectedNerId = this.activatedRoute.snapshot.queryParamMap.get('ner_id');\r\n        if (!selectedNerId) return;\r\n        let getNerByIdUrl = this.constantsService.getCustomNerById(selectedNerId);\r\n        let doesSelectedNerExistsIn_custumNerDataForSmartTable =\r\n          this.custumNerDataForSmartTable.find(item => item.id === Number(selectedNerId));\r\n        if (doesSelectedNerExistsIn_custumNerDataForSmartTable) return;\r\n        this.serverService.makeGetReq({url: getNerByIdUrl})\r\n          .subscribe((values: ICustomNerItem[]) => {\r\n            if (values.length > 0) {\r\n              this.custumNerDataForSmartTable.push(values[0]);\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  updateOrSaveCustomNer(selectedOrNewRowData: ICustomNerItem) {\r\n\r\n    this.serverService.updateOrSaveCustomNer(selectedOrNewRowData, this.bot)\r\n      .subscribe((value) => {\r\n\r\n        let doesNerExistsInSmartTable = this.custumNerDataForSmartTable.find((nerObj) => nerObj.id === value.id);\r\n        if (!doesNerExistsInSmartTable)\r\n          (<any>this.custumNerDataForSmartTable).push({...value, highlight: true});\r\n        this.addQueryParamsInCurrentRoute({ner_id: value.id});\r\n        this.utilityService.showSuccessToaster('Customner saved');\r\n      });\r\n  }\r\n\r\n  //   let body: ICustomNerItem;\r\n  //   let headerData: IHeaderData = {'bot-access-token': this.bot.bot_access_token};\r\n  //   let url, methodStr;\r\n  //   if (selectedOrNewRowData && selectedOrNewRowData.id) {/*update customner*/\r\n  //     url = this.constantsService.updateCustomBotNER(selectedOrNewRowData.id);\r\n  //     methodStr = 'makePutReq';\r\n  //     body = {\r\n  //       values: selectedOrNewRowData.values,\r\n  //       column_headers: selectedOrNewRowData.column_headers\r\n  //     };\r\n  //   } else {/*create a new customner*/\r\n  //     url = this.constantsService.createNewCustomBotNER();\r\n  //     methodStr = 'makePostReq';\r\n  //     body = selectedOrNewRowData;\r\n  //   }\r\n  //   this.serverService[methodStr]({url, body, headerData})\r\n  //     .subscribe((value) => {\r\n  //       console.log(value);\r\n  //       this.utilityService.showSuccessToaster('Successfully saved');\r\n  //     });\r\n  // }\r\n\r\n  addQueryParamsInCurrentRoute(queryParamObj: object) {\r\n    this.router.navigate(['.'], {\r\n      queryParams: queryParamObj,\r\n      relativeTo: this.activatedRoute,\r\n      // skipLocationChange: true,/*not working*/\r\n      queryParamsHandling: 'merge'\r\n    });\r\n  }\r\n\r\n  deleteNer(ner_id: number) {\r\n    this.serverService.deleteNer(ner_id, this.bot)\r\n      .subscribe(() => {\r\n\r\n        this.utilityService.showSuccessToaster('Customner deleted');\r\n        this.router.navigate([`/core/botdetail/${EBotType.chatbot}/${this.bot.id}`], {\r\n          queryParams: {\r\n            'build-tab': 'knowledge',\r\n            'showNerTable': true\r\n          }\r\n        });\r\n        let indexToBeDeleted = this.custumNerDataForSmartTable.findIndex((nerObj) => nerObj.id == ner_id);\r\n        if (indexToBeDeleted!==-1) this.custumNerDataForSmartTable.splice(indexToBeDeleted, 1);\r\n        this.knowledgeBaseComponent.showNerSmartTable();\r\n        this.custumNerDataForSmartTable = [...this.custumNerDataForSmartTable];\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<!--<p>{{pipeLine|json}}</p>-->\\r\\n<!--<button (click)=\\\"test()\\\">test</button>-->\\r\\n<div class=\\\"row m-0\\\" style=\\\"height: 100%;\\\">\\r\\n  <div style=\\\"height: 10%\\\" class=\\\"col-12 mb-1 d-flex p-0 justify-content-between\\\">\\r\\n    <p class=\\\"text-theme-secondary my-2 col-8\\\">Drag and drop modules from 'Available Intelligence Modules' to 'Bot Intelligence\\r\\n      Pipeline' and vice versa</p>\\r\\n    <div class=\\\"search-theme-input-with-search col-4\\\">\\r\\n      <span class=\\\"fa fa-search\\\"></span>\\r\\n      <input type=\\\"search\\\" placeholder=\\\"Filter Modules\\\" [(ngModel)]=\\\"searchKeyword\\\" class=\\\"border\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-8\\\" style=\\\"height:90%;overflow-y: scroll\\\" *ngIf=\\\"aiModules\\\">\\r\\n    <h4 class=\\\"heading mb-2 mt-3\\\">Available Intelligence Modules({{aiModules && aiModules.length}})</h4>\\r\\n    <ul class=\\\"aim-list  px-0 d-flex align-items-start align-content-start flex-row flex-wrap\\\"\\r\\n        [dragula]='\\\"first-bag\\\"' [(dragulaModel)]='aiModules'>\\r\\n      <li class=\\\"border module-box mb-2 px-2 mr-1\\\"\\r\\n          *ngFor=\\\"let aiModule of (aiModules|pipelineFilter:searchKeyword); let i of index\\\">\\r\\n        {{aiModule.unique_name}}\\r\\n        <div>\\r\\n          <i *ngIf=\\\"aiModule && aiModule.input_params && myObject.keys(aiModule.input_params).length>0\\\" (click) = \\\"openCreateBotModal(Primarytemplat,aiModule);\\\" class=\\\"fa fa-cog pl-1\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div class=\\\"col-4 pipeline-wrapper d-flex flex-column\\\" *ngIf=\\\"aiModules\\\" style=\\\"height: 90%;overflow-y: auto\\\">\\r\\n    <!--<div class=\\\"col-12 border pr-0 pipeline d-flex flex-column\\\" style=\\\"height: 90%;overflow-y: scroll\\\">-->\\r\\n      <h4 class=\\\"heading mb-2 mt-3\\\">Bot Intelligence Pipeline ({{pipeLine && pipeLine.length}})</h4>\\r\\n      <div class=\\\"flex-grow-1\\\"  [dragula]='\\\"first-bag\\\"' [(dragulaModel)]='pipeLine'>\\r\\n        <div *ngFor=\\\"let aiModule of (pipeLine|pipelineFilter:searchKeyword);let targetIndexNew = index\\\">\\r\\n          <div class=\\\"border mb-2 mr-3 module-box border-danger\\\"\\r\\n               [ngClass]=\\\"{'bg-grey':aiModule.$$hashKey==='PLACE_HOLDER', 'border-danger':!utilityService.checkIfAllPipelineInputParamsArePopulated([aiModule])}\\\">\\r\\n            {{aiModule.unique_name||aiModule.id}}\\r\\n            <div>\\r\\n              <i *ngIf=\\\" aiModule && aiModule.input_params && myObject.keys(aiModule.input_params).length>0\\\" (click) = \\\"openCreateBotModal(Primarytemplat,aiModule);\\\" class=\\\"fa fa-cog pl-1\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <!--</div>-->\\r\\n</div>\\r\\n\\r\\n<ng-template #Primarytemplat>\\r\\n  <div class=\\\"primary-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\" style=\\\"display: flex;justify-content: start;\\\">{{selectedPipeline.unique_name}}</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body pt-0\\\">\\r\\n     <div *ngFor=\\\"let Key of myObject.keys(selectedPipeline.input_params)\\\" class=\\\"d-flex align-items-center justify-content-center my-2\\\">\\r\\n       <label class=\\\"mb-0 mr-1\\\">{{Key|integrationNameFormatter|titlecase }}</label>\\r\\n       <input type=\\\"text\\\" class=\\\"input-material\\\" [(ngModel)] = \\\"selectedPipeline.input_params[Key]\\\">\\r\\n     </div>\\r\\n      <button class=\\\"btn btn-theme-success-sm\\\" (click)=\\\"modalRef.hide()\\\">Submit</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<!--<div class=\\\"flex\\\">-->\\r\\n  <!--<div class=\\\"container \\\" dragula=\\\"VAMPIRES\\\" [(dragulaModel)]=\\\"vamps\\\">-->\\r\\n    <!--<div class=\\\"vamp\\\" *ngFor=\\\"let vamp of vamps\\\">{{ vamp.name }}</div>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"container \\\" dragula=\\\"VAMPIRES\\\" [(dragulaModel)]=\\\"vamps2\\\">-->\\r\\n    <!--<div class=\\\"vamp\\\" *ngFor=\\\"let vamp of vamps2\\\">{{ vamp.name }}</div>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\"","module.exports = \".primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n  .primary-modal .modal-header {\\n    color: #474747; }\\n  .primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  #search-aim:focus {\\n  box-shadow: none;\\n  outline: 1px solid #4db1a7;\\n  background: #fff; }\\n  * {\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box; }\\n  .heading {\\n  font-size: 16px; }\\n  .aim-list, .pipeline-wrapper {\\n  overflow: auto; }\\n  .pipeline {\\n  height: 100%; }\\n  ul {\\n  list-style-type: none; }\\n  .bg-grey {\\n  background-color: #dddddd; }\\n  .module-box {\\n  height: 32px;\\n  font-size: 13px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  cursor: pointer; }\\n  .module-box .fa {\\n    color: #9e9e9e; }\\n  input::-webkit-input-placeholder {\\n  opacity: .5; }\\n  input:-ms-input-placeholder {\\n  opacity: .5; }\\n  input::-ms-input-placeholder {\\n  opacity: .5; }\\n  input::placeholder {\\n  opacity: .5; }\\n  /*========*/\\n  label {\\n  display: block;\\n  font-size: 11px;\\n  color: #9e9e9e;\\n  margin-right: 4px; }\\n  .input-modal {\\n  padding: 0 2px;\\n  margin-top: 0;\\n  margin-left: 1px;\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  border: 1px solid #e0e0e0;\\n  border-radius: 4px; }\\n  .input-modal::-webkit-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-modal:-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-modal::-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-modal::placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n\"","import {Component, EventEmitter, Input, IterableDiffers, OnInit, Output, TemplateRef} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {IBot} from '../../../../interfaces/IBot';\r\nimport {IPipelineItem} from '../../../../../../interfaces/ai-module';\r\nimport {AimService} from '../../../../../aim.service';\r\nimport {ObjectArrayCrudService} from '../../../../../object-array-crud.service';\r\nimport {SaveNewBotInfo_CodeBased, SavePipeLineInfo} from '../../../ngxs/buildbot.action';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {IBotCreationState} from '../../../ngxs/buildbot.state';\r\nimport {IAppState} from '../../../../../ngxs/app.state';\r\nimport {ConstantsService} from '../../../../../constants.service';\r\nimport {ServerService} from '../../../../../server.service';\r\nimport {SetPipelineModuleMasterData} from '../../../../../ngxs/app.action';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap';\r\nimport {EFormValidationErrors, UtilityService} from '../../../../../utility.service';\r\nimport {DragulaService} from 'ng2-dragula';\r\n\r\n@Component({\r\n  selector: 'app-pipeline',\r\n  templateUrl: './pipeline.component.html',\r\n  styleUrls: ['./pipeline.component.scss'],\r\n  providers:[DragulaService]\r\n})\r\nexport class PipelineComponent implements OnInit {\r\n\r\n  myObject = Object;\r\n  // @Input() bot: IBot;\r\n  _bot: IBot;\r\n  @Input() set bot(botData: IBot) {\r\n    this._bot = botData;\r\n    this.pipeLine = this._bot && this._bot.pipelines || [];\r\n    this.filterAiModules();\r\n  }\r\n\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  @Select() app$: Observable<IAppState>;\r\n  iterableDiffer;\r\n  pipeLine: IPipelineItem[] = [];\r\n  @Input() aiModules: IPipelineItem[] = null;\r\n  selectedPipeline: IPipelineItem;\r\n  searchKeyword: string;\r\n  buildBotType: any;\r\n  modalRef: BsModalRef;\r\n\r\n  @Output() datachanged$ = new EventEmitter();\r\n\r\n  constructor(\r\n    private aimService: AimService,\r\n    private objectArrayCrudService: ObjectArrayCrudService,\r\n    private _iterableDiffers: IterableDiffers,\r\n    private activatedRoute: ActivatedRoute,\r\n    private constantsService: ConstantsService,\r\n    private serverService: ServerService,\r\n    private modalService: BsModalService,\r\n    private utilityService: UtilityService,\r\n    private dragulaService: DragulaService,\r\n    private store: Store) {\r\n    this.iterableDiffer = this._iterableDiffers.find([]).create(null);\r\n  }\r\n  vamps = [\r\n    { name: \"Bad Vamp\" },\r\n    { name: \"Petrovitch the Slain\" },\r\n    { name: \"Bob of the Everglades\" },\r\n    { name: \"The Optimistic Reaper\" }\r\n  ];\r\n\r\n  vamps2 = [\r\n    { name: \"Dracula\" },\r\n    { name: \"Kurz\" },\r\n    { name: \"Vladislav\" },\r\n    { name: \"Deacon\" }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    // use these if you want\r\n\r\n    // this.dragulaService.createGroup(\"VAMPIRES\", {\r\n    //   // ...\r\n    // });\r\n    //\r\n    // this.dragulaService.dropModel(\"VAMPIRES\").subscribe(args => {\r\n    //   console.log(args);\r\n    // });\r\n\r\n    this.buildBotType = this.activatedRoute.snapshot.data['buildBot'];\r\n    this.pipeLine = this._bot && this._bot.pipelines || [];\r\n\r\n    let url = this.constantsService.getAllPipelineModuleUrl();\r\n    this.app$.subscribe((appState:IAppState)=>{\r\n      this.aiModules =\r\n      appState.masterPipelineItems;\r\n      this.filterAiModules()\r\n    });\r\n    this.serverService.makeGetReq<{objects:IPipelineItem[]}>({url})\r\n      .subscribe(value => {\r\n        this.store.dispatch([\r\n          new SetPipelineModuleMasterData({masterPipelineItems: value.objects})\r\n        ]);\r\n      });\r\n\r\n    this.modalService.onHidden.subscribe((reason: string) => {\r\n      this.prepareAndDispatch();\r\n    });\r\n\r\n\r\n    // this.aimService.getModules()\r\n    //   .subscribe((value: IPipelineItem[]) => {\r\n    //     this.aiModules = value;\r\n    //   });\r\n    if (this.buildBotType) {\r\n      this.botcreationstate$.subscribe((botcreationstate) => {\r\n        this.pipeLine = botcreationstate &&\r\n          botcreationstate[this.buildBotType] &&\r\n          botcreationstate[this.buildBotType].pipelines || [];\r\n      });\r\n    }\r\n  };\r\n\r\n  filterAiModules(){\r\n    if(!this.pipeLine || !this.aiModules) return;\r\n    this.aiModules = this.aiModules.filter((aiModule)=>{\r\n      let x= !this.pipeLine.find(pipelineItem=>pipelineItem.id===aiModule.id);\r\n      return x;\r\n    });\r\n  }\r\n\r\n  ngDoCheck() {\r\n    //\r\n    console.log('do check', this.pipeLine);\r\n    let changes = this.iterableDiffer.diff(this.pipeLine);\r\n    if (changes) {\r\n      this.prepareAndDispatch();\r\n    }\r\n  }\r\n\r\n  prepareAndDispatch(){\r\n    let isAllPipelineModulesInputParamsArePopulated = this.utilityService.checkIfAllPipelineInputParamsArePopulated(this.pipeLine);\r\n    let isPipelineValidObj = {};\r\n    isPipelineValidObj[EFormValidationErrors.form_validation_pipeline] =isAllPipelineModulesInputParamsArePopulated;\r\n    /*if there is change: check if all settings are populated*/\r\n\r\n    this.datachanged$.emit({pipelines: this.pipeLine,isAllPipelineModulesInputParamsArePopulated, ...isPipelineValidObj});\r\n  }\r\n\r\n  printArr(){\r\n    console.log(this.pipeLine);\r\n    console.log(this.aiModules);\r\n  }\r\n  openCreateBotModal(template: TemplateRef<any>,pipeline:IPipelineItem) {\r\n    this.selectedPipeline = pipeline;\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-md' });\r\n  }\r\n\r\n  test(){\r\n    console.log(this.pipeLine);\r\n  }\r\n\r\n\r\n}\r\n","import {Directive, HostBinding, HostListener, Input} from '@angular/core';\r\nimport {DragService} from './drag.service';\r\n\r\n@Directive({\r\n  selector: '[appDraggable]'\r\n})\r\nexport class DraggableDirective {\r\n\r\n  constructor(private dragService: DragService) {\r\n  }\r\n\r\n  @HostBinding('draggable')\r\n  get draggable() {\r\n    return true;\r\n  }\r\n\r\n  @Input()\r\n  set appDraggable(options: DraggableOptions) {\r\n    if (options) {\r\n      this.options = options;\r\n    }\r\n  }\r\n\r\n  private options: DraggableOptions = {};\r\n\r\n  @HostListener('dragstart', ['$event'])\r\n  onDragStart(event) {\r\n    const { zone = 'zone', data = {} } = this.options;\r\n\r\n    this.dragService.startDrag(zone);\r\n\r\n    event.dataTransfer.setData('Text', JSON.stringify(data));\r\n  }\r\n\r\n}\r\n\r\nexport interface DraggableOptions {\r\n  zone?: string;\r\n  data?: any;\r\n}\r\n","import {Directive, EventEmitter, HostListener, Input, Output} from '@angular/core';\r\nimport {DragService} from './drag.service';\r\n\r\n@Directive({\r\n  selector: '[appDropTarget]'\r\n})\r\nexport class DropTargetDirective {\r\n\r\n  constructor(private dragService: DragService) {\r\n  }\r\n\r\n  @Input()\r\n  set myDropTarget(options: DropTargetOptions) {\r\n    if (options) {\r\n      this.options = options;\r\n    }\r\n  }\r\n\r\n  @Output('myDrop') drop = new EventEmitter();\r\n\r\n  private options: DropTargetOptions = {};\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  @HostListener('dragover', ['$event'])\r\n  onDragOver(event) {\r\n    const { zone = 'zone' } = this.options;\r\n\r\n    if (this.dragService.accepts(zone)) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event) {\r\n    const data =  JSON.parse(event.dataTransfer.getData('Text'));\r\n\r\n    this.drop.next(data);\r\n  }\r\n\r\n}\r\nexport interface DropTargetOptions {\r\n  zone?: string;\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  private removeCodeMirrorHistory$ = new EventEmitter();\r\n  getRemoveCodeMirrorHistory$(){\r\n      return this.removeCodeMirrorHistory$;\r\n  }\r\n  emitRemoveCodeMirrorHistoryEvent(source:string){\r\n      this.removeCodeMirrorHistory$.emit(source);\r\n  }\r\n  constructor() { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'pipelineFilter'\r\n})\r\nexport class PipelineFilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], keyword: string): any {\r\n    // ;\r\n    keyword = keyword && keyword.trim();\r\n    if(!keyword || keyword===\"\") return items;\r\n    return items.filter((item)=>{\r\n      return item.unique_name.toLowerCase().includes(keyword.toLowerCase())\r\n    })\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {ISessionItem, ISessionMessageItem} from '../interfaces/sessions';\r\nimport {IMessageData} from '../interfaces/chat-session-state';\r\n\r\n@Pipe({\r\n  name: 'sessionDataToRichMediaSerializer'\r\n})\r\nexport class SessionDataToRichMediaSerializerPipe implements PipeTransform {\r\n\r\n  transform(sessionData: any,  args?: any): any/*IMessageData */{\r\n    return sessionData.media;\r\n    // return sessionData;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}