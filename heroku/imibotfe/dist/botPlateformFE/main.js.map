{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-gaurd.service.ts","webpack:///./src/app/auth/ngxs/auth.action.ts","webpack:///./src/app/auth/ngxs/auth.state.ts","webpack:///./src/app/backend-dev/backend-dev.component.html","webpack:///./src/app/backend-dev/backend-dev.component.scss","webpack:///./src/app/backend-dev/backend-dev.component.ts","webpack:///./src/app/chat.service.ts","webpack:///./src/app/chat/bot-welcome-panel/bot-welcome.component.html","webpack:///./src/app/chat/bot-welcome-panel/bot-welcome.component.scss","webpack:///./src/app/chat/bot-welcome-panel/bot-welcome.component.ts","webpack:///./src/app/chat/carousel/bot-thinking-bubble/bot-thinking-bubble.component.html","webpack:///./src/app/chat/carousel/bot-thinking-bubble/bot-thinking-bubble.component.scss","webpack:///./src/app/chat/carousel/bot-thinking-bubble/bot-thinking-bubble.component.ts","webpack:///./src/app/chat/carousel/card-carousel/card-carousel.component.html","webpack:///./src/app/chat/carousel/card-carousel/card-carousel.component.scss","webpack:///./src/app/chat/carousel/card-carousel/card-carousel.component.ts","webpack:///./src/app/chat/carousel/quick-reply/quick-reply.component.html","webpack:///./src/app/chat/carousel/quick-reply/quick-reply.component.scss","webpack:///./src/app/chat/carousel/quick-reply/quick-reply.component.ts","webpack:///./src/app/chat/chat-wrapper.component.html","webpack:///./src/app/chat/chat-wrapper.component.scss","webpack:///./src/app/chat/chat-wrapper.component.ts","webpack:///./src/app/chat/ngxs/chat.action.ts","webpack:///./src/app/chat/ngxs/chat.state.ts","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chat-message/chat-message.component.html","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chat-message/chat-message.component.scss","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chat-message/chat-message.component.ts","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chatroom.component.html","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chatroom.component.scss","webpack:///./src/app/chat/rooms-and-convo-panel/chat-message-list/chatroom.component.ts","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-item/chat-item.component.html","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-item/chat-item.component.scss","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-item/chat-item.component.ts","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-list.component.html","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-list.component.scss","webpack:///./src/app/chat/rooms-and-convo-panel/chat-room-list/chat-list.component.ts","webpack:///./src/app/chat/rooms-and-convo-panel/chat-window.component.html","webpack:///./src/app/chat/rooms-and-convo-panel/chat-window.component.scss","webpack:///./src/app/chat/rooms-and-convo-panel/chat-window.component.ts","webpack:///./src/app/constants.service.ts","webpack:///./src/app/core/analysis2/ngxs/analysis.action.ts","webpack:///./src/app/core/analysis2/ngxs/analysis.state.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/store--variable.service.ts","webpack:///./src/app/core/buildbot/ngxs/buildbot.action.ts","webpack:///./src/app/core/buildbot/ngxs/buildbot.state.ts","webpack:///./src/app/core/enterpriseprofile/ngxs/enterpriseprofile.action.ts","webpack:///./src/app/core/enterpriseprofile/ngxs/enterpriseprofile.state.ts","webpack:///./src/app/core/not-found/not-found.component.html","webpack:///./src/app/core/not-found/not-found.component.scss","webpack:///./src/app/core/not-found/not-found.component.ts","webpack:///./src/app/core/reports/ngxs/reports.action.ts","webpack:///./src/app/core/reports/ngxs/reports.state.ts","webpack:///./src/app/core/view-bots/ngxs/view-bot.action.ts","webpack:///./src/app/core/view-bots/ngxs/view-bot.state.ts","webpack:///./src/app/drag.service.ts","webpack:///./src/app/filter-array.pipe.ts","webpack:///./src/app/imi-loader/imi-loader.component.html","webpack:///./src/app/imi-loader/imi-loader.component.scss","webpack:///./src/app/imi-loader/imi-loader.component.ts","webpack:///./src/app/ms-to-hh-mm.pipe.ts","webpack:///./src/app/ngxs/app.action.ts","webpack:///./src/app/ngxs/app.state.ts","webpack:///./src/app/not-authorised/not-authorised.component.html","webpack:///./src/app/not-authorised/not-authorised.component.scss","webpack:///./src/app/not-authorised/not-authorised.component.ts","webpack:///./src/app/rich-media.module.ts","webpack:///./src/app/server.service.ts","webpack:///./src/app/utility.service.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/interfaces/chat-session-state.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./analysis2/analysis2.module\": [\n\t\t\"./src/app/core/analysis2/analysis2.module.ts\",\n\t\t\"analysis2-analysis2-module~bot-detail-bot-detail-module~core-core-module~view-bots-view-bots-module\",\n\t\t\"analysis2-analysis2-module\"\n\t],\n\t\"./auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth-auth-module\"\n\t],\n\t\"./bot-detail/bot-detail.module\": [\n\t\t\"./src/app/core/bot-detail/bot-detail.module.ts\",\n\t\t\"analysis2-analysis2-module~bot-detail-bot-detail-module~core-core-module~view-bots-view-bots-module\",\n\t\t\"bot-detail-bot-detail-module~core-core-module\",\n\t\t\"bot-detail-bot-detail-module\"\n\t],\n\t\"./core/core.module\": [\n\t\t\"./src/app/core/core.module.ts\",\n\t\t\"analysis2-analysis2-module~bot-detail-bot-detail-module~core-core-module~view-bots-view-bots-module\",\n\t\t\"bot-detail-bot-detail-module~core-core-module\",\n\t\t\"core-core-module\"\n\t],\n\t\"./view-bots/view-bots.module\": [\n\t\t\"./src/app/core/view-bots/view-bots.module.ts\",\n\t\t\"analysis2-analysis2-module~bot-detail-bot-detail-module~core-core-module~view-bots-view-bots-module\",\n\t\t\"view-bots-view-bots-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","module.exports = \"\\r\\n\\r\\n<progressbar\\r\\n  *ngIf=\\\"showProgressbar\\\"\\r\\n  [value]=\\\"progressVal\\\"\\r\\n  [animate]=\\\"true\\\"\\r\\n  style=\\\"position: fixed; right: 0px; top: 0px;z-index:300000000\\\"></progressbar>\\r\\n<router-outlet></router-outlet>\\r\\n<div *ngIf=\\\"!isFullScreenPreview\\\" style=\\\"position: fixed; right: 0px; bottom: 0px;z-index:102\\\">\\r\\n  <app-chat-wrapper></app-chat-wrapper>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--<ng-container *ngIf=\\\"loadingRouteConfig\\\">-->\\r\\n  <!--&lt;!&ndash;<app-imi-loader></app-imi-loader>&ndash;&gt;-->\\r\\n  <!--<i class=\\\"fa fa-spin\\\"></i>-->\\r\\n<!--</ng-container>-->\\r\\n\\r\\n<app-backend-dev></app-backend-dev>\\r\\n\\r\\n\"","module.exports = \"/* based on angular-toastr css https://github.com/Foxandxss/angular-toastr/blob/cb508fe6801d6b288d3afc525bb40fee1b101650/dist/angular-toastr.css */\\n\\n/* position */\\n\\n.toast-center-center {\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n}\\n\\n.toast-top-center {\\n  top: 0;\\n  right: 0;\\n  width: 100%;\\n}\\n\\n.toast-bottom-center {\\n  bottom: 0;\\n  right: 0;\\n  width: 100%;\\n}\\n\\n.toast-top-full-width {\\n  top: 0;\\n  right: 0;\\n  width: 100%;\\n}\\n\\n.toast-bottom-full-width {\\n  bottom: 0;\\n  right: 0;\\n  width: 100%;\\n}\\n\\n.toast-top-left {\\n  top: 12px;\\n  left: 12px;\\n}\\n\\n.toast-top-right {\\n  top: 12px;\\n  right: 12px;\\n}\\n\\n.toast-bottom-right {\\n  right: 12px;\\n  bottom: 12px;\\n}\\n\\n.toast-bottom-left {\\n  bottom: 12px;\\n  left: 12px;\\n}\\n\\n/* toast styles */\\n\\n.toast-title {\\n  font-weight: bold;\\n}\\n\\n.toast-message {\\n  word-wrap: break-word;\\n}\\n\\n.toast-message a,\\n.toast-message label {\\n  color: #FFFFFF;\\n}\\n\\n.toast-message a:hover {\\n  color: #CCCCCC;\\n  text-decoration: none;\\n}\\n\\n.toast-close-button {\\n  position: relative;\\n  right: -0.3em;\\n  top: -0.3em;\\n  float: right;\\n  font-size: 20px;\\n  font-weight: bold;\\n  color: #FFFFFF;\\n  text-shadow: 0 1px 0 #ffffff;\\n  /* opacity: 0.8; */\\n}\\n\\n.toast-close-button:hover,\\n.toast-close-button:focus {\\n  color: #000000;\\n  text-decoration: none;\\n  cursor: pointer;\\n  opacity: 0.4;\\n}\\n\\n/*Additional properties for button version\\n iOS requires the button element instead of an anchor tag.\\n If you want the anchor version, it requires `href=\\\"#\\\"`.*/\\n\\nbutton.toast-close-button {\\n  padding: 0;\\n  cursor: pointer;\\n  background: transparent;\\n  border: 0;\\n}\\n\\n.toast-container {\\n  pointer-events: none;\\n  position: fixed;\\n  z-index: 999999;\\n}\\n\\n.toast-container * {\\n  box-sizing: border-box;\\n}\\n\\n.toast-container .toast {\\n  position: relative;\\n  overflow: hidden;\\n  margin: 0 0 6px;\\n  padding: 15px 15px 15px 50px;\\n  width: 300px;\\n  border-radius: 3px 3px 3px 3px;\\n  background-position: 15px center;\\n  background-repeat: no-repeat;\\n  background-size: 24px;\\n  box-shadow: 0 0 12px #999999;\\n  color: #FFFFFF;\\n}\\n\\n.toast-container .toast:hover {\\n  box-shadow: 0 0 12px #000000;\\n  opacity: 1;\\n  cursor: pointer;\\n}\\n\\n/* https://github.com/FortAwesome/Font-Awesome-Pro/blob/master/advanced-options/raw-svg/regular/info-circle.svg */\\n\\n.toast-info {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='512' height='512'%3E%3Cpath fill='rgb(255,255,255)' d='M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z'/%3E%3C/svg%3E\\\");\\n}\\n\\n/* https://github.com/FortAwesome/Font-Awesome-Pro/blob/master/advanced-options/raw-svg/regular/times-circle.svg */\\n\\n.toast-error {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='512' height='512'%3E%3Cpath fill='rgb(255,255,255)' d='M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z'/%3E%3C/svg%3E\\\");\\n}\\n\\n/* https://github.com/FortAwesome/Font-Awesome-Pro/blob/master/advanced-options/raw-svg/regular/check.svg */\\n\\n.toast-success {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512' width='512' height='512'%3E%3Cpath fill='rgb(255,255,255)' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'/%3E%3C/svg%3E\\\");\\n}\\n\\n/* https://github.com/FortAwesome/Font-Awesome-Pro/blob/master/advanced-options/raw-svg/regular/exclamation-triangle.svg */\\n\\n.toast-warning {\\n  background-image: url(\\\"data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512' width='576' height='512'%3E%3Cpath fill='rgb(255,255,255)' d='M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E\\\");\\n}\\n\\n.toast-container.toast-top-center .toast,\\n.toast-container.toast-bottom-center .toast {\\n  width: 300px;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.toast-container.toast-top-full-width .toast,\\n.toast-container.toast-bottom-full-width .toast {\\n  width: 96%;\\n  margin-left: auto;\\n  margin-right: auto;\\n}\\n\\n.toast {\\n  background-color: #030303;\\n  pointer-events: auto;\\n}\\n\\n.toast-success {\\n  background-color: #51A351;\\n}\\n\\n.toast-error {\\n  background-color: #BD362F;\\n}\\n\\n.toast-info {\\n  background-color: #2F96B4;\\n}\\n\\n.toast-warning {\\n  background-color: #F89406;\\n}\\n\\n.toast-progress {\\n  position: absolute;\\n  left: 0;\\n  bottom: 0;\\n  height: 4px;\\n  background-color: #000000;\\n  opacity: 0.4;\\n}\\n\\n/* Responsive Design */\\n\\n@media all and (max-width: 240px) {\\n  .toast-container .toast.div {\\n    padding: 8px 8px 8px 50px;\\n    width: 11em;\\n  }\\n  .toast-container .toast-close-button {\\n    right: -0.2em;\\n    top: -0.2em;\\n  }\\n}\\n\\n@media all and (min-width: 241px) and (max-width: 480px) {\\n  .toast-container .toast.div {\\n    padding: 8px 8px 8px 50px;\\n    width: 18em;\\n  }\\n  .toast-container .toast-close-button {\\n    right: -0.2em;\\n    top: -0.2em;\\n  }\\n}\\n\\n@media all and (min-width: 481px) and (max-width: 768px) {\\n  .toast-container .toast.div {\\n    padding: 15px 15px 15px 50px;\\n    width: 25em;\\n  }\\n}\\n\\nbody {\\n  background: #333;\\n  color: #ddd; }\\n\\nh1 {\\n  color: white;\\n  font-size: 2.25em;\\n  text-align: center;\\n  margin-top: 1em;\\n  margin-bottom: 2em;\\n  text-shadow: 0px 2px 0px black; }\\n\"","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {NavigationEnd, RouteConfigLoadEnd, RouteConfigLoadStart, Router, RoutesRecognized} from '@angular/router';\r\nimport {Select} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {IAppState} from './ngxs/app.state';\r\n\r\ndeclare var CodeMirror: any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  loadingRouteConfig;\r\n  @Select() app$: Observable<IAppState>;\r\n  @ViewChild('carousel') carousel:ElementRef;\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  isFullScreenPreview: boolean;\r\n  enterprise_unique_name: string;\r\n  bot_unique_name: string;\r\n  progressVal: number = 0;\r\n  showProgressbar: boolean = false;\r\n  editor: any;\r\n  currentIntervalRef;\r\n\r\n  ngOnInit() {\r\n    console.log(\"tesging 1\");\r\n    this.app$.subscribe((app) => {\r\n\r\n      if (app.progressbar.loading) {\r\n        this.showProgressbar = true;\r\n        this.currentIntervalRef && clearInterval(this.currentIntervalRef);\r\n        this.progressVal = app.progressbar.value;\r\n        // this.progressVal = 0;\r\n        this.currentIntervalRef = setInterval(() => {\r\n          if (this.progressVal < 80)\r\n            ++this.progressVal;\r\n          else {\r\n            this.progressVal = this.progressVal + 0.2;\r\n          }\r\n        }, 200);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.progressVal = 100;\r\n          this.currentIntervalRef && clearInterval(this.currentIntervalRef);\r\n          setTimeout(() => {\r\n            this.showProgressbar = false;\r\n          }, 500);\r\n        }, 0);\r\n      }\r\n\r\n    });\r\n\r\n\r\n    // this.router.events.subscribe((data) => {\r\n    //   if (data instanceof RoutesRecognized) {\r\n    //     this.isFullScreenPreview = data.state.root.firstChild.data.isFullScreenPreview;\r\n    //     ;\r\n    //   }\r\n    // });\r\n    this.router.events.subscribe((data) => {\r\n      if (data instanceof RoutesRecognized) {\r\n\r\n        this.isFullScreenPreview = data.state.root.firstChild.data.isFullScreenPreview;\r\n        this.bot_unique_name = data.state.root.firstChild.queryParamMap.get('bot_unique_name');\r\n        this.enterprise_unique_name = data.state.root.firstChild.queryParamMap.get('enterprise_unique_name');\r\n      }\r\n      if (data instanceof RouteConfigLoadStart) {\r\n        /*lazy loading*/\r\n        this.loadingRouteConfig = true;\r\n      } else if (event instanceof RouteConfigLoadEnd) {\r\n        this.loadingRouteConfig = false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {AppComponent} from './app.component';\r\nimport {PreloadAllModules, Route, RouterModule} from '@angular/router';\r\nimport {BsDropdownModule, CarouselModule, ProgressbarModule} from 'ngx-bootstrap';\r\nimport {NgxsReduxDevtoolsPluginModule} from '@ngxs/devtools-plugin';\r\nimport {NgxsLoggerPluginModule} from '@ngxs/logger-plugin';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AppStateReducer} from './ngxs/app.state';\r\nimport {NgxsStoragePluginModule} from '@ngxs/storage-plugin';\r\nimport {ServerService} from './server.service';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {NgxsModule} from '@ngxs/store';\r\nimport {NotFoundComponent} from './core/not-found/not-found.component';\r\nimport {DragService} from './drag.service';\r\nimport {AuthStateReducer} from './auth/ngxs/auth.state';\r\nimport {EnterpriseprofileStateReducer} from './core/enterpriseprofile/ngxs/enterpriseprofile.state';\r\nimport {ViewBotStateReducer} from './core/view-bots/ngxs/view-bot.state';\r\nimport {ChatSessionStateReducer} from './chat/ngxs/chat.state';\r\nimport {BotCreationStateReducer} from './core/buildbot/ngxs/buildbot.state';\r\nimport {AnalysisStateReducer2} from './core/analysis2/ngxs/analysis.state';\r\n\r\nimport {ReportsStateReducer} from './core/reports/ngxs/reports.state';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport {AuthGaurdService} from './auth-gaurd.service';\r\nimport {DatePipe} from '@angular/common';\r\nimport {LoginGaurdService} from './login-gaurd.service';\r\nimport {NotAuthorisedComponent} from './not-authorised/not-authorised.component';\r\nimport {ChatWrapperComponent} from './chat/chat-wrapper.component';\r\nimport {ChatroomComponent} from './chat/rooms-and-convo-panel/chat-message-list/chatroom.component';\r\nimport {ChatItemComponent} from './chat/rooms-and-convo-panel/chat-room-list/chat-item/chat-item.component';\r\nimport {ChatListComponent} from './chat/rooms-and-convo-panel/chat-room-list/chat-list.component';\r\nimport {ChatMessageComponent} from './chat/rooms-and-convo-panel/chat-message-list/chat-message/chat-message.component';\r\nimport {ChatWindowComponent} from './chat/rooms-and-convo-panel/chat-window.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {BotWelcomeComponent} from './chat/bot-welcome-panel/bot-welcome.component';\r\nimport {QuickReplyComponent} from './chat/carousel/quick-reply/quick-reply.component';\r\nimport {CardCarouselComponent} from './chat/carousel/card-carousel/card-carousel.component';\r\nimport {ClickOutsideModule} from 'ng2-click-outside';\r\nimport {BotThinkingBubbleComponent} from './chat/carousel/bot-thinking-bubble/bot-thinking-bubble.component';\r\nimport {RichMediaModule} from './rich-media.module';\r\nimport {FilterArrayPipe} from './filter-array.pipe';\r\nimport {MsToHhMmPipe} from './ms-to-hh-mm.pipe';\r\nimport {BackendDevComponent} from './backend-dev/backend-dev.component';\r\n// import {CodeEditorComponent} from './core/buildbot/build-code-based-bot/architecture/code/code-editor/code-editor.component';\r\n\r\nconst routes: Route[] = [\r\n  {path: 'auth', loadChildren: './auth/auth.module#AuthModule'},\r\n  {path: 'core', loadChildren: './core/core.module#CoreModule', canLoad:[AuthGaurdService]},\r\n  {path: 'preview', component: ChatWrapperComponent, data: {isFullScreenPreview: true}},\r\n  // {path: 'preview', component: NotFoundComponent, data: {isFullScreenPreview: true}},\r\n  {path: 'denied', component: NotAuthorisedComponent},\r\n  {path: '', redirectTo:\"core/viewbots/chatbot\", pathMatch:\"full\"},\r\n  {path: '**', component: NotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    NotAuthorisedComponent,\r\n    // ChatWrapperComponent,\r\n    MsToHhMmPipe,\r\n    ChatWrapperComponent,\r\n    ChatWindowComponent,\r\n    ChatMessageComponent,\r\n    ChatListComponent,\r\n    ChatItemComponent,\r\n    ChatroomComponent,\r\n    FilterArrayPipe,\r\n    BotThinkingBubbleComponent,\r\n    BotWelcomeComponent,\r\n    BackendDevComponent,\r\n    // CardCarouselComponent,\r\n    // QuickReplyComponent,\r\n    // CodeEditorComponent\r\n  ],\r\n  // exports:[\r\n  //   CardCarouselComponent,\r\n  //   QuickReplyComponent,\r\n  // ],\r\n  imports: [\r\n    CarouselModule.forRoot(),\r\n    RichMediaModule,\r\n    // BrowserModule,\r\n    RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules}), // RouterModule.forRoot(routes, { useHash: true }), if this is your app.module\r\n    // BsDropdownModule.forRoot(),\r\n    // TabsModule.forRoot(),\r\n    // AceEditorModule,\r\n    // UiSwitchModule,\r\n    FormsModule,\r\n    // DragAndDropModule.forRoot(),\r\n    // ChartModule,asdsads\r\n    NgxsModule.forRoot([\r\n      AuthStateReducer,\r\n      AppStateReducer,\r\n      EnterpriseprofileStateReducer,\r\n      ViewBotStateReducer,\r\n      ChatSessionStateReducer,\r\n      BotCreationStateReducer,\r\n      AnalysisStateReducer2,\r\n      ReportsStateReducer,\r\n    ]),\r\n    NgxsStoragePluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot(),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    HttpClientModule,\r\n    ClickOutsideModule,\r\n    // DragulaModule,\r\n    // HotTableModule,\r\n    // Ng2CompleterModule,\r\n    // Ng2SmartTableModule,\r\n    // BsDatepickerModule.forRoot(),\r\n    // ModalModule.forRoot(),\r\n    // TooltipModule.forRoot(),\r\n    // BrowserAnimationsModule, // required animations module\r\n    // ToastrModule.forRoot(), // ToastrModule added,\r\n    ProgressbarModule.forRoot(),\r\n    // ClickOutsideModule,\r\n    //\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot(), // ToastrModule added,\r\n    BrowserAnimationsModule,\r\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })\r\n    /*custom modules*/\r\n    // AuthModule,\r\n    // CoreModule\r\n\r\n  ],\r\n  providers: [ServerService, DragService, DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, CanActivateChild, CanLoad, Route, Router, RouterLinkActive} from '@angular/router';\r\nimport {IAuthState} from './auth/ngxs/auth.state';\r\nimport {Observable} from 'rxjs';\r\nimport {Select} from '@ngxs/store';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/take';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGaurdService implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  @Select() loggeduser$: Observable<IAuthState>;\r\n\r\n  canActivate() {\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      if (value && value.user != null) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['auth', 'login']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  canActivateChild() {\r\n\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      if (value.user != null) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['auth', 'login']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n\r\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n    // return true;\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      if (value.user != null) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['auth', 'login']);\r\n        return false;\r\n      }\r\n    }).take(1)\r\n    /*OMG:\r\n    *What does it means for an observable to complete\r\n    * https://github.com/angular/angular/issues/9613*/\r\n  }\r\n\r\n}\r\n","import {IBot} from '../../core/interfaces/IBot';\r\nimport {IUser} from '../../core/interfaces/user';\r\n\r\nexport class SetUserAction {\r\n  static readonly type = '[login] set user';\r\n  constructor(public payload:{user:IUser }){\r\n  }\r\n\r\n}\r\n\r\nexport class ResetAuthToDefaultState{\r\n  static readonly type = '[login] reset user';\r\n  constructor(){\r\n  }\r\n\r\n}\r\n","import {IUser} from '../../core/interfaces/user';\r\nimport {Action, State, StateContext} from '@ngxs/store';\r\nimport {SetCodeBasedBotListAction} from '../../core/view-bots/ngxs/view-bot.action';\r\nimport {ResetAuthToDefaultState, SetUserAction} from './auth.action';\r\nimport {ConstantsService} from '../../constants.service';\r\n\r\n\r\nexport interface IAuthState {\r\n  user?: IUser;\r\n}\r\nconst initialState: IAuthState ={\r\n  user:null\r\n};\r\n\r\n@State<IAuthState>({\r\n  name:'loggeduser',\r\n  defaults:initialState\r\n})\r\n\r\n//same as reducer\r\nexport class AuthStateReducer {\r\n\r\n  constructor(private constantsService:ConstantsService){}\r\n  @Action(SetUserAction)\r\n  setUser({patchState, setState, getState,dispatch}:StateContext<IAuthState>, {payload} : SetUserAction){\r\n    patchState({user:payload.user});\r\n    this.constantsService.setLoggedUser(payload.user);\r\n  }\r\n\r\n  @Action(ResetAuthToDefaultState)\r\n  resetAuthToDefaultState({patchState, setState, getState,dispatch}:StateContext<IAuthState>){\r\n    patchState({user:null});\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-end\\\" *ngIf=\\\"showBackendRootUrlButton\\\">\\r\\n  <input type=\\\"text\\\" [(ngModel)]=\\\"backend_root_url\\\" name=\\\"x\\\">\\r\\n  <button class=\\\"btn btn-theme-primary mx-1\\\"\\r\\n          (click)=\\\"changeUrl()\\\">Change Backend root url</button>\\r\\n</div>\\r\\n\\r\\n<!--<ng-template #Primarytemplate>-->\\r\\n  <!--<div class=\\\"primary-modal\\\">-->\\r\\n    <!--<div class=\\\"top-dec\\\"></div>-->\\r\\n    <!--<div class=\\\"modal-header\\\">-->\\r\\n      <!--<h4 class=\\\"modal-title mb-2\\\"> Change Backend Root</h4>-->\\r\\n      <!--<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">-->\\r\\n        <!--<span aria-hidden=\\\"true\\\">&times;</span>-->\\r\\n      <!--</button>-->\\r\\n\\r\\n    <!--</div>-->\\r\\n\\r\\n    <!--<div class=\\\"modal-body\\\">-->\\r\\n      <!--<form class=\\\"row\\\" #password_form=\\\"ngForm\\\">-->\\r\\n\\r\\n        <!--<div class=\\\"col-md-12\\\">-->\\r\\n          <!--<label for=\\\"\\\" class=\\\"mr-1\\\">Url</label>-->\\r\\n          <!--<input type=\\\"text\\\" [(ngModel)]=\\\"backend_root_url\\\" name=\\\"x\\\">-->\\r\\n        <!--</div>-->\\r\\n\\r\\n        <!--<div class=\\\"col-md-12\\\">-->\\r\\n         <!--<button class=\\\"btn btn-theme-primary\\\" (click)=\\\"changeUrl()\\\">Save</button>-->\\r\\n        <!--</div>-->\\r\\n      <!--</form>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n<!--</ng-template>-->\\r\\n\"","module.exports = \".primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n  .primary-modal .modal-header {\\n    color: #474747; }\\n  .primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  .primary-modal .modal-body .fa {\\n  font-size: 48px;\\n  color: #00abd3;\\n  padding: 10px 0px; }\\n\"","import {Component, OnInit, TemplateRef} from '@angular/core';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {SetBackendURlRoot, SetShowBackendURlRoot} from '../ngxs/app.action';\r\nimport {Observable} from 'rxjs';\r\nimport {IAuthState} from '../auth/ngxs/auth.state';\r\nimport {IAppState} from '../ngxs/app.state';\r\nimport {UtilityService} from '../utility.service';\r\nimport {ActivatedRoute, RouteConfigLoadEnd, RouteConfigLoadStart, Router, RoutesRecognized} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-backend-dev',\r\n  templateUrl: './backend-dev.component.html',\r\n  styleUrls: ['./backend-dev.component.scss']\r\n})\r\nexport class BackendDevComponent implements OnInit {\r\n\r\n  constructor(\r\n    // private modalService: BsModalService,\r\n    private utilityService: UtilityService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private store: Store,\r\n  ) { }\r\n  // modalRef: BsModalRef;\r\n  backend_root_url:string;\r\n  showBackendRootUrlButton:boolean = false;\r\n\r\n  @Select() app$:Observable<IAppState>;\r\n  ngOnInit() {\r\n    this.router.events.subscribe((data) => {\r\n      if (data instanceof RoutesRecognized) {\r\n\r\n        this.showBackendRootUrlButton= !!data.state.root.firstChild.queryParamMap.get('burl');\r\n        this.store.dispatch([\r\n          new SetShowBackendURlRoot({showBackendURlRoot:this.showBackendRootUrlButton})\r\n        ])\r\n      }\r\n    });\r\n    this.app$.subscribe((value)=>{\r\n      this.showBackendRootUrlButton = value.showBackendUrlRootButton;\r\n      this.backend_root_url = value.backendUrlRoot;\r\n    });\r\n  }\r\n\r\n  openChangePasswordModal(template: TemplateRef<any>) {\r\n    // this.modalRef = this.modalService.show(template, {class: 'modal-md'});\r\n  }\r\n\r\n  changeUrl(){\r\n    this.store.dispatch([\r\n      new SetBackendURlRoot({url:this.backend_root_url})\r\n    ])\r\n      .subscribe((value)=>{\r\n        this.utilityService.showSuccessToaster(\"Backend root url changed\");\r\n        // this.modalRef.hide();\r\n      });\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Store} from '@ngxs/store';\r\nimport {ServerService} from './server.service';\r\nimport {IHeaderData} from '../interfaces/header-data';\r\nimport {EBotMessageMediaType, EChatFrame, IMessageData} from '../interfaces/chat-session-state';\r\nimport {\r\n  AddMessagesToRoomByRoomId,\r\n  // AddMessagesToRoomByUId,\r\n  ChangeFrameAction,\r\n  SetCurrentBotDetailsAndResetChatStateIfBotMismatch,\r\n  SetCurrentRoomID, SetLastTemplateKeyToRoomByRoomId, ChangeBotIsThinkingDisplayByRoomId,\r\n  ToggleChatWindow\r\n} from './chat/ngxs/chat.action';\r\nimport {IGeneratedMessageItem, ISendApiRequestPayload, ISendApiResponsePayload} from '../interfaces/send-api-request-payload';\r\nimport {ConstantsService} from './constants.service';\r\nimport {IBot} from './core/interfaces/IBot';\r\nimport {UtilityService} from './utility.service';\r\nimport {IConsumerDetails} from './chat/ngxs/chat.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService) {\r\n  }\r\n\r\n  sendHumanMessageToBotServer(botDetails: { id: number, bot_access_token: string }, consumerDetails: IConsumerDetails, messageByHuman: string, frameEnabled: EChatFrame) {\r\n    let url = this.constantsService.getStartNewChatLoginUrl();\r\n    let body/*: ISendApiRequestPayload */ = {\r\n      'consumer': consumerDetails,\r\n      'type': 'human',\r\n      'msg': messageByHuman || 'hi',\r\n      'platform': 'web'\r\n    };\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': botDetails.bot_access_token,\r\n      'auth-token': null,\r\n      'user-access-token': null\r\n    };\r\n\r\n    this.store.dispatch(new ToggleChatWindow({open: true}));\r\n\r\n    if (frameEnabled)\r\n      this.navigate(frameEnabled);\r\n    return this.serverService.makePostReq({url, body, headerData, dontShowProgressBar:true})\r\n      .do((response: ISendApiResponsePayload) => {\r\n        /*recieved chat reply from bot*/\r\n        let generatedMessages = response.generated_msg;\r\n        let serializedMessages: IMessageData[] = this.utilityService.serializeGeneratedMessagesToPreviewMessages(generatedMessages);\r\n        // let serializedMessages: IMessageData[] = generatedMessages.map((message: IGeneratedMessageItem) => {\r\n        //   /*check if media is the key\r\n        //   * if yes, return {message_type:media[0].type, ...message}\r\n        //   * else return it as tet\r\n        //   * */\r\n        //\r\n        //   // this.utilityService.getActiveVersionInBot()\r\n        //\r\n        //\r\n        //   if(Object.keys(message)[0] === \"media\"){\r\n        //     return {\r\n        //       messageMediatype:message.media[0].type,//\r\n        //       ...message,\r\n        //       time: this.utilityService.getCurrentTimeInHHMM(),\r\n        //       text:EBotMessageMediaType.image,//this is for preview of last message in chat room list\r\n        //       sourceType: 'bot'\r\n        //     }\r\n        //   }else if(Object.keys(message)[0] === \"quick_reply\"){\r\n        //\r\n        //     return {\r\n        //       messageMediatype:EBotMessageMediaType.quickReply,//\r\n        //       ...message,\r\n        //       time: this.utilityService.getCurrentTimeInHHMM(),\r\n        //       text:(<any>message).quick_reply.text || EBotMessageMediaType.quickReply,//this is for preview of last message in chat room list\r\n        //       sourceType: 'bot'\r\n        //     }\r\n        //   }\r\n        //\r\n        //   /*if message type = text*/\r\n        //   return {\r\n        //     text: message.text,\r\n        //     time: this.utilityService.getCurrentTimeInHHMM(),\r\n        //     sourceType: 'bot',,\r\n        //     messageMediatype:EBotMessageMediaType.text\r\n        //   };\r\n        // });\r\n\r\n        this.store.dispatch([\r\n          new AddMessagesToRoomByRoomId({\r\n            id: response.room.id,\r\n            consumer_id: response.room.consumer_id,\r\n            messageList: serializedMessages,\r\n            // uid,\r\n            // bot_id: response.room.bot_id,\r\n            // selectedAvatar: response.room.selected_avatar,\r\n            // bot_access_token: botDetails.bot_access_token,\r\n            // lastTemplateKey: response.templateKey/*TODO: NOT NEEDED*/\r\n          }),\r\n          new ChangeBotIsThinkingDisplayByRoomId({roomId:response.room.id, shouldShowBotIsThinking:false})\r\n          // new AttachRoomIdToRoomByUId({room_id: response.room.id, uid})\r\n        ]);\r\n        this.store.dispatch(new SetLastTemplateKeyToRoomByRoomId({lastTemplateKey:response.templateKey ,room_id:response.room.id}));\r\n        // this.store.dispatch(new SetCurrentRoomID({id: response.room.id}));\r\n        // this.store.dispatch(new SetCurrentBotID({bot_id: response.room.bot_id}));\r\n      });\r\n  }\r\n\r\n  navigate(frameEnabled: EChatFrame) {\r\n    this.store.dispatch(new ChangeFrameAction({frameEnabled: frameEnabled}));\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<div class=\\\"d-flex justify-content-center px-2 flex-wrap align-content-center\\\" style=\\\"height: 100%\\\">\\r\\n  <h4 class=\\\"welcome-heading w-100\\\">{{currentBot.heading|| 'I dont have a heading' }}</h4>\\r\\n  <p class=\\\"welcome-title w-100\\\">{{currentBot.description|slice:0:200}}</p>\\r\\n  <button class=\\\"btn-theme-primary cursor-pointer\\\" (click)=\\\"startNewChat()\\\">Start a new chat\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".welcome-heading {\\n  font-size: 20px;\\n  line-height: 20px;\\n  font-weight: 400;\\n  color: #00abd3;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.welcome-title {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IBot} from '../../core/interfaces/IBot';\r\nimport {ViewBotStateModel} from '../../core/view-bots/ngxs/view-bot.state';\r\nimport {Select} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {validate} from 'codelyzer/walkerFactory/walkerFn';\r\nimport {EChatFrame, IChatSessionState} from '../../../interfaces/chat-session-state';\r\nimport {UtilityService} from '../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-bot-welcome',\r\n  templateUrl: './bot-welcome.component.html',\r\n  styleUrls: ['./bot-welcome.component.scss']\r\n})\r\nexport class BotWelcomeComponent implements OnInit {\r\n\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  @Select() chatsessionstate$: Observable<IChatSessionState>;\r\n  @Output() startnewchat$ = new EventEmitter();\r\n  myEChatFrame = EChatFrame;\r\n\r\n  @Input() currentBot: IBot;\r\n\r\n  constructor(private utilityService: UtilityService) {\r\n  }\r\n\r\n  @Output() navigateEvent: EventEmitter<string> = new EventEmitter();\r\n  @Input() bot_id: number;\r\n\r\n  ngOnInit() {\r\n    // this.chatsessionstate$.subscribe((chatSessionState: IChatSessionState) => {\r\n    //   this.bot_id = chatSessionState.currentBotDetails && chatSessionState.currentBotDetails.id;\r\n    //   if (!this.bot_id) return;\r\n    //   this.botlist$.subscribe((value) => {\r\n    //     this.currentBot = value.allBotList.find(value => value.id === this.bot_id);\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  startNewChat() {\r\n    this.startnewchat$.emit({\r\n      consumerDetails: {uid: this.utilityService.createRandomUid()},\r\n      bot: this.currentBot\r\n    });\r\n  }\r\n\r\n  navigate(frame) {\r\n    this.navigateEvent.emit(frame);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"d-flex align-items-center\\\">\\r\\n  <i class=\\\"fa fa-circle mr-1\\\" [ngClass]=\\\"{'text-theme-dark-chat-bubble':randomNumber===1,'text-theme-secondary-chat-bubble':randomNumber!==1}\\\"></i>\\r\\n  <i class=\\\"fa fa-circle mr-1\\\" [ngClass]=\\\"{'text-theme-dark-chat-bubble':randomNumber===2,'text-theme-secondary-chat-bubble':randomNumber!==2}\\\"></i>\\r\\n  <i class=\\\"fa fa-circle mr-1\\\" [ngClass]=\\\"{'text-theme-dark-chat-bubble':randomNumber===3,'text-theme-secondary-chat-bubble':randomNumber!==3}\\\"></i>\\r\\n  <span style=\\\"color: #9e9e9e;\\\">Bot is typing</span>\\r\\n</div>\\r\\n<!---->\\r\\n\"","module.exports = \".fa {\\n  margin-right: 2px;\\n  font-size: 10px; }\\n\\n.text-theme-dark-chat-bubble {\\n  color: #474747; }\\n\\n.text-theme-secondary-chat-bubble {\\n  color: #9e9e9e; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport set = Reflect.set;\r\n\r\n@Component({\r\n  selector: 'app-bot-thinking-bubble',\r\n  templateUrl: './bot-thinking-bubble.component.html',\r\n  styleUrls: ['./bot-thinking-bubble.component.scss']\r\n})\r\nexport class BotThinkingBubbleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  randomNumber = 1;\r\n  ngOnInit() {\r\n    setInterval(()=>{\r\n      this.randomNumber = this.randomNumber>3?1:this.randomNumber+1;\r\n    },400);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n  <!--SOURCE: https://bootsnipp.com/snippets/zDQkr-->\\r\\n  <div class=\\\"row\\\">\\r\\n    <!--<div class=\\\"MultiCarousel\\\" data-items=\\\"1,3,5,6\\\" data-slide=\\\"1\\\" id=\\\"MultiCarousel\\\"  data-interval=\\\"1000\\\">-->\\r\\n    <div class=\\\"MultiCarousel\\\" data-items=\\\"2,2,2,2\\\" data-slide=\\\"1\\\" id=\\\"MultiCarousel\\\" data-interval=\\\"1000\\\">\\r\\n      <!--TODO: ngclass below is a hack; improve it-->\\r\\n      <div class=\\\"MultiCarousel-inner\\\" [ngClass]=\\\"{'float-right':isParentSessionsModal && (totalItemsInCarasol<carasolItemShownInOneScreen)}\\\">\\r\\n        <!--carasol item starts-->\\r\\n        <div class=\\\"item p-1\\\" style=\\\"border-radius: 2px\\\" *ngFor=\\\"let mediaItem of _messageData.media\\\">\\r\\n          <div class=\\\"card m-0 shadow-theme \\\">\\r\\n            <!--<div class=\\\"card-header bg-white p-1\\\" style=\\\"color: #474747\\\">Featured</div>-->\\r\\n            <div [ngStyle]=\\\"{'background-image': 'url('+ mediaItem.url+')'}\\\"\\r\\n                 class=\\\"card-img-top\\\"\\r\\n                 style=\\\"height: 150px;\\\">\\r\\n              <!--<img class=\\\"img-fluid\\\"-->\\r\\n              <!--[src]=\\\"mediaItem.url\\\"-->\\r\\n              <!--alt=\\\"Card image cap\\\">-->\\r\\n            </div>\\r\\n            <!--<div class=\\\"card-body\\\"></div>-->\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li class=\\\"list-group-item p-2 limit-three-lines cursor-pointer\\\">{{mediaItem.title|| \\\"No_Title\\\"}}</li>\\r\\n              <li (click)=\\\"sendMessageToBotServer(mediaItem)\\\" class=\\\"list-group-item p-2 cursor-pointer\\\">\\r\\n                {{mediaItem.buttons && mediaItem.buttons[0].title || \\\"No_Title\\\"}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n        <!--carasol item starts-->\\r\\n\\r\\n      </div>\\r\\n      <button *ngIf=\\\"totalItemsInCarasol>carasolItemShownInOneScreen\\\" class=\\\"btn btn-info leftLst\\\" #leftLst><i\\r\\n        class=\\\"fa p-1 fa-angle-left\\\"></i></button>\\r\\n      <button *ngIf=\\\"totalItemsInCarasol>carasolItemShownInOneScreen\\\" class=\\\"btn btn-info rightLst\\\" #rightLst><i\\r\\n        class=\\\"fa p-1 fa-angle-right\\\"></i></button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".MultiCarousel {\\n  float: left;\\n  overflow: hidden;\\n  padding: 15px;\\n  width: 100%;\\n  position: relative; }\\n\\n.MultiCarousel .MultiCarousel-inner {\\n  transition: 1s ease all;\\n  float: left; }\\n\\n.MultiCarousel .MultiCarousel-inner .item {\\n  float: left; }\\n\\n.MultiCarousel .MultiCarousel-inner .item > div {\\n  text-align: center;\\n  margin: 5px;\\n  background: #f1f1f1;\\n  color: #666; }\\n\\n.MultiCarousel .leftLst, .MultiCarousel .rightLst {\\n  position: absolute;\\n  border-radius: 50%;\\n  top: calc(50% - 20px);\\n  background-color: #00abd3;\\n  border: none; }\\n\\n.MultiCarousel .leftLst {\\n  left: 0; }\\n\\n.MultiCarousel .rightLst {\\n  right: 0; }\\n\\n.MultiCarousel .leftLst.over, .MultiCarousel .rightLst.over {\\n  pointer-events: none;\\n  background: #ccc; }\\n\\n.card-img-top {\\n  background-size: cover;\\n  background-position: center center;\\n  background-repeat: no-repeat; }\\n\\n.limit-three-lines {\\n  box-sizing: content-box;\\n  overflow: hidden;\\n  height: 60px;\\n  line-height: 20px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\"","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {IMessageData} from '../../../../interfaces/chat-session-state';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-card-carousel',\r\n  templateUrl: './card-carousel.component.html',\r\n  styleUrls: ['./card-carousel.component.scss']\r\n})\r\nexport class CardCarouselComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input() isFullScreenPreview = false;\r\n  _messageData: IMessageData;\r\n  @Input() isParentSessionsModal = false;\r\n  itemCountIsNotCausingOverflow = false;\r\n  @Input() set messageData(messageDataValue: IMessageData){\r\n\r\n    this._messageData = messageDataValue;\r\n  }\r\n  @Output() sendMessageToBotServer$ = new EventEmitter();\r\n  carasolItemShownInOneScreen = 2;\r\n  totalItemsInCarasol: number;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // this.isFullScreenPreview = this.activatedRoute.snapshot.data.isFullScreenPreview;\r\n    this.carasolItemShownInOneScreen = this.isFullScreenPreview ? 4 : 2;\r\n    this.totalItemsInCarasol = this._messageData.media.length;\r\n  }\r\n\r\n  sendMessageToBotServer(mediaItem: { title: string, type: string, url: string, buttons: { payload: string, title: string, type: string }[] }) {\r\n    try {\r\n      this.sendMessageToBotServer$.emit(mediaItem.buttons[0].payload||'NO_PAYLOAD');\r\n    }catch (e) {\r\n      this.sendMessageToBotServer$.emit('NO_PAYLOAD');\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  @ViewChild('leftLst') leftLstElementRef:ElementRef;\r\n  @ViewChild('rightLst') rightLstElementRef:ElementRef;\r\n  ngAfterViewInit() {\r\n\r\n    $(document).ready(() => {\r\n      let CardCarouselComponent_this = this;\r\n      var itemsMainDiv = ('.MultiCarousel');\r\n      var itemsDiv = ('.MultiCarousel-inner');\r\n      var itemWidth: any = '';\r\n\r\n      // $('.leftLst, .rightLst').click(function () {\r\n\r\n      let sideControlsClickHandler = function ($event) {\r\n        let condition = $(this).hasClass('leftLst');\r\n        if (condition)\r\n          click(0, this);\r\n        else\r\n          click(1, this);\r\n\r\n        $event.stopPropagation();\r\n      };\r\n\r\n      this.rightLstElementRef && $(this.rightLstElementRef.nativeElement).click(sideControlsClickHandler);\r\n      this.leftLstElementRef && $(this.leftLstElementRef.nativeElement).click(sideControlsClickHandler);\r\n\r\n      ResCarouselSize();\r\n\r\n      $(window).resize(function () {\r\n        ResCarouselSize();\r\n      });\r\n\r\n      //this function define the size of the items\r\n      function ResCarouselSize() {\r\n\r\n        var incno = 0;\r\n        var dataItems = ('data-items');\r\n        var itemClass = ('.item');\r\n        var id = 0;\r\n        var btnParentSb = '';\r\n        var itemsSplit: any = '';\r\n        var sampwidth = $(itemsMainDiv).width();\r\n        var bodyWidth = $('body').width();\r\n        $(itemsDiv).each(function () {\r\n\r\n          id = id + 1;\r\n          var itemNumbers = $(this).find(itemClass).length;\r\n          btnParentSb = $(this).parent().attr(dataItems);\r\n          itemsSplit = btnParentSb.split(',');\r\n          $(this).parent().attr('id', 'MultiCarousel' + id);\r\n\r\n\r\n\r\n          if (bodyWidth >= 1200) {\r\n            // incno = this.carasolItemShownInOneScreen;//itemsSplit[3];\r\n            itemWidth = sampwidth / CardCarouselComponent_this.carasolItemShownInOneScreen;\r\n          }\r\n          else if (bodyWidth >= 992) {\r\n            incno = itemsSplit[2];\r\n            itemWidth = sampwidth / CardCarouselComponent_this.carasolItemShownInOneScreen;\r\n          }\r\n          else if (bodyWidth >= 768) {\r\n            incno = itemsSplit[1];\r\n            itemWidth = sampwidth / CardCarouselComponent_this.carasolItemShownInOneScreen;\r\n          }\r\n          else {\r\n            incno = itemsSplit[0];\r\n            itemWidth = sampwidth / CardCarouselComponent_this.carasolItemShownInOneScreen;\r\n          }\r\n          $(this).css({'transform': 'translateX(0px)', 'width': itemWidth * itemNumbers});\r\n          $(this).find(itemClass).each(function () {\r\n            $(this).outerWidth(itemWidth);\r\n          });\r\n\r\n          $('.leftLst').addClass('over');\r\n          $('.rightLst').removeClass('over');\r\n\r\n        });\r\n      }\r\n\r\n\r\n      //this function used to move the items\r\n      function ResCarousel(e, el, s) {\r\n        var leftBtn = ('.leftLst');\r\n        var rightBtn = ('.rightLst');\r\n        var translateXval: any = '';\r\n        var divStyle = $(el + ' ' + itemsDiv).css('transform');\r\n        var values = divStyle.match(/-?[\\d\\.]+/g);\r\n        var xds: any = Math.abs(values[4]);\r\n        if (e == 0) {\r\n          translateXval = parseInt(xds) - (<any>parseInt)(itemWidth * s);\r\n          $(el + ' ' + rightBtn).removeClass('over');\r\n\r\n          if (translateXval <= itemWidth / 2) {\r\n            translateXval = 0;\r\n            $(el + ' ' + leftBtn).addClass('over');\r\n          }\r\n        }\r\n        else if (e == 1) {\r\n          var itemsCondition = $(el).find(itemsDiv).width() - $(el).width();\r\n          translateXval = parseInt(xds) + (<any>parseInt)(itemWidth * s);\r\n          $(el + ' ' + leftBtn).removeClass('over');\r\n\r\n          if (translateXval >= itemsCondition - itemWidth / 2) {\r\n            translateXval = itemsCondition;\r\n            $(el + ' ' + rightBtn).addClass('over');\r\n          }\r\n        }\r\n        $(el + ' ' + itemsDiv).css('transform', 'translateX(' + -translateXval + 'px)');\r\n      }\r\n\r\n      //It is used to get some elements from btn\r\n      function click(ell, ee) {\r\n        var Parent = '#' + $(ee).parent().attr('id');\r\n        var slide = $(Parent).attr('data-slide');\r\n        ResCarousel(ell, Parent, slide);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div\\r\\n  class=\\\"row mx-0 d-flex justify-content-start flex-shrink-0 flex-grow-0 flex-wrap\\\"\\r\\n  [ngClass]=\\\"{'w-75':isFullScreenPreview, 'flex-row-reverse':isParentSessionsModal}\\\">\\r\\n  <!--<div class=\\\"flex-grow-0 flex-shrink-0\\\" style=\\\"flex-basis: 40px\\\"></div>-->\\r\\n  <div class=\\\"col-10 bg-message-bot p-2\\\" [ngClass]=\\\"{'text-right':isParentSessionsModal}\\\">\\r\\n    <p class=\\\"mb-1\\\" style=\\\"flex-basis: 100%;\\\" *ngIf=\\\"messageData.text!==myEBotMessageMediaType.quickReply\\\">\\r\\n      {{messageData.text||messageData.quick_reply.text}}\\r\\n    </p>\\r\\n    <!--TODO: messageData.text is for chat message (refactor...its not required) and messageData.quick_reply.text session...improve this-->\\r\\n    <button *ngFor=\\\"let item of messageData.quick_reply.quick_replies\\\"\\r\\n            (click)=\\\"sendMessageToBotServer$.emit(item.payload)\\\"\\r\\n            class=\\\"btn btn-theme-secondary-outline mr-2 mb-1\\\">\\r\\n      {{item.title}}\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!---->\\r\\n\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {EBotMessageMediaType, IMessageData} from '../../../../interfaces/chat-session-state';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-quick-reply',\r\n  templateUrl: './quick-reply.component.html',\r\n  styleUrls: ['./quick-reply.component.scss']\r\n})\r\nexport class QuickReplyComponent implements OnInit {\r\n\r\n  @Input() isFullScreenPreview = false;\r\n  @Input() messageData: IMessageData;\r\n  @Input() isParentSessionsModal = false;\r\n  myEBotMessageMediaType = EBotMessageMediaType;\r\n  @Output() sendMessageToBotServer$ = new EventEmitter();\r\n  carasolItemShownInOneScreen = 2;\r\n  totalItemsInCarasol: number;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log(this.messageData)\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--corner chat box started-->\\r\\n<div *ngIf=\\\"!isFullScreenPreview && currentBot\\\">\\r\\n  <div class=\\\"chat-grid text-center\\\" *ngIf=\\\"(windowOpen && (loggeduser$|async).user)\\\">\\r\\n    <div class=\\\"header d-flex align-items-center px-3 position-relative\\\">\\r\\n      <i class=\\\"fa fa-arrow-left cursor-pointer\\\" (click)=\\\"navigate(myEChatFrame.CHAT_LIST)\\\"\\r\\n         [hidden]=\\\"frameEnabled===myEChatFrame.CHAT_LIST\\\"></i>\\r\\n      <span class=\\\"center-absolute\\\">{{chatWindowTitle}}</span>\\r\\n      <a class=\\\"ml-auto\\\" [routerLink]=\\\"['/preview']\\\"\\r\\n         [queryParams]=\\\"{bot_unique_name:currentBot.bot_unique_name,enterprise_unique_name:enterprise_unique_name}\\\"\\r\\n         target=\\\"_blank\\\"><i\\r\\n        class=\\\"fa fa-external-link\\\"></i></a>\\r\\n\\r\\n      <div class=\\\"btn-group p-2\\\" #dropdown=\\\"bs-dropdown\\\" [autoClose]=\\\"false\\\" dropdown (clickOutside)=\\\"dropdown.hide()\\\">\\r\\n        <div dropdownToggle class=\\\"user cursor-pointer\\\"><i class=\\\"fa fa-user\\\"></i></div>\\r\\n\\r\\n        <form *dropdownMenu class=\\\"dropdown-menu dropdown-menu-left p-3\\\" role=\\\"menu\\\" #form=\\\"ngForm\\\"\\r\\n              (ngSubmit)=\\\"saveConsumerDetails(form.value)\\\"\\r\\n              style=\\\"width: 240px\\\">\\r\\n          <p class=\\\"heading mb-2\\\">Edit Customer</p>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>UserName</label>\\r\\n            <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.username\\\"\\r\\n                   name=\\\"username\\\" aria-describedby=\\\"emailHelp\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Phone</label>\\r\\n            <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.phone\\\" name=\\\"phone\\\"\\r\\n                   aria-describedby=\\\"emailHelp\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Email</label>\\r\\n            <input type=\\\"email\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.email\\\"\\r\\n                   name=\\\"email\\\" aria-describedby=\\\"emailHelp\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Facebook ID</label>\\r\\n            <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.facebook_id\\\"\\r\\n                   name=\\\"facebook_id\\\" aria-describedby=\\\"emailHelp\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>UID</label>\\r\\n            <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.uid\\\" name=\\\"uid\\\"\\r\\n                   aria-describedby=\\\"emailHelp\\\">\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn-block btn-theme-primary my-3\\\" (click)=\\\"dropdown.hide()\\\">Save Changes</button>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <i class=\\\"fa fa-minus cursor-pointer\\\" (click)=\\\"closeChatWindow()\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"body p-0 border-left border-right\\\"\\r\\n         [ngClass]=\\\"{'make-body-occupy-footer':frameEnabled!==myEChatFrame.CHAT_BOX}\\\">\\r\\n      <!--<p>{{frameEnabled}}</p>-->\\r\\n      <app-bot-welcome\\r\\n        [currentBot]=\\\"currentBot\\\"\\r\\n        (startnewchat$)=\\\"startNewChat($event)\\\" [bot_id]=\\\"welcomeScreenBotId\\\"\\r\\n        *ngIf=\\\"frameEnabled === myEChatFrame.WELCOME_BOX\\\"></app-bot-welcome>\\r\\n      <app-chat-list class=\\\"mt-4\\\"\\r\\n                     [currentBot]=\\\"currentBot\\\"\\r\\n                     *ngIf=\\\"frameEnabled===myEChatFrame.CHAT_LIST\\\"\\r\\n                     (createCustomRoom$)=\\\"createCustomRoom()\\\"\\r\\n                     (createNewRoom$)=\\\"startNewChat($event)\\\"\\r\\n      ></app-chat-list>\\r\\n      <app-chat-window *ngIf=\\\"frameEnabled===myEChatFrame.CHAT_BOX && this.messageData\\\"\\r\\n                       [selectedAvatar]=\\\"selectedAvatar\\\"\\r\\n                       [room]=\\\"currentRoom\\\"\\r\\n                       [showBotIsThinking]=\\\"showBotIsThinking\\\"\\r\\n                       (sendMessageByHuman$)=\\\"sendMessageByHuman($event)\\\"\\r\\n                       [messageDataArray]=\\\"messageData\\\"></app-chat-window>\\r\\n    </div>\\r\\n\\r\\n    <!--&lt;!&ndash;text input starts&ndash;&gt;-->\\r\\n    <!--<div class=\\\"footer px-3 d-flex align-items-center justify-content-between text-muted\\\"-->\\r\\n    <!--*ngIf=\\\"frameEnabled===myEChatFrame.CHAT_BOX\\\">-->\\r\\n    <!--<input class=\\\"px-2\\\" placeholder=\\\"say something...\\\" type=\\\"text\\\" [(ngModel)]=\\\"messageByHuman\\\" (keyup.enter)=\\\"sendMessageByHuman(messageByHuman)\\\">-->\\r\\n    <!--<span class=\\\"icon\\\"><i class=\\\"fa fa-send cursor-pointer\\\" (click)=\\\"sendMessageByHuman(messageByHuman)\\\"></i></span>-->\\r\\n    <!--</div>-->\\r\\n    <!--&lt;!&ndash;text input ends&ndash;&gt;-->\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<!--corner chat box ends-->\\r\\n\\r\\n<!--tool tip starts-->\\r\\n<div class=\\\"d-flex justify-content-end cursor-pointer float-on-hover-animation\\\" (click)=\\\"toggleChatWindow()\\\"\\r\\n     style=\\\"height: 45px; width: 60px\\\"\\r\\n     *ngIf=\\\"!windowOpen && currentBot\\\">\\r\\n  <div class=\\\"speech-bubble\\\">\\r\\n    <div class=\\\"stick-wrapper\\\">\\r\\n      <div class=\\\"stick\\\"></div>\\r\\n      <div class=\\\"stick\\\"></div>\\r\\n      <div class=\\\"stick\\\"></div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--tool tip ends-->\\r\\n\\r\\n<!--===============FULL SCREEN BELOW===================-->\\r\\n<div *ngIf=\\\"isFullScreenPreview\\\" class=\\\"grid-chat-preview-full-screen\\\">\\r\\n  <div class=\\\"header1 bg-theme-primary px-3 d-flex align-items-center\\\">\\r\\n    <img class=\\\"logo-md mr-2 rounded-circle\\\"\\r\\n         src=\\\"{{enterprise_logo||'https://hm.imimg.com/imhome_gifs/indiamart-og1.jpg'}}\\\" alt=\\\"\\\"\\r\\n         style=\\\"border-radius: 50%;\\\">\\r\\n    <div class=\\\"d-flex flex-column text-white\\\">\\r\\n      <div>{{user_first_name}}</div>\\r\\n      <div class=\\\"font-11\\\">{{user_email}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group p-2 ml-auto\\\" #dropdown=\\\"bs-dropdown\\\" [autoClose]=\\\"false\\\" dropdown\\r\\n         (clickOutside)=\\\"dropdown.hide()\\\">\\r\\n      <div dropdownToggle class=\\\"user cursor-pointer text-white\\\"><i class=\\\"fa fa-user\\\"></i></div>\\r\\n\\r\\n      <form *dropdownMenu class=\\\"dropdown-menu dropdown-menu-left p-3\\\" role=\\\"menu\\\" #form=\\\"ngForm\\\"\\r\\n            (ngSubmit)=\\\"saveConsumerDetails(form.value)\\\"\\r\\n            style=\\\"width: 240px\\\">\\r\\n        <p class=\\\"heading mb-2\\\">Edit Customer</p>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>UserName</label>\\r\\n          <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.username\\\"\\r\\n                 name=\\\"username\\\" aria-describedby=\\\"emailHelp\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Phone</label>\\r\\n          <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.phone\\\" name=\\\"phone\\\"\\r\\n                 aria-describedby=\\\"emailHelp\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Email</label>\\r\\n          <input type=\\\"email\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.email\\\" name=\\\"email\\\"\\r\\n                 aria-describedby=\\\"emailHelp\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>Facebook ID</label>\\r\\n          <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.facebook_id\\\"\\r\\n                 name=\\\"facebook_id\\\" aria-describedby=\\\"emailHelp\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label>UID</label>\\r\\n          <input type=\\\"text\\\" required email class=\\\"form-control\\\" [ngModel]=\\\"customConsumerDetails?.uid\\\" name=\\\"uid\\\"\\r\\n                 aria-describedby=\\\"emailHelp\\\">\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn-block btn-theme-primary my-3\\\" (click)=\\\"dropdown.hide()\\\">Save Changes</button>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"header2 px-3 bg-theme-primary d-flex align-items-center\\\">\\r\\n    <!--<img class=\\\"logo-md\\\" src=\\\"https://image.flaticon.com/icons/svg/17/17004.svg\\\" alt=\\\"\\\">-->\\r\\n    <img *ngIf=\\\"currentBot\\\" class=\\\"logo-md mr-2 rounded-circle\\\"\\r\\n         [src]=\\\"currentBot.logo||'https://image.flaticon.com/icons/svg/17/17004.svg'\\\">\\r\\n    <div *ngIf=\\\"currentBot\\\" class=\\\"d-flex flex-column text-white\\\">\\r\\n      <div>{{currentBot.name}}</div>\\r\\n      <!--<div class=\\\"font-11\\\">{{currentBot.description}}</div>-->\\r\\n    </div>\\r\\n    <!---->\\r\\n    <!--<div class=\\\"room-details ml-auto\\\">-->\\r\\n    <!--<div *ngIf=\\\"currentRoom\\\" [style.visibility]=\\\"currentRoom.id?'visible':'hidden'\\\"-->\\r\\n         <!--class=\\\"d-flex flex-column align-items-end ml-auto mr-4 text-white\\\">-->\\r\\n      <!--<div>Room ID:</div>-->\\r\\n      <!--<div class=\\\"font-11\\\">{{currentRoom.id}}</div>-->\\r\\n    <!--</div>-->\\r\\n    <div class=\\\"ml-auto\\\"></div>\\r\\n    <div *ngIf=\\\"currentRoom && currentRoom.lastTemplateKey\\\" class=\\\"d-flex mr-3 flex-column align-items-end text-white\\\">\\r\\n      <div>Last template triggered:</div>\\r\\n      <div class=\\\"font-11\\\">{{currentRoom.lastTemplateKey}}</div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"currentRoom && currentRoom.uid\\\" class=\\\"d-flex  flex-column align-items-end text-white\\\">\\r\\n      <div>Room UID:</div>\\r\\n      <div class=\\\"font-11\\\">{{currentRoom.uid}}</div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"chat-rooms\\\">\\r\\n    <app-chat-list class=\\\"mt-4\\\"\\r\\n                   (createCustomRoom$)=\\\"createCustomRoom()\\\"\\r\\n                   (createNewRoom$)=\\\"startNewChat($event)\\\"></app-chat-list>\\r\\n  </div>\\r\\n  <div class=\\\"chat\\\">\\r\\n    <app-chat-window\\r\\n      [selectedAvatar]=\\\"selectedAvatar\\\"\\r\\n      [showBotIsThinking]=\\\"showBotIsThinking\\\"\\r\\n      [room]=\\\"currentRoom\\\"\\r\\n      (sendMessageByHuman$)=\\\"sendMessageByHuman($event)\\\"\\r\\n      [messageDataArray]=\\\"messageData\\\">\\r\\n    </app-chat-window>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!---->\\r\\n\"","module.exports = \".card-header {\\n  background-color: #00abd3;\\n  flex-shrink: 0;\\n  color: white; }\\n\\n.card-body {\\n  overflow-y: hidden; }\\n\\n.card-footer {\\n  height: 45px;\\n  border-top: 1px solid #00abd3;\\n  position: relative; }\\n\\n.card-footer input {\\n    height: 80%;\\n    width: 100%;\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    border: none;\\n    border-color: inherit;\\n    box-shadow: none;\\n    outline: none; }\\n\\n.card-footer .icon {\\n    color: #00abd3; }\\n\\n/*NEW CSS BELOW*/\\n\\n.chat-grid {\\n  height: 475px;\\n  width: 376px;\\n  display: -ms-grid;\\n  display: grid;\\n      -ms-grid-columns: 1fr;\\n      grid-template-columns: 1fr;\\n      -ms-grid-rows: 56px 1fr;\\n      grid-template-rows: 56px 1fr;\\n      grid-template-areas: 'h'\\r 'b'; }\\n\\n.chat-grid .header {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: h;\\n    background-color: #00abd3;\\n    flex-shrink: 0;\\n    color: white; }\\n\\n.chat-grid .header .user {\\n      height: 32px;\\n      width: 32px;\\n      border-radius: 50%;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center; }\\n\\n.chat-grid .header .fa-times {\\n      font-size: 20px; }\\n\\n.chat-grid .header .fa {\\n      color: white; }\\n\\n.chat-grid .body {\\n    -ms-grid-row: 2;\\n    -ms-grid-column: 1;\\n    grid-area: b;\\n    background-color: white;\\n    overflow-y: hidden; }\\n\\n.dropdown-menu-left {\\n  /*TODO: Find a better way to do this*/\\n  left: -200px !important; }\\n\\nform {\\n  border-radius: 2px; }\\n\\nform label {\\n    font-size: 11px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    margin: 0; }\\n\\nform .form-control {\\n    border: none;\\n    border-color: inherit;\\n    box-shadow: none;\\n    outline: none;\\n    border-bottom: 1px solid #e0e0e0;\\n    border-radius: 0;\\n    font-size: 11px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n/*FULL SCRENN BELOW*/\\n\\n.grid-chat-preview-full-screen {\\n  height: 100vh;\\n  overflow-y: hidden;\\n  background-color: white;\\n  display: -ms-grid;\\n  display: grid;\\n      -ms-grid-columns: 1fr 2fr;\\n      grid-template-columns: 1fr 2fr;\\n      -ms-grid-rows: 60px 1fr;\\n      grid-template-rows: 60px 1fr;\\n      grid-template-areas: 'h1 h2'\\r 'room chat'; }\\n\\n.grid-chat-preview-full-screen .chat-rooms {\\n    -ms-grid-row: 2;\\n    -ms-grid-column: 1;\\n    grid-area: room; }\\n\\n.grid-chat-preview-full-screen .header1 {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 1;\\n    grid-area: h1; }\\n\\n.grid-chat-preview-full-screen .header2 {\\n    -ms-grid-row: 1;\\n    -ms-grid-column: 2;\\n    grid-area: h2; }\\n\\n.grid-chat-preview-full-screen .chat {\\n    -ms-grid-row: 2;\\n    -ms-grid-column: 2;\\n    grid-area: chat;\\n    overflow-y: hidden; }\\n\\n.make-body-occupy-footer {\\n  padding-bottom: 20px;\\n  overflow-y: hidden;\\n  grid-row: 2/-1 !important;\\n  border-bottom: 9px solid #00abd3; }\\n\\n.font-11 {\\n  font-size: 11px;\\n  line-height: 5px;\\n  margin-top: 4px; }\\n\"","import {Component, ElementRef, NgZone, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {EBotMessageMediaType, EChatFrame, IChatSessionState, IMessageData, IRoomData} from '../../interfaces/chat-session-state';\r\nimport {\r\n  // AddMessagesToRoomByUId,\r\n  ChangeFrameAction,\r\n  // SetCurrentUId,\r\n  SetCurrentRoomID,\r\n  ToggleChatWindow,\r\n  AddNewRoom,\r\n  AddMessagesToRoomByRoomId,\r\n  SetConsumerDetail,\r\n  SetCurrentBotDetailsAndResetChatStateIfBotMismatch,\r\n  ResetChatState,\r\n  ChangeBotIsThinkingDisplayByRoomId\r\n} from './ngxs/chat.action';\r\nimport {ServerService} from '../server.service';\r\nimport {ConstantsService} from '../constants.service';\r\nimport {ISendApiRequestPayload, ISendApiResponsePayload} from '../../interfaces/send-api-request-payload';\r\nimport {IHeaderData} from '../../interfaces/header-data';\r\nimport {ChatService} from '../chat.service';\r\nimport {IAuthState} from '../auth/ngxs/auth.state';\r\nimport {ActivatedRoute, Route, Router, RoutesRecognized} from '@angular/router';\r\nimport {UtilityService} from '../utility.service';\r\nimport {IBot} from '../core/interfaces/IBot';\r\nimport {ViewBotStateModel} from '../core/view-bots/ngxs/view-bot.state';\r\nimport {IConsumerDetails} from './ngxs/chat.state';\r\nimport {IEnterpriseProfileInfo} from '../../interfaces/enterprise-profile';\r\nimport {UpdateBotInfoByIdInBotInBotList} from '../core/view-bots/ngxs/view-bot.action';\r\nimport {IIntegrationOption} from '../../interfaces/integration-option';\r\n\r\nexport interface IBotPreviewFirstMessage {\r\n  'generated_msg': [\r\n    {\r\n      'text': 'lkjlksdmfasd'\r\n    },\r\n    {\r\n      'text': 'Test consent message'\r\n    }\r\n    ],\r\n  'room': IRoomData,\r\n\r\n  'transaction_id': '1cba048e58684206b8c3912b7f7e1887'\r\n}\r\n\r\n@Component({\r\n  selector: 'app-chat-wrapper',\r\n  templateUrl: './chat-wrapper.component.html',\r\n  styleUrls: ['./chat-wrapper.component.scss']\r\n})\r\nexport class ChatWrapperComponent implements OnInit {\r\n\r\n  @Select() chatsessionstate$: Observable<IChatSessionState>;\r\n  @Select() loggeduser$: Observable<IAuthState>;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  @Select() loggeduserenterpriseinfo$: Observable<IEnterpriseProfileInfo>;\r\n  @ViewChild('scrollMe') myScrollContainer: ElementRef;\r\n  frameEnabled: EChatFrame = EChatFrame.WELCOME_BOX;\r\n  myEChatFrame = EChatFrame;//This is required to use enums in template, we can't use enums direactly in templates\r\n  windowOpen: boolean = false;\r\n  messageData: IMessageData[] = null;\r\n  selectedAvatar: any;\r\n  loggeduser: IAuthState;\r\n  currentRoom: IRoomData;\r\n  current_uid: string;\r\n  customConsumerDetails: IConsumerDetails;\r\n  bot_access_token: string;\r\n  currentBotId: number;\r\n  currentBot: IBot;\r\n  allBotList: IBot[];\r\n  chatWindowTitle: string = 'Start Chat';\r\n  messageByHuman: string = '';\r\n  isFullScreenPreview;\r\n  welcomeScreenBotId: number;\r\n  enterprise_logo = 'https://hm.imimg.com/imhome_gifs/indiamart-og1.jpg';\r\n  enterprise_unique_name: string;\r\n  bot_unique_name: string;\r\n  user_first_name;\r\n  user_email;\r\n  showBotIsThinking = false;\r\n\r\n  constructor(private store: Store,\r\n              private serverService: ServerService,\r\n              private constantsService: ConstantsService,\r\n              private chatService: ChatService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private utilityService: UtilityService,\r\n              private route: Router\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log('inside chat-wrapper');\r\n    this.loggeduser$.subscribe((loggeduser) => {\r\n      try {\r\n        this.user_first_name = loggeduser.user.first_name || 'Anonymous User';\r\n        this.user_email = loggeduser.user.email;\r\n      } catch (e) {\r\n        this.user_first_name = 'Anonymous User';\r\n        console.log(e);\r\n      }\r\n    });\r\n\r\n    this.isFullScreenPreview = this.activatedRoute.snapshot.data.isFullScreenPreview;\r\n    if (this.isFullScreenPreview) {\r\n      this.activatedRoute.queryParamMap.subscribe((queryparam) => {\r\n        let welcomeScreenBotIdStr = queryparam.get('preview');\r\n        let enterprise_unique_name = queryparam.get('enterprise_unique_name');\r\n        let bot_unique_name = queryparam.get('bot_unique_name');\r\n        if (!bot_unique_name || !enterprise_unique_name) return;\r\n        this.enterprise_unique_name = enterprise_unique_name;\r\n        if (enterprise_unique_name && bot_unique_name && bot_unique_name) {\r\n          this.serverService.getNSetChatPreviewBot(bot_unique_name, enterprise_unique_name);\r\n        }\r\n      });\r\n    }\r\n    this.route.events.subscribe((data) => {\r\n      /*This is to access route data from non-subtree component\r\n      * see: https://github.com/angular/angular/issues/11812\r\n      * */\r\n      if (data instanceof RoutesRecognized) {\r\n        this.isFullScreenPreview = data.state.root.firstChild.data.isFullScreenPreview;\r\n      }\r\n    });\r\n\r\n    this.chatsessionstate$.subscribe((chatSessionState: IChatSessionState) => {\r\n      try {\r\n        this.windowOpen = chatSessionState.opened;\r\n        if (!chatSessionState) return;\r\n\r\n        let hasPreviewBotChanged = chatSessionState.currentBotDetails &&\r\n          (!this.currentBot || this.currentBot.id!==chatSessionState.currentBotDetails.id);\r\n        let hasPreviewRoomChanged = chatSessionState.currentRoomId &&\r\n          (!this.currentRoom || (this.currentRoom.id!==chatSessionState.currentRoomId));\r\n\r\n        this.showBotIsThinking = this.currentRoom && this.currentRoom.showBotIsThinking;\r\n\r\n        if(hasPreviewRoomChanged || hasPreviewBotChanged){\r\n          this.serverService.initializeIMIConnect(chatSessionState.currentBotDetails, chatSessionState.currentRoomId);\r\n        }\r\n\r\n        this.currentBot = chatSessionState.currentBotDetails;/**/\r\n        if (this.currentBot) {\r\n          this.enterprise_unique_name = this.currentBot.enterprise_unique_name;\r\n          this.bot_access_token = this.currentBot.bot_access_token;//this.currentRoom && this.currentRoom.bot_access_token || currentBot.bot_access_token;\r\n          this.chatWindowTitle =  chatSessionState.currentBotDetails.name;\r\n        }\r\n        if (chatSessionState.currentRoomId) {\r\n          this.currentRoom = chatSessionState.rooms.find((room) => room.id === chatSessionState.currentRoomId);\r\n          this.messageData = this.currentRoom && this.currentRoom.messageList;\r\n          this.selectedAvatar = this.currentRoom && this.currentRoom.selectedAvatar;\r\n        }\r\n\r\n        this.frameEnabled = chatSessionState.frameEnabled;\r\n        if (chatSessionState.consumerDetails) {\r\n          this.customConsumerDetails = chatSessionState.consumerDetails;\r\n          this.current_uid = chatSessionState.consumerDetails.uid;\r\n        } else {\r\n          this.current_uid = chatSessionState.currentUId;\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  openPreviewTab() {\r\n    // window.open(`https://www.google.com`, \"_blank\");\r\n  }\r\n\r\n  createCustomRoom() {\r\n    let doesAtleastOneConsumerKeyHasValue = false;\r\n    if (!this.customConsumerDetails) {\r\n      this.utilityService.showErrorToaster('Please set custom Consumer details');\r\n      return;\r\n    }\r\n    for (let key in this.customConsumerDetails) {\r\n      doesAtleastOneConsumerKeyHasValue = doesAtleastOneConsumerKeyHasValue || this.customConsumerDetails[key];\r\n    }\r\n    if (!doesAtleastOneConsumerKeyHasValue) {\r\n      this.utilityService.showErrorToaster('Please set custom Consumer details');\r\n    } else {\r\n      this.startNewChat({\r\n        consumerDetails: this.customConsumerDetails,\r\n        bot: this.currentBot,\r\n        isCustomRoom:true\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /*this is called when bot preview button or create a custom room button is clicked*/\r\n  startNewChat(startNewChatData: { consumerDetails: IConsumerDetails, bot: IBot,isCustomRoom?:boolean }) {\r\n\r\n    startNewChatData.bot = startNewChatData.bot ? startNewChatData.bot : this.currentBot;//todo: is it really required?\r\n\r\n    /*========================Creation of chat room using Send API===============================*/\r\n\r\n    /*FLOW:\r\n    * 1. Post send api to server with first message=> will get back consent message and room id\r\n    * 2. create a new room using room id\r\n    * */\r\n    this.serverService.startANewChatUsingSendApi(startNewChatData)\r\n      .subscribe((value: IBotPreviewFirstMessage) => {\r\n\r\n        /*\r\n        *A new room has been created. Now if the room belongs to IMI Connect bot,\r\n        *initialize IMI Connect integration\r\n        * */\r\n        this.serverService.initializeIMIConnect(startNewChatData.bot, value.room.id);\r\n        /*1. create a new room with room id\r\n         *2. add message to the room: consent message */\r\n        let roomMessages = this.utilityService.serializeServerValueToChatRoomMessages(value);\r\n\r\n        this.store.dispatch([\r\n          new AddNewRoom({\r\n            id: value.room.id,\r\n            consumer_id: value.room.consumer_id,\r\n            consumerDetails: startNewChatData.consumerDetails,\r\n            messageList: roomMessages,\r\n            bot_access_token: this.currentBot.bot_access_token,\r\n            uid: startNewChatData.consumerDetails.uid,//this.current_uid,\r\n            selectedAvatar: value.room.selected_avatar,\r\n            bot_id: this.currentBot.id,\r\n            created_at:value.room.created_at,\r\n            isCustomRoom: startNewChatData.isCustomRoom\r\n          }),\r\n          new ChangeFrameAction({frameEnabled: EChatFrame.CHAT_BOX}),\r\n          new SetCurrentRoomID({id: value.room.id}),\r\n          new ChangeBotIsThinkingDisplayByRoomId({roomId: value.room.id,shouldShowBotIsThinking:false}),\r\n        ]);\r\n      });\r\n  }\r\n\r\n  logForm(consumerFormValue) {\r\n    console.log(consumerFormValue);\r\n    this.store.dispatch([\r\n      new SetConsumerDetail(consumerFormValue)\r\n    ]);\r\n  }\r\n\r\n  navigate(frame) {\r\n    this.chatService.navigate(frame);\r\n  }\r\n\r\n  closeChatWindow() {\r\n    this.store.dispatch(new ToggleChatWindow({open: false}));\r\n  }\r\n\r\n  // sendMessageByHuman(messageByHuman: string) {\r\n  sendMessageByHuman(messageData: { messageByHuman: string, room: IRoomData }) {\r\n    console.log('sending message by human');\r\n    // this.showBotIsThinking = true;\r\n    let messageByHuman = messageData.messageByHuman;\r\n    let room: IRoomData = messageData.room;\r\n    if (messageByHuman.trim() === '') return;\r\n    this.store.dispatch([new AddMessagesToRoomByRoomId({\r\n      id: room.id,\r\n      messageList: [{\r\n        text: messageByHuman,\r\n        sourceType: 'human',\r\n        messageMediatype: EBotMessageMediaType.text,\r\n        time: Date.now()//this.utilityService.getCurrentTimeInHHMM()\r\n      }],\r\n    }),\r\n      new ChangeBotIsThinkingDisplayByRoomId({shouldShowBotIsThinking:true, roomId:messageData.room.id})\r\n      ]\r\n    )\r\n      .subscribe(() => {\r\n        /*\r\n * Before starting a new chat, we need to check if the currentBot has imiconnect\r\n * integration is on or not, its not on=> use send API\r\n * if its on => use IMI connect\r\n * */\r\n        let shouldStartChatViaImiConnectSDK = false;\r\n        try {\r\n          let botImiConnectIntegrationInfo = this.currentBot.integrations.fulfillment_provider_details.imiconnect;\r\n          shouldStartChatViaImiConnectSDK = botImiConnectIntegrationInfo &&\r\n            botImiConnectIntegrationInfo.enabled &&\r\n            (botImiConnectIntegrationInfo.send_via_connect===\"true\");\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n\r\n        /*========================Creation of chat room using IMI CONNECT===============================*/\r\n        if (shouldStartChatViaImiConnectSDK) {\r\n          this.serverService.sendHumanMessageViaImiConnect(this.currentRoom,this.currentBot, messageByHuman);\r\n          return;\r\n        }\r\n        this.chatService.sendHumanMessageToBotServer(\r\n          {\r\n            bot_access_token: room.bot_access_token,\r\n            id: room.id\r\n          },\r\n          messageData.room.consumerDetails,\r\n          messageByHuman,\r\n          EChatFrame.CHAT_BOX)\r\n          .subscribe(() => {\r\n            this.showBotIsThinking = false;\r\n          }, (error) => {\r\n            this.showBotIsThinking = false;\r\n          });\r\n      });\r\n  }\r\n\r\n  scrollToBottom(): void {\r\n    try {\r\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  toggleChatWindow() {\r\n    this.store.dispatch([\r\n      new ToggleChatWindow({open: true})\r\n    ]);\r\n  }\r\n\r\n  saveConsumerDetails(value) {\r\n    this.store.dispatch([new SetConsumerDetail(value)])\r\n      .subscribe(() => {\r\n        this.utilityService.showSuccessToaster('Saved');\r\n        this.createCustomRoom();\r\n        // this.store.dispatch([new ChangeFrameAction({frameEnabled: 1})]);\r\n      });\r\n  }\r\n\r\n\r\n}\r\n","import {EChatFrame, IMessageData, IRoomData} from '../../../interfaces/chat-session-state';\r\nimport {IBot} from '../../core/interfaces/IBot';\r\nimport {IConsumerDetails} from './chat.state';\r\nimport {st} from '@angular/core/src/render3';\r\nimport {IIntegrationOption} from '../../../interfaces/integration-option';\r\n\r\nexport class ToggleChatWindow {\r\n  static readonly type = '[chat-widdow] set toggle';\r\n\r\n  constructor(public payload: { open: boolean }) {\r\n  }\r\n}\r\n\r\nexport class ChangeFrameAction {\r\n  static readonly type = '[chat-widdow] update frame';\r\n\r\n  constructor(public payload: { frameEnabled: EChatFrame }) {\r\n  }\r\n}\r\nexport class ChangeBotIsThinkingDisplayByRoomId {\r\n  static readonly type = '[chat-widdow] set ShowBotIsThinkingInRoomId';\r\n\r\n  constructor(public payload: { roomId:number, shouldShowBotIsThinking:boolean}) {\r\n  }\r\n}\r\n\r\nexport class AddNewRoom {\r\n  static readonly type = '[chat-widdow] update AddNewRoom';\r\n\r\n  constructor(public payload: IRoomData) {\r\n  }\r\n}\r\n\r\n// export class AddMessagesToRoomByUId {\r\n//   static readonly type = '[chat-widdow] update AddMessagesToRoom';\r\n//   constructor(public payload: IRoomData) {}\r\n// }\r\nexport class AddMessagesToRoomByRoomId {\r\n  static readonly type = '[chat-widdow] update AddMessagesToRoomByRoomId';\r\n\r\n  constructor(public payload: IRoomData) {\r\n  }\r\n}\r\n\r\n// export class AttachRoomIdToRoomByUId {\r\n//   static readonly type = '[chat-widdow] update AttachRoomIdToRoomByUId';\r\n//   constructor(public payload: {room_id:number, uid:string}) {}\r\n// }\r\n// export class SetLastTemplateKeyToRoomByUId {\r\n//   static readonly type = '[chat-widdow] update SetLastTemplateKeyToRoomByUId';\r\n//   constructor(public payload: {lastTemplateKey:string, uid:string}) {}\r\n// }\r\nexport class SetLastTemplateKeyToRoomByRoomId {\r\n  static readonly type = '[chat-widdow] update SetLastTemplateKeyToRoomByRoomId';\r\n\r\n  constructor(public payload: { lastTemplateKey: string, room_id: number }) {\r\n  }\r\n}\r\n\r\nexport class SetCurrentRoomID {\r\n  static readonly type = '[chat-widdow] set SetCurrentRoomID';\r\n\r\n  constructor(public payload: { id: number }) {\r\n  }\r\n}\r\n\r\nexport class SetConsumerDetail {\r\n  static readonly type = '[chat-widdow] set SetConsumerDetail';\r\n\r\n  constructor(public payload: IConsumerDetails) {\r\n  }\r\n}\r\n\r\nexport class SetCurrentBotDetailsAndResetChatStateIfBotMismatch {\r\n  static readonly type = '[chat-widdow] set SetCurrentBotID';\r\n\r\n  constructor(public payload: {\r\n    bot:IBot\r\n    // id: number,\r\n    // bot_access_token?: string,\r\n    // name?: string,\r\n    // logo?: string,\r\n    // bot_unique_name?:string,\r\n    // integrations:IIntegrationOption\r\n  }) {\r\n  }\r\n}\r\n\r\nexport class SetCurrentUId {\r\n  static readonly type = '[chat-widdow] set SetCurrentConsumerId';\r\n\r\n  constructor(public payload: { uid: string }) {\r\n  }\r\n}\r\n\r\nexport class ResetChatState {\r\n  static readonly type = '[chat-widdow] reset ResetChatState';\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class DeleteChatRoomsByBotId {\r\n  static readonly type = '[chat-widdow] delete deleteRoomsByBotId';\r\n\r\n  constructor(public payload: { id: number }) {\r\n  }\r\n}\r\n\r\n","import {Action, State, StateContext} from '@ngxs/store';\r\nimport {ConstantsService} from '../../constants.service';\r\nimport {\r\n  AddNewRoom,\r\n  // AddMessagesToRoomByUId,\r\n  ChangeFrameAction,\r\n  ResetChatState,\r\n  SetCurrentBotDetailsAndResetChatStateIfBotMismatch,\r\n  SetCurrentUId,\r\n  SetCurrentRoomID,\r\n  ToggleChatWindow,\r\n  // AttachRoomIdToRoomByUId,\r\n  // SetLastTemplateKeyToRoomByUId,\r\n  DeleteChatRoomsByBotId,\r\n  AddMessagesToRoomByRoomId,\r\n  SetLastTemplateKeyToRoomByRoomId, SetConsumerDetail, ChangeBotIsThinkingDisplayByRoomId\r\n} from './chat.action';\r\nimport {EChatFrame, IChatSessionState, IRoomData} from '../../../interfaces/chat-session-state';\r\nimport {UtilityService} from '../../utility.service';\r\n\r\nexport const defaultChatState: IChatSessionState = {\r\n  frameEnabled: EChatFrame.WELCOME_BOX,\r\n  opened: false,\r\n  currentRoomId: null,\r\n  currentBotDetails: null,\r\n  currentUId: null,\r\n  rooms: null,\r\n  consumerDetails: null\r\n};\r\n\r\nexport interface IConsumerDetails {\r\n  username?: string,\r\n  phone?: string,\r\n  email?: string,\r\n  facebook_id?: string,\r\n  uid?: string\r\n}\r\n\r\n@State<IChatSessionState>({\r\n  name: 'chatsessionstate',\r\n  defaults: defaultChatState\r\n})\r\n\r\n\r\n//same as reducer\r\nexport class ChatSessionStateReducer {\r\n\r\n  constructor(private constantsService: ConstantsService,\r\n              private utilityService: UtilityService) {\r\n  }\r\n\r\n  @Action(ToggleChatWindow)\r\n  closeChatWindow({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: ToggleChatWindow) {\r\n    let state: IChatSessionState = getState();\r\n    setState({...state, opened: payload.open});\r\n  }\r\n  @Action(ChangeBotIsThinkingDisplayByRoomId)\r\n  showBotIsThinkingInRoomId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: ChangeBotIsThinkingDisplayByRoomId) {\r\n    let state: IChatSessionState = getState();\r\n    let room  = state.rooms.find((room)=>room.id===payload.roomId);\r\n    room.showBotIsThinking = payload.shouldShowBotIsThinking\r\n    setState({...state});\r\n  }\r\n\r\n  @Action(SetConsumerDetail)\r\n  setConsumerDetail({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: SetConsumerDetail) {\r\n    let state: IChatSessionState = getState();\r\n    patchState({consumerDetails: payload});\r\n  }\r\n\r\n  @Action(ChangeFrameAction)\r\n  changeFrame({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: ChangeFrameAction) {\r\n    let state: IChatSessionState = getState();\r\n    patchState({...state, frameEnabled: payload.frameEnabled});\r\n  }\r\n\r\n  @Action(SetCurrentRoomID)\r\n  setCurrentRoomID({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: SetCurrentRoomID) {\r\n    let state: IChatSessionState = getState();\r\n    patchState({...state, currentRoomId: payload.id});\r\n  }\r\n\r\n\r\n  @Action(SetCurrentUId)\r\n  setCurrentConsumerId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: SetCurrentUId) {\r\n    let state: IChatSessionState = getState();\r\n    patchState({...state, currentUId: payload.uid});\r\n  }\r\n\r\n  @Action(SetCurrentBotDetailsAndResetChatStateIfBotMismatch)\r\n  setCurrentBotDetailsAndResetIfBotMismatch(\r\n    {patchState, setState, getState, dispatch}: StateContext<IChatSessionState>,\r\n    {payload}: SetCurrentBotDetailsAndResetChatStateIfBotMismatch) {\r\n\r\n    let state = getState();\r\n    let isOpened = state.opened;\r\n    let currentBot = getState().currentBotDetails;\r\n    if(payload.bot.id!==(currentBot && currentBot.id)){\r\n     dispatch([\r\n       new ResetChatState()\r\n     ]).subscribe(()=>{\r\n       patchState({currentBotDetails: payload.bot, opened:isOpened});//restoring bot opened state\r\n     })\r\n    }else {\r\n      patchState({currentBotDetails: payload.bot});\r\n    }\r\n\r\n  }\r\n\r\n  @Action(AddNewRoom)\r\n  addNewRoom({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: AddNewRoom) {\r\n    let state = getState();\r\n    let rooms = state.rooms;\r\n    let room = payload;\r\n    if (!state.rooms) state.rooms = rooms = [];\r\n    /*first check if room id already */\r\n    let doesRoomAlreadyExist_index;\r\n    doesRoomAlreadyExist_index = rooms.findIndex(room => room.id === payload.id);\r\n    if (!doesRoomAlreadyExist_index || doesRoomAlreadyExist_index === -1) {\r\n      state.rooms.push(room);\r\n    } else {\r\n      this.utilityService.showErrorToaster(`Room with room id ${payload.id} already exists`);\r\n    }\r\n  }\r\n\r\n  // @Action(AddMessagesToRoomByUId)\r\n  // addMessagesToRoom({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: AddMessagesToRoomByUId) {\r\n  //   let state = getState();\r\n  //   let rooms = state.rooms;\r\n  //   let room_id =payload.id;\r\n  //   let room: IRoomData = (rooms && (rooms.find((room) => room.id === room_id)));\r\n  //\r\n  //   room.messageList = [...room.messageList, ...payload.messageList];\r\n  //   // state.currentBotDetails = {\r\n  //   //   ...state.currentBotDetails,\r\n  //   //   id: payload.bot_id,\r\n  //   //   token: payload.bot_access_token,\r\n  //   // };\r\n  //   setState({...state});\r\n  //\r\n  // }\r\n\r\n  @Action(AddMessagesToRoomByRoomId)\r\n  addMessagesToRoomByRoomId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: AddMessagesToRoomByRoomId) {\r\n    let state = getState();\r\n    let rooms = state.rooms;\r\n    let room_id = payload.id;\r\n\r\n    let room: IRoomData = (rooms && (rooms.find((room) => room.id === room_id)));\r\n    if (!room) {\r\n      /*room is not found, this means session is expired. So search by consumer id*/\r\n      let consumer_id = payload.consumer_id;\r\n      room = (rooms && (rooms.find((room) => room.consumer_id === consumer_id)));\r\n      if (room) {\r\n        this.utilityService.showSuccessToaster('Previous session expired. New session created');\r\n        room.id = payload.id;\r\n        dispatch([\r\n          new SetCurrentRoomID({id: room.id})\r\n        ]);\r\n        room.messageList.push({sourceType: 'session_expired',messageMediatype:null, time: null, text: null});\r\n      }\r\n    }\r\n    room.messageList = [...room.messageList, ...payload.messageList];\r\n    setState({...state});\r\n  }\r\n\r\n  // @Action(AttachRoomIdToRoomByUId)\r\n  // attachRoomIdToRoomByUId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: AttachRoomIdToRoomByUId) {\r\n  //   let state = getState();\r\n  //   let rooms = state.rooms;\r\n  //   let uId =payload.uid;\r\n  //   let room: IRoomData = (rooms && (rooms.find((room) => room.uid === uId)));\r\n  //   room.id = payload.room_id;\r\n  //   setState({...state});\r\n  //\r\n  // }\r\n\r\n  @Action(SetLastTemplateKeyToRoomByRoomId)\r\n  SetLastTemplateKeyToRoomByRoomId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: SetLastTemplateKeyToRoomByRoomId) {\r\n    let state = getState();\r\n    let rooms = state.rooms;\r\n    let room_id = payload.room_id;\r\n\r\n    let room: IRoomData = (rooms && (rooms.find((room) => room.id === room_id)));\r\n    room.lastTemplateKey = payload.lastTemplateKey;\r\n    setState({...state});\r\n  }\r\n\r\n  @Action(ResetChatState)\r\n  resetChatState({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>) {\r\n    let state: IChatSessionState = getState();\r\n    let x = defaultChatState;\r\n\r\n    setState(x);\r\n  }\r\n\r\n  @Action(DeleteChatRoomsByBotId)\r\n  deleteRoomsByBotId({patchState, setState, getState, dispatch}: StateContext<IChatSessionState>, {payload}: DeleteChatRoomsByBotId) {\r\n    let state = getState();\r\n    let rooms = state.rooms;\r\n    let botId = payload.id;\r\n    /*\r\n    * As of now there can be only one current bot in the application.\r\n    * The moment a new current bot is selected (via preview), all info of previous current bot is deleted\r\n    * This means if a bot is deleted, and if that bot is also \"currentBot\", we can just reset the whole state\r\n    * */\r\n    if(botId===state.currentBotDetails.id){\r\n      dispatch([new ResetChatState()])\r\n    }\r\n    // rooms && (rooms.forEach((room, index) => {\r\n    //   if (room.id === botId) {\r\n    //     rooms.splice(index, 1);\r\n    //   }\r\n    // }));\r\n    // setState({...state});\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"<!--chat bubbles for text message started-->\\r\\n<div class=\\\"row mt-1 style-children-scrollbar-x\\\"\\r\\n     [ngClass]=\\\"{'reverse-flex-row':messageData?.sourceType==='human'}\\\"\\r\\n     *ngIf=\\\"messageData.messageMediatype === myEBotMessageMediaType.text && messageData.sourceType!=='session_expired'\\\">\\r\\n  <div class=\\\"p-0 text-center\\\" style=\\\"width: 40px\\\">\\r\\n    <img class=\\\"rounded-circle\\\"\\r\\n         [src]=\\\"messageData?.sourceType==='bot'?selectedAvatar?.imageUrl:'https://image.flaticon.com/icons/svg/17/17004.svg'\\\"\\r\\n         style=\\\"width: 32px;height: 32px\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-10 text-left p-0\\\" [ngClass]=\\\"{'reverse-flex-row':messageData?.sourceType==='human'}\\\">\\r\\n    <div class=\\\"message p-2\\\"\\r\\n         [ngClass]=\\\"{'bg-message-bot':messageData?.sourceType==='bot','bg-message-human':messageData?.sourceType==='human'}\\\"\\r\\n         style=\\\"display: inline-block; overflow-x: auto\\\">\\r\\n      <span class=\\\"message-text\\\" [innerHtml]=\\\"messageData?.text\\\"></span>\\r\\n      <div class=\\\"time text-right\\\">{{(messageData?.time|msToHhmm)||'no time info'}}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--chat bubbles for text message ends-->\\r\\n\\r\\n<!--<p>{{messageData|json}}</p>-->\\r\\n\\r\\n<div class=\\\"row mt-1 style-children-scrollbar-x\\\" *ngIf=\\\"messageData.messageMediatype !== myEBotMessageMediaType.text && messageData.sourceType!=='session_expired'\\\">\\r\\n  <div class=\\\"p-0 text-center\\\" style=\\\"width: 40px\\\">\\r\\n    <img class=\\\"rounded-circle\\\"\\r\\n         [src]=\\\"messageData?.sourceType==='bot'?selectedAvatar?.imageUrl:'https://image.flaticon.com/icons/svg/17/17004.svg'\\\"\\r\\n         style=\\\"width: 32px;height: 32px\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-10 text-left p-0 \\\"\\r\\n       style=\\\"overflow-x: auto\\\"\\r\\n       *ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.image\\\">\\r\\n    <app-card-carousel\\r\\n      [isFullScreenPreview]=\\\"isFullScreenPreview\\\"\\r\\n      [messageData]=\\\"messageData\\\"\\r\\n      (sendMessageToBotServer$)=\\\"sendMessageToBotServer$.emit($event)\\\"\\r\\n    ></app-card-carousel>\\r\\n  </div>\\r\\n  <!--<p *ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.quickReply\\\">hello</p>-->\\r\\n  <!---->\\r\\n  <div class=\\\"col-10 text-left px-0\\\"\\r\\n       *ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.quickReply\\\">\\r\\n    <!--<div class=\\\"d-inline-block\\\">-->\\r\\n      <app-quick-reply\\r\\n        style=\\\"overflow-x: auto; width: 100%\\\"\\r\\n        [isFullScreenPreview]=\\\"isFullScreenPreview\\\"\\r\\n        [messageData]=\\\"messageData\\\"\\r\\n        (sendMessageToBotServer$)=\\\"sendMessageToBotServer$.emit($event)\\\"\\r\\n      ></app-quick-reply>\\r\\n    <!--</div>-->\\r\\n  </div>\\r\\n  <div class=\\\"col-10 text-left p-0 d-flex\\\"\\r\\n       *ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.bot_thinking\\\">\\r\\n    <div class=\\\"bg-message-bot d-flex align-items-center px-2\\\">\\r\\n      <app-bot-thinking-bubble class=\\\"d-block\\\"></app-bot-thinking-bubble>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--chat bubbles for media message started-->\\r\\n<!--<app-card-carousel-->\\r\\n<!--*ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.image\\\"-->\\r\\n<!--[messageData]=\\\"messageData\\\"-->\\r\\n<!--(sendMessageToBotServer$)=\\\"sendMessageToBotServer$.emit($event)\\\"-->\\r\\n<!--&gt;</app-card-carousel>-->\\r\\n\\r\\n<!--<app-quick-reply-->\\r\\n<!--*ngIf=\\\"messageData.messageMediatype===myEBotMessageMediaType.quickReply\\\"-->\\r\\n<!--[messageData]=\\\"messageData\\\"-->\\r\\n<!--(sendMessageToBotServer$)=\\\"sendMessageToBotServer$.emit($event)\\\"-->\\r\\n<!--&gt;</app-quick-reply>-->\\r\\n\\r\\n\\r\\n<!--chat bubbles for media message ends-->\\r\\n\\r\\n\\r\\n<div class=\\\"row d-flex align-items-center session-expire-info-row\\\" *ngIf=\\\"messageData.sourceType==='session_expired'\\\">\\r\\n  <hr>\\r\\n  <i class=\\\"px-2\\\">New session started</i>\\r\\n  <hr>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--carousal starts-->\\r\\n\"","module.exports = \".reverse-flex-row {\\n  display: flex;\\n  flex-direction: row-reverse; }\\n\\n.row {\\n  margin: 0;\\n  /*overriding bootstrap*/ }\\n\\n.bg-message-human {\\n  background-color: #00abd3; }\\n\\n.bg-message-human .time, .bg-message-human .message-text {\\n    color: white !important; }\\n\\n.message {\\n  font-size: 13px;\\n  line-height: 20px;\\n  font-weight: 400;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  border-radius: 1px; }\\n\\n.message .time {\\n    font-size: 9px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.session-expire-info-row hr {\\n  flex-grow: 1; }\\n\\n.session-expire-info-row * {\\n  color: #9e9e9e; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {EBotMessageMediaType, IMessageData} from '../../../../../interfaces/chat-session-state';\r\nimport {ActivatedRoute, Router, RoutesRecognized} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-chat-message',\r\n  templateUrl: './chat-message.component.html',\r\n  styleUrls: ['./chat-message.component.scss']\r\n})\r\nexport class ChatMessageComponent implements OnInit {\r\n\r\n  myEBotMessageMediaType = EBotMessageMediaType\r\n  @Input()selectedAvatar;\r\n  @Input() messageData:IMessageData = {\r\n    text:'this is a test',\r\n    time:Date.now(),\r\n    sourceType:\"bot\",\r\n    messageMediatype:null\r\n  };\r\n  isFullScreenPreview:boolean = false;\r\n  @Output() sendMessageToBotServer$ = new EventEmitter();\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n    // console.log(this.messageData);\r\n    this.isFullScreenPreview = location.pathname==='/preview';//this.activatedRoute.snapshot.data['isFullScreenPreview'];\r\n    this.router.events.subscribe((data) => {\r\n      if (data instanceof RoutesRecognized) {\r\n        this.isFullScreenPreview = data.state.root.firstChild.data.isFullScreenPreview;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<app-chat-sessionMessageData></app-chat-sessionMessageData>-->\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chatroom',\r\n  templateUrl: './chatroom.component.html',\r\n  styleUrls: ['./chatroom.component.scss']\r\n})\r\nexport class ChatroomComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row mb-1 mt-1 position-relative\\\" [ngClass]=\\\"{'bg-theme-primary':currentRoomId === room.id}\\\">\\r\\n  <div class=\\\"p-2 col-2\\\" style=\\\"text-align: center\\\">\\r\\n    <img [src]=\\\"room?.selectedAvatar?.imageUrl\\\"\\r\\n         class=\\\"rounded-circle\\\"\\r\\n         style=\\\"width: 36px;height: 36px\\\" alt=\\\"\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-10 p-1 text-left message-wrapper\\\" >\\r\\n    <div class=\\\"message p-2 cursor-pointer\\\" (click)=\\\"openChatRoom()\\\">\\r\\n      <div class=\\\"d-flex justify-content-between \\\">\\r\\n        <div class=\\\"message-text \\\">{{room.id}}</div>\\r\\n        <div class=\\\"time\\\">{{room.messageList[room.messageList.length-1].time|msToHhmm}}</div>\\r\\n        <!--<div class=\\\"time\\\">{{room.created_at}}</div>-->\\r\\n      </div>\\r\\n      <div class=\\\"message-text limit-oneline\\\">{{room.messageList[room.messageList.length-1].text}}</div>\\r\\n      <i style=\\\"position: absolute; bottom: 5px; right: 5px\\\" class=\\\"fa fa-user\\\" *ngIf=\\\"room.isCustomRoom\\\"></i>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!---->\\r\\n\"","module.exports = \".row {\\n  margin: 0; }\\n\\n.message-wrapper {\\n  background-color: #f7f7f7; }\\n\\n.message {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  border-radius: 1px; }\\n\\n.message .message-text {\\n    font-size: 11px; }\\n\\n.message .time {\\n    font-size: 9px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n\"","import {Component, Input, OnInit, Output} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {EChatFrame, IChatSessionState, IRoomData} from '../../../../../interfaces/chat-session-state';\r\nimport {ChangeFrameAction, SetConsumerDetail, SetCurrentBotDetailsAndResetChatStateIfBotMismatch, SetCurrentRoomID, SetCurrentUId} from '../../../ngxs/chat.action';\r\n\r\n@Component({\r\n  selector: 'app-chat-item',\r\n  templateUrl: './chat-item.component.html',\r\n  styleUrls: ['./chat-item.component.scss']\r\n})\r\nexport class ChatItemComponent implements OnInit {\r\n\r\n  @Input() room: IRoomData;\r\n  @Input() currentUid:string;\r\n  @Input() currentRoomId:number;\r\n  @Select() chatsessionstate$: Observable<IChatSessionState>;\r\n\r\n  constructor(private store: Store) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chatsessionstate$.subscribe((chatSessionState)=>{\r\n      this.currentRoomId =  chatSessionState.currentRoomId;\r\n    });\r\n  }\r\n\r\n  openChatRoom() {\r\n    this.store.dispatch([\r\n      new SetCurrentRoomID({id: this.room.id}),\r\n      new SetCurrentUId({uid: this.room.uid}),\r\n      // new SetCurrentBotDetails({bot_id:this.room.bot_id}),\r\n      new ChangeFrameAction({frameEnabled: EChatFrame.CHAT_BOX})]);\r\n  }\r\n}\r\n","module.exports = \"<div\\r\\n  class=\\\"mb-2\\\" style=\\\"overflow-y: scroll;overflow-x: hidden; height: 100%; position: relative\\\">\\r\\n  <div *ngIf=\\\"rooms\\\">\\r\\n    <app-chat-item\\r\\n      *ngFor=\\\"let room of rooms;\\\" [room]=\\\"room\\\"\\r\\n      [currentUid]=\\\"chatsessionstate.currentUId\\\">\\r\\n    </app-chat-item>\\r\\n  </div>\\r\\n  <div class=\\\"d-flex justify-content-center pb-1\\\" style=\\\"position: absolute; bottom: 0; left: 0; right: 0;z-index: 10\\\">\\r\\n    <!--<button class=\\\"btn btn-theme-secondary-outline mr-1\\\" (click)=\\\"createCustomRoom()\\\" >Create Custom Room</button>-->\\r\\n    <button class=\\\"btn btn-theme-secondary-outline\\\" (click)=\\\"startNewRoom()\\\">Start New Room</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Select} from '@ngxs/store';\r\nimport {IChatSessionState, IRoomData} from '../../../../interfaces/chat-session-state';\r\nimport {IBot} from '../../../core/interfaces/IBot';\r\nimport {ViewBotStateModel} from '../../../core/view-bots/ngxs/view-bot.state';\r\nimport {IConsumerDetails} from '../../ngxs/chat.state';\r\n\r\n@Component({\r\n  selector: 'app-chat-list',\r\n  templateUrl: './chat-list.component.html',\r\n  styleUrls: ['./chat-list.component.scss']\r\n})\r\nexport class ChatListComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  @Input() currentBot:IBot;\r\n  bot_id;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  @Select() chatsessionstate$: Observable<IChatSessionState>;\r\n  @Output() navigateEvent: EventEmitter<string> = new EventEmitter();\r\n  @Output() createCustomRoom$= new EventEmitter();\r\n  @Output() createNewRoom$ = new EventEmitter();\r\n  chatsessionstate:IChatSessionState;\r\n  rooms:IRoomData[];\r\n\r\n  ngOnInit() {\r\n\r\n    this.chatsessionstate$.subscribe((chatSessionState: IChatSessionState) => {\r\n      if(!chatSessionState || !chatSessionState.rooms) return;\r\n      this.chatsessionstate = chatSessionState;\r\n\r\n      let x = this.rooms = chatSessionState.rooms.sort((obj1,obj2)=>{\r\n        return obj2.messageList[obj2.messageList.length-1].time-obj1.messageList[obj1.messageList.length-1].time;\r\n      });\r\n      this.rooms = [...this.rooms];\r\n      // this.bot_id = chatSessionState.currentBotDetails && chatSessionState.currentBotDetails.id;\r\n      // if (!this.bot_id) return;\r\n      // this.botlist$.subscribe((value) => {\r\n      //   this.currentBot = value.allBotList.find(value => value.id === this.bot_id);\r\n      // });\r\n    });\r\n  }\r\n\r\n  createCustomRoom(){\r\n    this.createCustomRoom$.emit();\r\n  }\r\n  startNewRoom(){\r\n    let details:{consumerDetails:IConsumerDetails, bot:IBot} =  {\r\n      consumerDetails:{\r\n        uid:Date.now().toString()\r\n      },\r\n      bot:this.currentBot\r\n    };\r\n    this.createNewRoom$.emit(details);\r\n  }\r\n\r\n  navigate(frame) {\r\n    this.navigateEvent.emit(frame);\r\n  }\r\n}\r\n","module.exports = \"<div #scrollMe class=\\\"d-flex flex-column mb-1\\\" style=\\\"overflow-y: scroll;overflow-x: hidden; height: calc(100% - 50px);position: relative\\\">\\r\\n  <app-chat-message\\r\\n    (sendMessageToBotServer$)=\\\"sendMessageByHuman($event)\\\"\\r\\n    class=\\\"mx-2\\\"\\r\\n    [selectedAvatar]=\\\"selectedAvatar\\\"\\r\\n    *ngFor=\\\"let messageData of _messageDataArray\\\"\\r\\n    [messageData]=\\\"messageData\\\">\\r\\n  </app-chat-message>\\r\\n  <div *ngIf=\\\"!_messageDataArray\\\" class=\\\"w-100 h-100 d-flex align-items-center justify-content-center\\\">\\r\\n    <p class=\\\"text-muted\\\">Click start a new Room to start conversation</p>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"showBotIsThinking\\\" class=\\\"mt-auto\\\">\\r\\n    <app-chat-message\\r\\n      (sendMessageToBotServer$)=\\\"sendMessageByHuman($event)\\\"\\r\\n      class=\\\"mx-2\\\"\\r\\n      [selectedAvatar]=\\\"selectedAvatar\\\"\\r\\n      *ngFor=\\\"let messageData of botIsThinkingMessageDataArray\\\"\\r\\n      [messageData]=\\\"messageData\\\">\\r\\n    </app-chat-message>\\r\\n  </div>\\r\\n</div>\\r\\n<!--<div class=\\\"footer px-3 py-1 d-flex align-items-center justify-content-between text-muted\\\" style=\\\"height: 13%\\\">-->\\r\\n<!--<input class=\\\"px-2\\\" placeholder=\\\"say something...\\\" type=\\\"text\\\">-->\\r\\n<!--<span class=\\\"icon\\\"><i class=\\\"fa fa-send cursor-pointer\\\"></i></span>-->\\r\\n<!--</div>-->\\r\\n<!--text input starts-->\\r\\n<div *ngIf=\\\"_messageDataArray\\\" class=\\\"footer d-flex align-items-center text-muted\\\" style=\\\"height: 45px\\\">\\r\\n  <input class=\\\"chat-input px-2 flex-grow-1\\\" placeholder=\\\"Chat with the bot ...\\\" autofocus [(ngModel)]=\\\"messageByHuman\\\" type=\\\"text\\\"\\r\\n         (keyup.enter)=\\\"sendMessageByHuman(messageByHuman)\\\">\\r\\n  <div class=\\\"d-flex justify-content-center px-2\\\">\\r\\n    <span class=\\\"icon\\\"><i class=\\\"fa fa-send cursor-pointer\\\" (click)=\\\"sendMessageByHuman(messageByHuman)\\\"></i></span>\\r\\n  </div>\\r\\n</div>\\r\\n<!--text input ends-->\\r\\n\"","module.exports = \".footer {\\n  grid-area: f;\\n  position: relative;\\n  padding: 3px 10px;\\n  background-color: #ececec; }\\n  .footer input {\\n    height: 80%;\\n    width: 90%;\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    border-radius: 4px;\\n    border: none;\\n    border-color: inherit;\\n    box-shadow: none;\\n    outline: none; }\\n  .footer input::-webkit-input-placeholder {\\n      color: #dadada !important; }\\n  .footer input:-ms-input-placeholder {\\n      color: #dadada !important; }\\n  .footer input::-ms-input-placeholder {\\n      color: #dadada !important; }\\n  .footer input::placeholder {\\n      color: #dadada !important; }\\n  .footer .icon {\\n    color: #00abd3;\\n    font-size: 25px; }\\n  app-chat-message {\\n  display: block; }\\n\"","import {Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {EBotMessageMediaType, EChatFrame, IMessageData, IRoomData} from '../../../interfaces/chat-session-state';\r\n\r\n@Component({\r\n  selector: 'app-chat-window',\r\n  templateUrl: './chat-window.component.html',\r\n  styleUrls: ['./chat-window.component.scss']\r\n})\r\nexport class ChatWindowComponent implements OnInit {\r\n\r\n  @Input() _messageDataArray:IMessageData[];\r\n  botIsThinkingMessageDataArray:IMessageData[] = [\r\n    {\r\n      sourceType:'bot',\r\n      messageMediatype:EBotMessageMediaType.bot_thinking,\r\n      time:null\r\n    }\r\n  ]\r\n  @Input() selectedAvatar;\r\n  @Input() room:IRoomData;\r\n  @Input() showBotIsThinking:boolean=false;\r\n  @Input() set messageDataArray(value){\r\n\r\n    this._messageDataArray = value;\r\n    console.log('scrolling');\r\n    setTimeout(()=>this.scrollToBottom(),0);\r\n  }\r\n  @Output() sendMessageByHuman$ = new EventEmitter();\r\n  messageByHuman:string;\r\n  @ViewChild('scrollMe') private myScrollContainer: ElementRef;\r\n  myEChatFrame = EChatFrame;\r\n\r\n  constructor() { }\r\n  ngOnInit() {\r\n  }\r\n  scrollToBottom(): void {\r\n    try {\r\n      console.log(this.myScrollContainer);\r\n      this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch(err) { }\r\n  }\r\n  sendMessageByHuman(message){\r\n    this.sendMessageByHuman$.emit({messageByHuman:message, room:this.room});\r\n    this.messageByHuman =\"\";\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IAppState} from './ngxs/app.state';\r\nimport {IUser} from './core/interfaces/user';\r\nimport {Select} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {IBot} from './core/interfaces/IBot';\r\nimport {IIntegrationOption} from '../interfaces/integration-option';\r\nimport {DatePipe} from '@angular/common';\r\nimport {environment} from '../environments/environment.prod';\r\nimport {IAuthState} from './auth/ngxs/auth.state';\r\nimport {IProfilePermission} from '../interfaces/profile-action-permission';\r\n\r\ndeclare var Handsontable: any;\r\n\r\nexport enum ERouteNames {\r\n  customner = 'customner',\r\n  report = 'report',\r\n  create_report = 'create_report',\r\n  enterprise_profile = 'enterprise_profile',\r\n  analytics2 = 'analytics2',\r\n  consumer = 'consumer',\r\n  sessions = 'sessions',\r\n}\r\n\r\nexport enum EAPINames {\r\n  integration_master = 'api/v1/integrations/',\r\n  enterprise = 'enterprise/',\r\n}\r\n\r\nexport enum ETabNames {\r\n  customner = 'customner',\r\n  create_bot = 'create_bot',\r\n  knowledgeBase = 'knowledgeBase',\r\n  enterprise_profile = 'enterprise_profile',\r\n  architecture_tab = 'architecture_tab',\r\n  delete_bot = 'delete_bot',\r\n  architecture_items = 'architecture_items',\r\n  lower_panel_bot_detail = 'lower_panel_bot_detail',\r\n  lower_panel_tabs = 'lower_panel_tabs',\r\n  architecture_panel_pipeline = 'architecture_panel',\r\n  update_bot_button = 'update_bot_button',\r\n  bot_header_ellipsis = 'bot_header_ellipsis',\r\n  bot_header_reset = 'bot_header_reset',\r\n  integration_icons = 'integration_icons',\r\n  action_items = 'fa_action_icons',\r\n  forms = 'forms',\r\n  UI_SWITCH = 'UI_SWITCH',\r\n  report = 'report',\r\n  analytics2 = 'analytics2',\r\n  pipeline = 'pipeline',\r\n  knowledgebase = 'knowledgebase',\r\n  botversion = 'botversion',\r\n  sessions = 'sessions',/*everyone should get sessions*/\r\n  consumers = 'consumers',\r\n  update_profile = 'update_profile',\r\n  testing = 'testing'\r\n}\r\n\r\nexport enum ERoleName {\r\n  Admin = 'Admin',\r\n  'Bot Developer' = 'Bot Developer',\r\n  Analyst = 'Analyst',\r\n  Tester = 'Tester',\r\n}\r\n\r\nexport enum EAPermissionsDynamic {\r\n  'Get Bots'='Get Bots',\r\n  'Create Bots'='Create Bots',\r\n  'Update Bots'='Update Bots',\r\n  'Delete Bots'='Delete Bots',\r\n  'Get Bots Anonymous'='Get Bots Anonymous',\r\n  'Get Enterpise Knowledge base'='Get Enterpise Knowledge base',\r\n  'Create Enterprise Knowledge base'='Create Enterprise Knowledge base',\r\n  'Update Enterprise Knowledge base'='Update Enterprise Knowledge base',\r\n  'Delete Enterprise Knowledge base'='Delete Enterprise Knowledge base',\r\n  'Create Bot Versioning'='Create Bot Versioning',\r\n  'GET Bot Versioning'='GET Bot Versioning',\r\n  'Update Bot Versioning'='Update Bot Versioning',\r\n  'Delete Bot Versioning'='Delete Bot Versioning',\r\n  'Create Role'='Create Role',\r\n  'Get Role'='Get Role',\r\n  'Update Role'='Update Role',\r\n  'Delete Role'='Delete Role',\r\n  'Create User'='Create User',\r\n  'Get User'='Get User',\r\n  'Update User'='Update User',\r\n  'Get Consumers'='Get Consumers',\r\n  'Get Sessions'='Get Sessions',\r\n  'Analytics'='Analytics',\r\n  'Get Bot Testcases'='Get Bot Testcases',\r\n  'Create Bot Testcases'='Create Bot Testcases',\r\n  'Update Bot Testcases'='Update Bot Testcases',\r\n  'Delete Bot Testcases'='Delete Bot Testcases',\r\n  'Get Integrations'='Get Integrations',\r\n  'Get Pipeline Module'='Get Pipeline Module',\r\n  'Create Reports'='Create Reports',\r\n  'Get Reports'='Get Reports',\r\n  'Update Reports'='Update Reports',\r\n  'Delete Reports'='Delete Reports',\r\n  'Get Report History'='Get Report History',\r\n  'Get Enterprise'='Get Enterprise',\r\n  'Update Enterprise'='Update Enterprise',\r\n  'Delete User'='Delete User',\r\n  'Get Report Types'='Get Report Types',\r\n  'Send API'='Send API',\r\n  'Get Messages'='Get Messages',\r\n  'Get Actions'='Get Actions',\r\n  'Close Room'='Close Room',\r\n  'agent_close'='agent_close',\r\n  'Anonymize Conversation'='Anonymize Conversation',\r\n  'Post dfRules Debug'='Post dfRules Debug',\r\n  'Post genRules Debug'='Post genRules Debug',\r\n  'Post genTemplate Debug'='Post genTemplate Debug',\r\n  'Post Workflow Debug'='Post Workflow Debug',\r\n  'Workflow Webhook'='Workflow Webhook',\r\n  'Facebook Webhook'='Facebook Webhook',\r\n  'Backward Compatible Message API'='Backward Compatible Message API',\r\n  'Intelligence API Webhook'='Intelligence API Webhook',\r\n  'Delete Consumer'='Delete Consumer',\r\n  'Create Decrypt Audit'='Create Decrypt Audit',\r\n  'erase consumer'='erase consumer',\r\n  'Exec Reports'='Exec Reports',\r\n  'Download Reports'='Download Reports',\r\n  'Skype API'='Skype API',\r\n  'Update Password'='Update Password',\r\n  'Get Bot Knowledge base'='Get Bot Knowledge base',\r\n  'Create Bot Knowledge base'='Create Bot Knowledge base',\r\n  'Update Bot Knowledge base'='Update Bot Knowledge base',\r\n  'Delete Bot Knowledge base'='Delete Bot Knowledge base'\r\n}\r\n\r\n\r\n// import {IGlobalState} from '../interfaces/global-state';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConstantsService {\r\n\r\n\r\n  allPermissions: { id?: string, name?: number } = {};\r\n  //   [\r\n  //   'Get Bots',\r\n  //   'Create Bots',\r\n  //   'Update Bots',\r\n  //   'Delete Bots',\r\n  //   'Get Bots Anonymous',\r\n  //   'Get Enterpise Knowledge base',\r\n  //   'Create Enterprise Knowledge base',\r\n  //   'Update Enterprise Knowledge base',\r\n  //   'Delete Enterprise Knowledge base',\r\n  //   'Create Bot Versioning',\r\n  //   'GET Bot Versioning',\r\n  //   'Update Bot Versioning',\r\n  //   'Delete Bot Versioning',\r\n  //   'Create Role',\r\n  //   'Get Role',\r\n  //   'Update Role',\r\n  //   'Delete Role',\r\n  //   'Create User',\r\n  //   'Get User',\r\n  //   'Update User',\r\n  //   'Get Consumers',\r\n  //   'Get Sessions',\r\n  //   'Analytics',\r\n  //   'Get Bot Testcases',\r\n  //   'Create Bot Testcases',\r\n  //   'Update Bot Testcases',\r\n  //   'Delete Bot Testcases',\r\n  //   'Get Integrations',\r\n  //   'Get Pipeline Module',\r\n  //   'Create Reports',\r\n  //   'Get Reports',\r\n  //   'Update Reports',\r\n  //   'Delete Reports',\r\n  //   'Get Report History',\r\n  //   'Get Enterprise',\r\n  //   'Update Enterprise',\r\n  //   'Delete User',\r\n  //   'Get Report Types',\r\n  //   'Send API',\r\n  //   'Get Messages',\r\n  //   'Get Actions',\r\n  //   'Close Room',\r\n  //   'agent_close',\r\n  //   'Anonymize Conversation',\r\n  //   'Post dfRules Debug',\r\n  //   'Post genRules Debug',\r\n  //   'Post genTemplate Debug',\r\n  //   'Post Workflow Debug',\r\n  //   'Workflow Webhook',\r\n  //   'Facebook Webhook',\r\n  //   'Backward Compatible Message API',\r\n  //   'Intelligence API Webhook',\r\n  //   'Delete Consumer',\r\n  //   'Create Decrypt Audit',\r\n  //   'Anonymize Conversation',\r\n  //   'erase consumer',\r\n  //   'Exec Reports',\r\n  //   'Download Reports',\r\n  //   'Skype API',\r\n  //   'Update Password',\r\n  //   'Get Bot Knowledge base',\r\n  //   'Create Bot Knowledge base',\r\n  //   'Update Bot Knowledge base',\r\n  //   'Delete Bot Knowledge base'\r\n  // ];\r\n\r\n  permissionsDeniedMap = {\r\n    'Admin': {\r\n      route: [],\r\n      module: [],\r\n      tab: [],//tab, hyperlink, button\r\n      api: [],//tab, hyperlink, button\r\n    },\r\n    'Analyst': {\r\n      route: [ERouteNames.customner,\r\n        ERouteNames.enterprise_profile,\r\n        ERouteNames.report,\r\n        ERouteNames.create_report,\r\n      ],\r\n      module: [],\r\n      tab: [// =  tab, hyperlink, button\r\n        ETabNames.enterprise_profile,\r\n        ETabNames.customner,\r\n        ETabNames.architecture_tab,\r\n        ETabNames.bot_header_ellipsis,\r\n        ETabNames.knowledgeBase,\r\n        ETabNames.update_bot_button,\r\n        ETabNames.bot_header_reset,\r\n        ETabNames.architecture_items,\r\n        ETabNames.integration_icons,\r\n        ETabNames.forms,\r\n        ETabNames.action_items,\r\n        ETabNames.UI_SWITCH,\r\n        ETabNames.report,\r\n        // ETabNames.analytics2,\r\n        ETabNames.testing,\r\n        ETabNames.pipeline,\r\n        ETabNames.knowledgebase,\r\n        ETabNames.botversion,\r\n        // ETabNames.update_profile,\r\n        ETabNames.create_bot,\r\n        // ETabNames.architecture_items,\r\n\r\n      ],\r\n      api: [\r\n        EAPINames.integration_master,\r\n        EAPINames.enterprise,\r\n      ]\r\n    },\r\n    'Bot Developer': {\r\n      route: [\r\n        ERouteNames.enterprise_profile,\r\n      ],\r\n      module: [],\r\n      tab: [\r\n        ETabNames.enterprise_profile,\r\n        // ETabNames.update_profile,\r\n\r\n      ],//tab, hyperlink, button\r\n      api: [EAPINames.enterprise]\r\n    },\r\n    'Tester': {\r\n      route: [\r\n        ERouteNames.customner,\r\n        ERouteNames.enterprise_profile,\r\n        ERouteNames.report,\r\n\r\n        // ERouteNames.consumer,\r\n        // ERouteNames.analytics2,\r\n      ],\r\n      module: [],\r\n      tab: [// =  tab, hyperlink, button\r\n        ETabNames.enterprise_profile,\r\n        ETabNames.customner,\r\n        ETabNames.create_bot,\r\n        ETabNames.architecture_tab,\r\n        ETabNames.delete_bot,\r\n        // ETabNames.lower_panel_bot_detail,\r\n        ETabNames.architecture_panel_pipeline,\r\n        ETabNames.bot_header_ellipsis,\r\n        ETabNames.knowledgeBase,\r\n        ETabNames.update_bot_button,\r\n        ETabNames.bot_header_reset,\r\n        ETabNames.consumers,\r\n        // ETabNames.integration_icons,\r\n        ETabNames.forms,\r\n        ETabNames.action_items,\r\n        ETabNames.UI_SWITCH,\r\n        ETabNames.report,\r\n        ETabNames.analytics2,\r\n        // ETabNames.update_profile\r\n\r\n      ],\r\n      api: [\r\n        EAPINames.integration_master,\r\n        EAPINames.enterprise,\r\n      ]\r\n    }\r\n  };\r\n\r\n  forbiddenPermsDynamic:{id?:string,name?:number};\r\n  setPermissionsDeniedMap(allPermissions: IProfilePermission[]) {\r\n\r\n    try {\r\n      if(this.allowedPermissionIdsToCurrentRole.length === 0){/*exception for admin*/\r\n        this.forbiddenPermsDynamic = {};\r\n        return;\r\n      }\r\n    }catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    /*initializing allPermissions*/\r\n    allPermissions.forEach((perm) => {\r\n      this.allPermissions[perm.id] = perm.name;\r\n      this.allPermissions[perm.name] = perm.id;\r\n    });\r\n    this.forbiddenPermsDynamic = this.allPermissions;\r\n    this.allowedPermissionIdsToCurrentRole.forEach((currentPermId) => {\r\n      /*remove allowed permission from all permissions*/\r\n      let permName = this.allPermissions[currentPermId];\r\n      delete this.forbiddenPermsDynamic[currentPermId];\r\n      delete this.forbiddenPermsDynamic[permName];\r\n    });\r\n  }\r\n\r\n\r\n  allowedPermissionIdsToCurrentRole: number[];\r\n\r\n  constructor(private datePipe: DatePipe) {\r\n    this.app$.subscribe((value) => {\r\n      if (!value) return;\r\n      this.BACKEND_URL = (value && value.backendUrlRoot) || 'https://dev.imibot.ai/';\r\n    });\r\n    this.loggeduser$.subscribe((loggedUser: IAuthState) => {\r\n      if (loggedUser && loggedUser.user) {\r\n        this.loggedUser = loggedUser.user;\r\n        this.allowedPermissionIdsToCurrentRole = this.loggedUser.role.permissions.actions;\r\n      }\r\n    });\r\n  }\r\n\r\n  NEW_BOT_VERSION_TEMPLATE = {\r\n    'bot_id': 0,\r\n    'comment': '',\r\n    'df_rules': '',\r\n    'df_template': '',\r\n    'generation_rules': '',\r\n    'generation_templates': '',\r\n    'id': -1,\r\n    'workflow': '',\r\n    'updated_fields': {\r\n      'df_template': false,\r\n      'df_rules': false,\r\n      'generation_rules': false,\r\n      'generation_template': false,\r\n      'workflows': false\r\n    },\r\n    'forked_from': -1,\r\n  };\r\n\r\n  getNewBotVersionTemplate(botId: number) {\r\n    this.NEW_BOT_VERSION_TEMPLATE.bot_id = botId;\r\n    return this.NEW_BOT_VERSION_TEMPLATE;\r\n  }\r\n\r\n  static state: any;\r\n  loggedUser: IUser;\r\n  @Select() app$: Observable<IAppState>;\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n\r\n\r\n  isRouteAccessDenied(routeName: string) {\r\n    let role = this.loggedUser.role.name;\r\n    let deniedRoutes = this.permissionsDeniedMap[role].route;\r\n    let isRouteAccessDenied = deniedRoutes.find((route) => {\r\n      return route === routeName;\r\n    });\r\n    return isRouteAccessDenied;\r\n  }\r\n\r\n  isTabAccessDenied(tabName: string) {\r\n    if (!tabName) return false;\r\n    let role = this.loggedUser.role.name;\r\n    let deniedTabs = this.permissionsDeniedMap[role].tab;\r\n    let isTabAccessDenied = deniedTabs.find((route) => {\r\n      return route === tabName;\r\n    });\r\n    return !!isTabAccessDenied;\r\n  }\r\n\r\n  isAccessDeniedDynamic(tabName: EAPermissionsDynamic) {\r\n    if (!tabName || !this.forbiddenPermsDynamic) return false;\r\n    // let role = this.loggedUser.role.name;\r\n    // let deniedTabs = this.permissionsDeniedMap[role].tab;\r\n    let isTabAccessDenied = Object.keys(this.forbiddenPermsDynamic).find((perm) => {\r\n      return perm === tabName;\r\n    });\r\n    return !!isTabAccessDenied;\r\n  }\r\n\r\n  isApiAccessDenied(apiUrl: string) {\r\n    if (!apiUrl) return false;\r\n    let role = this.loggedUser.role.name;\r\n    let deniedApi = this.permissionsDeniedMap[role].api;\r\n    let isApiAccessDenied = deniedApi.find((route) => {\r\n      return apiUrl.includes(route);\r\n    });\r\n    let x = !!isApiAccessDenied;\r\n    return x;\r\n  }\r\n\r\n  public BACKEND_URL = environment.url;//'https://dev.imibot.ai/';//'http://10.0.27.176:8000/';\r\n  public BACKEND_URL_LOGIN = `${this.BACKEND_URL}` + 'api/v1/user/login/';\r\n  private BACKEND_URL_ENTERPRISE_USERS = `${this.BACKEND_URL}` + 'users/enterprise/';\r\n  private BACKEND_USER_UPDATE_URL = `${this.BACKEND_URL}` + 'user/';//https://dev.imibot.ai/user/5a030aa9b050705bd0ca5a45\r\n  private BACKEND_USER_CODE_BASED_BOT_LIST = `${this.BACKEND_URL}` + 'integrations';//https://dev.imibot.ai/integrations\r\n  public BACKEND_USER_PIPELINE_BASED_BOT_LIST = `${this.BACKEND_URL}` + 'api/v1/bot/';//https://dev.imibot.ai/bots\r\n\r\n  public readonly CHANNEL_LIST = [\r\n    {name: 'all', displayName: 'All Channels'},\r\n    {name: 'facebook', displayName: 'Facebook'},\r\n    {name: 'web', displayName: 'WebChat'},\r\n    {name: 'alexa', displayName: 'Alexa'}];\r\n\r\n  public readonly TIME_GRANULARITY_LIST = [\r\n    {name: 'hour', displayName: 'Hour'},\r\n    {name: 'day', displayName: 'Day'},\r\n    {name: 'week', displayName: 'Week'},\r\n    {name: 'month', displayName: 'Month'},\r\n    {name: 'year', displayName: 'Year'}\r\n  ];\r\n\r\n  public readonly DATE_PICKER_CONFIG = Object.assign({}, {\r\n    'containerClass': 'theme-dark-blue',\r\n    'dateInputFormat': 'DD/MM/YYYY',\r\n  });\r\n\r\n\r\n  getLoginUrl() {\r\n    return this.BACKEND_URL + 'api/v1/user/login/';\r\n  }\r\n\r\n  setLoggedUser(loggedUser: IUser) {\r\n    this.loggedUser = loggedUser;\r\n  }\r\n\r\n  getUserUpdateUrl(enterprise_UserId: number) {\r\n    return this.BACKEND_URL + `api/v1/user/${enterprise_UserId}/`;//{{url}}/user/{{Enterprise_UserId}}\r\n  }\r\n\r\n  getEnterpriseUrl(enterpriseId: number) {\r\n    // return this.BACKEND_URL + `api/v1/enterprise/${enterpriseId}/`;// + enterpriseId+'/'; //https://dev.imibot.ai/enterprise/59b0f043378feb000d7c9d13\r\n    return this.BACKEND_URL + `api/v1/enterprise/${enterpriseId}/`;// + enterpriseId+'/'; //https://dev.imibot.ai/enterprise/59b0f043378feb000d7c9d13\r\n  }\r\n\r\n  stopTestUrl() {\r\n    return this.BACKEND_URL + `api/v1/bottestcases/canceltesting/`;// https://dev.imibot.ai/api/v1/bottestcases/canceltesting/\r\n\r\n  }\r\n\r\n  getEnterpriseUsersUrl() {\r\n    return this.BACKEND_URL + 'api/v1/user/enterpriseusers/'; //https://dev.imibot.ai/api/v1/user/enterpriseusers/\r\n  }\r\n\r\n  getBotListUrl() {\r\n    // return this.BACKEND_USER_PIPELINE_BASED_BOT_LIST + 'api/v1/bot/';\r\n    return this.BACKEND_URL + 'api/v1/bot/?limit=1000';\r\n  }\r\n\r\n  getLogoutUrl() {\r\n    // http://localhost:8000/api/v1/logout/;\r\n    return this.BACKEND_URL + 'api/v1/logout/';\r\n  }\r\n\r\n  getNSetChatPreviewBotUrl(bot_unique_name, enterprise_unique_name) {\r\n    // http://localhost:8000/api/v1/logout/;\r\n    return this.BACKEND_URL + `api/v1/bot/preview/?bot_unique_name=${bot_unique_name}&enterprise_unique_name=${enterprise_unique_name}`;\r\n  }\r\n\r\n  getMasterIntegrationsList() {\r\n    return this.BACKEND_URL + 'api/v1/integrations/';\r\n  }\r\n\r\n  // getCodebasedBotListUrl() {\r\n  //   return this.BACKEND_USER_CODE_BASED_BOT_LIST;\r\n  //   return this.BACKEND_URL + 'api/v1/integrations/';\r\n  //\r\n  // }\r\n\r\n  getOverViewInfoUrl() {\r\n    return this.BACKEND_URL + 'analytics/overviewinfo/'; //https://dev.imibot.ai/analytics/overviewinfo;\r\n  }\r\n\r\n  getUserAcquisitionUrl() {\r\n    return this.BACKEND_URL + 'analytics/userAcquisition/'; //https://dev.imibot.ai/analytics/userAcquisition\r\n  }\r\n\r\n  getAverageRoomTimeUrl() {\r\n    return this.BACKEND_URL + 'analytics/averageRoomTime/'; //https://dev.imibot.ai/analytics/averageRoomTime\r\n  }\r\n\r\n  getTotalFlowsUrl() {\r\n    return this.BACKEND_URL + 'analytics/totalFlows/'; //https://dev.imibot.ai/analytics/totalFlows\r\n  }\r\n\r\n  getTotalSessionsUrl() {\r\n    return this.BACKEND_URL + 'analytics/totalSessions/'; //https://dev.imibot.ai/analytics/totalSessions\r\n  }\r\n\r\n  getSessionsByIdUrl(id) {\r\n    return this.BACKEND_URL + `api/v1/room/${id}/`; //https://dev.imibot.ai/api/v1/room/9913/\r\n  }\r\n\r\n  getSessionsMessageUrl(room_id: number) {\r\n    return this.BACKEND_URL + `api/v1/message/?room_id=${room_id}&limit=1000`; //https://dev.imibot.ai/api/v1/message/?room_id=60\r\n  }\r\n\r\n  getTotalMessagesUrl() {\r\n    return this.BACKEND_URL + 'analytics/totalMessages/'; //https://dev.imibot.ai/analytics/totalMessages\r\n  }\r\n\r\n  getMessagesByTemplateKeyUrl() {\r\n    return this.BACKEND_URL + 'analytics/messagesByTemplateKey/'; //https://dev.imibot.ai/analytics/messagesByTemplateKey\r\n  }\r\n\r\n  /*analytics channel urls below*/\r\n  getChannelWiseUsersUrl() {\r\n    return this.BACKEND_URL + 'analytics/channelWiseUsers/'; //https://dev.imibot.ai/analytics/channelWiseUsers\r\n  }\r\n\r\n  getChannelWiseSessionsUrl() {\r\n    return this.BACKEND_URL + 'analytics/channelWiseSessions/'; //https://dev.imibot.ai/analytics/channelWiseSessions\r\n  }\r\n\r\n  getChannelWiseFlowsPerSessionUrl() {\r\n    return this.BACKEND_URL + 'analytics/channelWiseFlowsPerSession/'; //https://dev.imibot.ai/analytics/channelWiseFlowsPerSession\r\n  }\r\n\r\n  getChannelWiseAverageSessionTimeUrl() {\r\n    return this.BACKEND_URL + 'analytics/channelWiseAverageSessionTime/'; //https://dev.imibot.ai/analytics/channelWiseAverageSessionTime\r\n  }\r\n\r\n  getReportUrl(limit = 1, offset = 10) {//limit: number, offset: number\r\n    return this.BACKEND_URL + `api/v1/reports?limit=${limit}&offset=${offset}`; //{{url}}/reports?limit=1&offset=10\r\n  }\r\n\r\n  getReportHistoryUrl(limit = 1, offset = 10) {\r\n    return this.BACKEND_URL + `api/v1/reporthistory?limit=${limit}&offset=${offset}`; //https://dev.imibot.ai/reporthistory?limit=1&offset=10\r\n  }\r\n\r\n  getReportDeleteUrl(report_id: number) {\r\n    return this.BACKEND_URL + `api/v1/reports/${report_id}/`; //http://dev.imibot.ai/api/v1/reports/1/\r\n  }\r\n\r\n  getDownloadReportHistoryByIdUrl(id: number) {\r\n    return this.BACKEND_URL + `api/v1/reporthistory/downloadreports/?id=${id}`; //http://localhost:8000/api/v1/reporthistory/downloadreports/?id=10\r\n  }\r\n\r\n  geReportTypesUrl() {\r\n    return this.BACKEND_URL + 'api/v1/reporttypes/'; // http://dev.imibot.ai/api/v1/reporttypes\r\n  }\r\n\r\n  getReportsEditInfo(_id) {\r\n    return this.BACKEND_URL + 'api/v1/reports/' + _id + '/'; //  https://dev.imibot.ai/reports/5b335b127c15580059c13fc5\r\n  }\r\n\r\n  getSaveReportsEditInfo(_id) {\r\n    return this.BACKEND_URL + `api/v1/reports/${_id}`; //  http://dev.imibot.ai/api/v1/reports/1/\r\n  }\r\n\r\n  getCreateReportUrl() {\r\n    return this.BACKEND_URL + `api/v1/reports/`; //  http://dev.imibot.ai/api/v1/reports\r\n  }\r\n\r\n\r\n  getAllVersionsByBotId() {\r\n    return this.BACKEND_URL + 'api/v1/botversioning/?limit=1000'; //\"http://localhost:8000/api/v1/botversioning\"\r\n  }\r\n\r\n  getSaveVersionByBotId(id) {\r\n    return this.BACKEND_URL + `api/v1/botversioning/${id}`; //https://dev.imibot.ai/api/v1/botversioning/9/\r\n  }\r\n\r\n  getCreateNewVersionByBotId(id) {\r\n    return this.BACKEND_URL + `api/v1/botversioning/`; //https://dev.imibot.ai/api/v1/botversioning/9/\r\n  }\r\n\r\n  getCreateNewBot() {\r\n    return this.BACKEND_URL + `api/v1/bot/`; //https://dev.imibot.ai/api/v1/bot/\r\n  }\r\n\r\n\r\n  getBotTestingUrl() {\r\n    return this.BACKEND_URL + 'api/v1/bottestcases/'; //https://dev.imibot.ai/api/v1/bottestcases/\r\n  }\r\n\r\n  getBotConsumerUrl(limit: number, offset: number) {\r\n    return this.BACKEND_URL + `api/v1/consumer/?limit=${limit}&offset=${offset}`; //https://localhost:8000/api/v1/consumer/?limit=1&offset=0\r\n  }\r\n\r\n  getBotConsumerByIdUrl(id: number) {\r\n    return this.BACKEND_URL + `api/v1/consumer/${id}`; //https://dev.imibot.ai/api/v1/consumer/2320/\r\n  }\r\n\r\n  getAllActionsUrl() {\r\n    return this.BACKEND_URL + `api/v1/actions/?limit=100`; //https://dev.imibot.ai/api/v1/actions/\r\n  }\r\n\r\n  getDeleteBotUrl(id: number) {\r\n    return this.BACKEND_URL + `api/v1/bot/${id}`; //http://localhost:8000/api/v1/bot/66/\r\n  }\r\n\r\n  getDecryptUrl() {\r\n    return this.BACKEND_URL + `api/v1/decrypt_audit/`; ///api/v1/decrypt_audit/\r\n  }\r\n\r\n  getSpecificBotByBotTokenUrl() {\r\n    return this.BACKEND_URL + `api/v1/bot/?limit=1000`; //https://dev.imibot.ai/api/v1/bot/\r\n  }\r\n\r\n  getBotSessionsUrl(limit: number, offset: number) {\r\n    return this.BACKEND_URL + `api/v1/room/?limit=${limit}&offset=${offset}&order_by=-id`; //https://dev.imibot.ai/aip/v1/room\r\n  }\r\n\r\n  getStartNewChatLoginUrl() {\r\n    return this.BACKEND_URL + 'api/v1/webhook/web/';//'send';\r\n  }\r\n\r\n  getAllBotVersionByBotIdUrl(bot_id) {\r\n    return this.BACKEND_URL + `api/v1/botversioning/?bot_id=${bot_id}`; //http://localhost:8000/api/v1/botversioning/?bot_id=2\r\n  }\r\n\r\n  getCustomBotNER(limit, offset) {\r\n    return this.BACKEND_URL + `api/v1/customner/?limit=${limit}&offset=${offset}`; //https://dev.imibot.ai/api/v1/customner/\r\n  }\r\n\r\n  updateOrDeleteCustomBotNER(custom_ner_id) {\r\n    return this.BACKEND_URL + `api/v1/customner/${custom_ner_id}`; //https://dev.imibot.ai/api/v1/customner/13/\r\n  }\r\n\r\n  updateBotUrl(bot_id: number) {\r\n    return this.BACKEND_URL + `api/v1/bot/${bot_id}`;//https://dev.imibot.ai/api/v1/bot/13/\r\n  }\r\n\r\n  createNewCustomBotNER() {\r\n    return this.BACKEND_URL + `api/v1/customner/`; //https://dev.imibot.ai/api/v1/customner/\r\n  }\r\n\r\n  /*Pipeline*/\r\n  getAllPipelineModuleUrl() {\r\n    return this.BACKEND_URL + `api/v1/pipelinemodule/?limit=200&offset=0`; //https://dev.imibot.ai/api/v1/pipelinemodule/\r\n  }\r\n\r\n  /*Enterprise NER*/\r\n  getEnterpriseNer(limit: number = 10, offset: number = 0) {\r\n    return this.BACKEND_URL + `api/v1/customner/?type=enterprise&limit=${limit}&offset=${offset}`; //https://dev.imibot.ai/api/v1/customner/\r\n  }\r\n\r\n  getEnterpriseNerById(id) {\r\n    return this.BACKEND_URL + `api/v1/customner/?type=enterprise&id=${id}`; //https://dev.imibot.ai/api/v1/customner/\r\n  }\r\n\r\n  getCustomNerById(id) {\r\n    return this.BACKEND_URL + `api/v1/customner/?id=${id}`; //dev.imibot.ai/api/v1/customner/?id=13\r\n  }\r\n\r\n  getAnalyticsUrl() {\r\n    return this.BACKEND_URL + 'api/v1/analytics/';//https://dev.imibot.ai/api/v1/analytics/\r\n  }\r\n\r\n  updateOrDeleteEnterpriseNer(id) {/*TODO: is it enterprise id??*/\r\n    return this.BACKEND_URL + `api/v1/customner/${id}`; //https://dev.imibot.ai/api/v1/customner/12/\r\n  }\r\n\r\n  createEnterpriseNer() {\r\n  }\r\n\r\n  updatePassword() {\r\n    return this.BACKEND_URL + 'api/v1/user/updatepassword/'; //https:dev.imibot.ai/api/v1/user/updatepassword///\r\n  }\r\n\r\n  updateBotSerializer(bot: IBot) {\r\n    let clone = {...bot};\r\n    let not_keys = [\r\n      'bot_access_token',\r\n      'created_at',\r\n      'created_by',\r\n      'enterprise_id',\r\n      'id',\r\n      'store_bot_versions',\r\n      'updated_at',\r\n      'updated_by'\r\n    ];\r\n    not_keys.forEach((key) => {\r\n      delete clone[key];\r\n    });\r\n    return clone;\r\n  }\r\n\r\n\r\n  //localstorage keys\r\n  LOCALSTORAGE_APP_STATE: string = 'LOCALSTORAGE_APP_STATE';\r\n  LOCALSTORAGE_LAST_STATE_UPDATED: string = 'LOCALSTORAGE_LAST_STATE_UPDATED';\r\n\r\n\r\n  //settings for smart table\r\n  readonly SMART_TABLE_CONSUMER_SETTING = {\r\n    columns: {\r\n      id: {//\r\n        title: 'ID',\r\n        width: '120px',\r\n        /*\r\n        https://github.com/akveo/ng2-smart-table/blob/master/src/app/pages/examples/filter/advanced-example-filters.component.ts#L69-L79\r\n        filter: {\r\n          type: 'list',\r\n          config: {\r\n            selectText: 'Select...',\r\n            list: [\r\n              { value: 'Glenna Reichert', title: 'Glenna Reichert' },\r\n              { value: 'Kurtis Weissnat', title: 'Kurtis Weissnat' },\r\n              { value: 'Chelsey Dietrich', title: 'Chelsey Dietrich' },\r\n            ],\r\n          },\r\n        },\r\n        */\r\n      },\r\n      name: {//\r\n        title: 'Name',\r\n        filter: false\r\n      },\r\n      phone: {\r\n        title: 'Phone',\r\n        filter: false\r\n      },\r\n      facebook_id: {//\r\n        title: 'Facebook ID',\r\n        width: '120px',\r\n        filter: false\r\n      },\r\n      skype_id: {//\r\n        title: 'Skype ID',\r\n        width: '120px',\r\n        filter: false\r\n      },\r\n      uid: {\r\n        title: 'UID',\r\n        width: '120px',\r\n        filter: false\r\n      },\r\n      email: {//\r\n        title: 'Email',\r\n        filter: false\r\n      },\r\n      updated_at: {//\r\n        title: 'Updated At',\r\n        width: '150px',\r\n        filter: false,\r\n        valuePrepareFunction: (date) => {\r\n\r\n          // var raw = new Date(date);\r\n          var formatted = new Date(date).toJSON().slice(0, 10).split('-').reverse().join('/'); //this.datePipe.transform(raw, 'd/m/yy');\r\n          return formatted;\r\n        }\r\n      },\r\n\r\n    },\r\n    // hideSubHeader: true\r\n    actions: {\r\n      edit: false,\r\n      add: false,\r\n      delete: false,\r\n      position: 'right',\r\n      custom: [\r\n        {name: 'decrypt', title: `<i class=\"fa fa-lock text-dark\"></i>`}\r\n      ],\r\n      width: '150px',\r\n    },\r\n    rowClassFunction: (row) => {\r\n      if (row.data.data_encrypted === false) {\r\n        return 'hightlight-decrypted';\r\n        ;\r\n      }\r\n      return '';\r\n    }\r\n  };\r\n\r\n  readonly SMART_TABLE_SESSIONS_SETTING = {\r\n\r\n    columns: {\r\n      id: {\r\n        title: 'Room ID',\r\n        width: '150px'\r\n      },\r\n      consumer_id: {\r\n        title: 'Consumer ID',\r\n        width: '150px'\r\n      },\r\n      total_message_count: {\r\n        title: 'Messages',\r\n        width: '150px'\r\n      },\r\n      updated_at: {\r\n        title: 'Updated At',\r\n        valuePrepareFunction: (date) => {\r\n          var raw = new Date(date);\r\n          var formatted = this.datePipe.transform(raw, 'medium');\r\n          return formatted;\r\n        }\r\n      },\r\n      sendtoagent: {\r\n        title: 'Sent to Agent'\r\n      }\r\n\r\n    },\r\n    // hideSubHeader: true\r\n    // actions: {\r\n    //   add: true,\r\n    //   edit: true,\r\n    //   delete: false\r\n    // },\r\n    actions: {\r\n      edit: false,\r\n      add: false,\r\n      delete: false,\r\n      position: 'right',\r\n      custom: [\r\n        {name: 'download', title: `<i  class=\"fa fa-download pr-2 text-dark\"></i>`},\r\n        {name: 'decrypt', title: `<i class=\"fa fa-lock text-dark\"></i>`},\r\n      ],\r\n\r\n    },\r\n    pager: {\r\n      display: false,\r\n      perPage: 5\r\n    },\r\n    rowClassFunction: (row) => {\r\n      if (row.data.highlight && !row.data.data_encrypted === false) {\r\n        return 'hightlight-created-row';\r\n        //   return 'score negative'; // Color from row with negative in score\r\n        // } else if (row.data.type === '(+)') {\r\n        //   return 'score positive';\r\n      }\r\n      if (row.data.highlight && row.data.data_encrypted === false) {\r\n        return 'hightlight-created-row hightlight-decrypted';\r\n      }\r\n      if (!row.data.highlight && row.data.data_encrypted === false) {\r\n        return 'hightlight-decrypted';\r\n      }\r\n      return '';\r\n    }\r\n  };\r\n  readonly SMART_TABLE_ENTERPISE_USERS_SETTING = {\r\n\r\n    columns: {\r\n      first_name: {\r\n        title: 'First Name'\r\n      },\r\n      email: {\r\n        title: 'Email'\r\n      },\r\n      // 'messages.length': {\r\n      //   title: 'Messages'\r\n      // },\r\n      'role': {\r\n        title: 'Role'\r\n      },\r\n      'permissions': {\r\n        title: 'Permissions'\r\n      }\r\n      , created_at: {\r\n        title: 'Created At'\r\n      },\r\n      updated_at: {\r\n        title: 'Updated At'\r\n      }\r\n    },\r\n    // hideSubHeader: true\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false\r\n    },\r\n    pager: {\r\n      display: false,\r\n      perPage: 5\r\n    }\r\n  };\r\n\r\n\r\n  readonly SMART_TABLE_KNOWLEDGEBASE_SETTING = {\r\n\r\n    columns: {\r\n      key: {\r\n        title: 'Concept Key'\r\n      },\r\n      ner_type: {\r\n        title: 'Type'\r\n      },\r\n      conflict_policy: {\r\n        title: 'Override Policy'\r\n      },\r\n    },\r\n    pager: {\r\n      display: false\r\n    },\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false\r\n    },\r\n    rowClassFunction: (row) => {\r\n      if (row.data.highlight) {\r\n        return 'hightlight-created-row';\r\n        //   return 'score negative'; // Color from row with negative in score\r\n        // } else if (row.data.type === '(+)') {\r\n        //   return 'score positive';\r\n      }\r\n      return '';\r\n    }\r\n  };\r\n\r\n  readonly HANDSON_TABLE_BOT_TESTING_colHeaders = ['Message', 'Expected Template', 'Status', 'Generated Template', 'RoomId', 'TransactionId'];\r\n  readonly HANDSON_TABLE_BOT_TESTING_columns = [\r\n    {data: 0, type: 'text',},\r\n    {data: 1, type: 'text',},\r\n    {data: 2, type: 'text', readOnly: true},\r\n    {data: 3, type: 'text', readOnly: true},\r\n    {data: 4, type: 'text', readOnly: true},\r\n    {data: 5, type: 'text', readOnly: true},\r\n  ];\r\n\r\n  readonly HANDSON_TABLE_KNOWLEDGE_BASE_SETTING = {\r\n    cells: function (row, col) {\r\n\r\n      /*To make first row highlighted*/\r\n      /*https://docs.handsontable.com/5.0.2/demo-conditional-formatting.html*/\r\n      var cellProperties = {};\r\n      // var data = this.instance.getData();\r\n\r\n\r\n      if (row === 0) {\r\n        cellProperties['renderer'] = function (instance, td, row, col, prop, value, cellProperties) {\r\n          Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n          td.style.fontWeight = 'bold';\r\n        }; // uses function directly\r\n      }\r\n      return cellProperties;\r\n    }\r\n  };\r\n  readonly HANDSON_TABLE_KNOWLEDGE_BASE_colHeaders = ['', '', ''];\r\n  readonly HANDSON_TABLE_KNOWLEDGE_BASE_columns = [\r\n    // {data: 0, type: 'text'},\r\n    // {data: 1, type: 'text'},\r\n    // {data: 2, type: 'text'},\r\n    // {data: 3, type: 'text'},\r\n    // {data: 4, type: 'text'},\r\n    // {data: 5, type: 'text'}\r\n  ];\r\n\r\n\r\n  readonly HIGHCHART_CHARTVALUE_ANALYTICS_PERFORMANCE_SESSION_WISE = {\r\n    chart: {\r\n      type: 'column'\r\n    },\r\n    title: {\r\n      text: 'Session Handling'\r\n    },\r\n    xAxis: {\r\n      type: 'datetime'\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: 'Percentage'\r\n      }\r\n    },\r\n    tooltip: {\r\n      pointFormat: '<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',\r\n      shared: true\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        stacking: 'percent'\r\n      },\r\n      series: {\r\n        pointStart: Date.UTC(2018, 6, 20),\r\n        pointInterval: 24 * 3600 * 1000\r\n      }\r\n    }\r\n  };\r\n\r\n  readonly HIGHCHART_THEMEVALUE_ANALYTICS_USER_LOYALTY = {\r\n    chart: {\r\n      style: {\r\n        fontFamily: 'helvetica'\r\n      }\r\n    },\r\n    colors: ['#5392ff', '#71cddd', '#34bc6e', '#95d13c', '#ffb000', '#fe8500', '#ff509e', '#9b82f3']\r\n  };\r\n\r\n  readonly HIGHCHART_THEMEVALUE_ANALYTICS_PERFORMANCE_SESSION_WISE = {\r\n    chart: {\r\n      style: {\r\n        fontFamily: 'helvetica'\r\n      }\r\n    },\r\n    colors: ['#5392ff', '#71cddd', '#34bc6e', '#95d13c', '#ffb000', '#fe8500', '#ff509e', '#9b82f3']\r\n  };\r\n\r\n  readonly HIGHCHART_CHARTVALUE_ANALYTICS_PERFORMANCE_TEMPLATE_KEY_AND_FLOW_TRIGGERED = {\r\n    chart: {\r\n      type: 'column'\r\n    },\r\n    title: {\r\n      text: ''\r\n    },\r\n    xAxis: {\r\n      categories: ['Flow 1', 'Flow 2', 'Flow 3', 'Flow 4', 'Flow 5']\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: ''\r\n      },\r\n      stackLabels: {\r\n        enabled: false,\r\n        style: {\r\n          fontWeight: 'bold',\r\n          color: 'gray'\r\n        }\r\n      }\r\n    },\r\n    tooltip: {\r\n      headerFormat: '<b>{point.x}</b><br/>'\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        stacking: 'normal'\r\n      }\r\n    }\r\n  };\r\n\r\n  readonly HIGHCHART_THEMEVALUE_ANALYTICS_PERFORMANCE_TEMPLATE_KEY_AND_FLOW_TRIGGERED = {\r\n    chart: {\r\n      style: {\r\n        fontFamily: 'helvetica'\r\n      }\r\n    },\r\n    colors: ['#5392ff', '#71cddd', '#34bc6e', '#95d13c', '#ffb000', '#fe8500', '#ff509e', '#9b82f3']\r\n  };\r\n\r\n  readonly HIGHCHART_CHARTVALUE_ANALYTICS_ENGAGEMENT = {\r\n\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    subtitle: {\r\n      text: ''\r\n    },\r\n    // xAxis: {\r\n    //   type: 'datetime'\r\n    // },\r\n\r\n    yAxis: {\r\n      title: {\r\n        text: '',\r\n        rotation: -90,\r\n        margin: 10,\r\n        style: {\r\n          fontWeight: 'bold'\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      layout: 'horizontal',\r\n      align: 'right',\r\n      verticalAlign: 'bottom'\r\n    },\r\n    tooltip: {\r\n      shared: true\r\n    },\r\n\r\n    // plotOptions: {\r\n    //   series: {\r\n    //     pointStart: Date.UTC(2018, 6, 20),\r\n    //     pointInterval: 24 * 3600 * 1000, // one day\r\n    //     marker: {\r\n    //       symbol: 'circle',\r\n    //       /* fillColor: '#ffffff' , */\r\n    //       lineWidth: 0,\r\n    //       radius: 4,\r\n    //       lineColor: null, // inherit from series\r\n    //     },\r\n    //     lineWidth: 3,\r\n    //     label: {\r\n    //       enabled: false,\r\n    //       style: {\r\n    //         fontFamily: 'sans-serif',\r\n    //         fontWeight: 'regular',\r\n    //         fontSize: 11\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // },\r\n    // responsive: {\r\n    //   rules: [{\r\n    //     condition: {\r\n    //       maxWidth: 1200\r\n    //     },\r\n    //     chartOptions: {\r\n    //       legend: {\r\n    //         layout: 'horizontal',\r\n    //         align: 'center',\r\n    //         verticalAlign: 'bottom'\r\n    //       }\r\n    //     }\r\n    //   }]\r\n    // }\r\n\r\n  };\r\n  readonly HIGHCHART_CHARTVALUE_USER_LOYALTY = {\r\n    chart: {\r\n      type: 'column'\r\n    },\r\n    title: {\r\n      text: 'Stacked column chart'\r\n    },\r\n    xAxis: {\r\n      categories: ['Apples1', 'Oranges', 'Pears', 'Grapes', 'Bananas']\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: 'Total fruit consumption'\r\n      },\r\n      stackLabels: {\r\n        enabled: true,\r\n        style: {\r\n          fontWeight: 'bold',\r\n          color: 'gray'\r\n        }\r\n      }\r\n    },\r\n    legend: {\r\n      align: 'right',\r\n      x: -30,\r\n      verticalAlign: 'top',\r\n      y: 25,\r\n      floating: true,\r\n      backgroundColor: 'white',\r\n      borderColor: '#CCC',\r\n      borderWidth: 1,\r\n      shadow: false\r\n    },\r\n    tooltip: {\r\n      headerFormat: '<b>{point.x}</b><br/>',\r\n      pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        stacking: 'normal',\r\n        dataLabels: {\r\n          enabled: true,\r\n          color: 'white'\r\n        }\r\n      }\r\n    },\r\n    series: [{\r\n      name: 'John',\r\n      data: [5, 3, 4, 7, 2]\r\n    }]\r\n  };\r\n\r\n  readonly integrationOptionListTemplate: IIntegrationOption = {\r\n    ccsp_details: {\r\n      debug: {\r\n        debugurl: '',\r\n        enabled: false\r\n      },\r\n      imichat: {\r\n        'access-token': '',\r\n        domain: '',\r\n        enabled: false,\r\n        'service-key': ''\r\n      }\r\n    },\r\n    channels: {\r\n      alexa: {\r\n        enabled: false,\r\n        skillId: ''\r\n      },\r\n      facebook: {\r\n        enabled: false,\r\n        'facebook-token': '',\r\n        id: ''\r\n      },\r\n      skype: {\r\n        client_id: '',\r\n        client_secret: '',\r\n        'skype-page-name': '',\r\n        enabled: false\r\n      },\r\n      'viber': {\r\n        'enabled': false,\r\n        'bot_name': '',\r\n        'bot_auth_token': '',\r\n        'bot_avatar': ''\r\n      },\r\n      'web': {\r\n        'enabled': false,\r\n        'speech_model': '',\r\n        'speech_tts': '',\r\n        'speech_url': ''\r\n      },\r\n      'line': {\r\n        'enabled': false,\r\n        skillId: ''\r\n      }\r\n    },\r\n    fulfillment_provider_details: {\r\n      imiconnect: {\r\n        appId: '',\r\n        appSecret: '',\r\n        enabled: false,\r\n        serviceKey: '',\r\n        streamName: '',\r\n        send_via_connect: ''\r\n      }\r\n    }\r\n\r\n  };\r\n}\r\n","\r\nimport {IOverviewInfo} from '../../../../interfaces/Analytics2/overview-info';\r\nimport {IAnalysis2HeaderData} from '../../../../interfaces/Analytics2/analytics2-header';\r\nimport {  IChannelWiseFlowsPerSessionItem } from '../../../../interfaces/Analytics2/volume-sessions';\r\nimport { IUserAcquisitionItem } from '../../../../interfaces/Analytics2/volume-users';\r\nimport { ITotalMessagesItem } from '../../../../interfaces/Analytics2/volume-messages';\r\nimport { IAverageRoomTimeItem } from '../../../../interfaces/Analytics2/volume-time';\r\nimport { IUserLoyaltyItem } from '../../../../interfaces/Analytics2/engagement-userLoyalty';\r\nimport { IChannelWiseAverageSessionTimeItem } from '../../../../interfaces/Analytics2/engagement-averageSessionTime';\r\nimport { ITotalFlowsItem } from '../../../../interfaces/Analytics2/performance-flows';\r\nimport { IFlowsPerRoomItem } from '../../../../interfaces/Analytics2/performance-flowsPerRoom';\r\nimport { ITotalRoomsItem } from '../../../../interfaces/Analytics2/performance-totalRooms';\r\nimport { IRoomDurationItem } from '../../../../interfaces/Analytics2/performance-roomDuration';\r\nimport { IChannelWiseSessionsItem } from '../../../../interfaces/Analytics2/engagement-channelWiseSessions';\r\nimport { IChannelWiseUsersItem } from '../../../../interfaces/Analytics2/engagement-channelWiseUsers';\r\n\r\nexport class SetAnalysis2HeaderData {\r\n  static readonly type = '[analytics2] SetAnalysis2HeaderData';\r\n  constructor(public payload: { analysisHeaderData: Partial<IAnalysis2HeaderData> }) {\r\n  }\r\n}\r\n\r\nexport class SetOverviewInfoData {\r\n  static readonly type = '[analytics2] SetOverviewInfoData';\r\n  constructor(public payload: { data: IOverviewInfo}) {\r\n  }\r\n}\r\n\r\n\r\nexport class SetChannelWiseFlowsPerSession {\r\n  static readonly type = '[analytics2] SetChannelWiseFlowsPerSession';\r\n  constructor(public payload: { data: IChannelWiseFlowsPerSessionItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetUserAcquisition {\r\n  static readonly type = '[analytics2] SetUserAcquisition';\r\n  constructor(public payload: { data: IUserAcquisitionItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetTotalMessages {\r\n  static readonly type = '[analytics2] SetTotalMessages';\r\n  constructor(public payload: { data: ITotalMessagesItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetAverageRoomTime {\r\n  static readonly type = '[analytics2] SetAverageRoomTime';\r\n  constructor(public payload: { data: IAverageRoomTimeItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetUserLoyalty {\r\n  static readonly type = '[analytics2] SetUserLoyalty';\r\n  constructor(public payload: { data: IUserLoyaltyItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetChannelWiseAverageSessionTime {\r\n  static readonly type = '[analytics2] SetChannelWiseAverageSessionTime';\r\n  constructor(public payload: { data: IChannelWiseAverageSessionTimeItem[]}) {\r\n  }\r\n}\r\nexport class SetTotalFlows {\r\n  static readonly type = '[analytics2] SetTotalFlows';\r\n  constructor(public payload: { data: ITotalFlowsItem[]}) {\r\n  }\r\n}\r\nexport class SetFlowsPerRoom {\r\n  static readonly type = '[analytics2] SetFlowsPerRoom';\r\n  constructor(public payload: { data: IFlowsPerRoomItem[]}) {\r\n  }\r\n}\r\nexport class SetTotalRooms {\r\n  static readonly type = '[analytics2] SetTotalRooms';\r\n  constructor(public payload: { data: ITotalRoomsItem[]}) {\r\n  }\r\n}\r\nexport class SetRoomDuration {\r\n  static readonly type = '[analytics2] SetRoomDuration';\r\n  constructor(public payload: { data: IRoomDurationItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetChannelWiseSessions {\r\n  static readonly type = '[analytics2] SetChannelWiseSessions';\r\n  constructor(public payload: { data: IChannelWiseSessionsItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetChannelWiseUsers {\r\n  static readonly type = '[analytics2] SetChannelWiseUsers';\r\n  constructor(public payload: { data: IChannelWiseUsersItem[]}) {\r\n  }\r\n}\r\n\r\nexport class SetUsagetrackingInfo {\r\n  static readonly type = '[analytics2] SetUsagetrackingInfo';\r\n  constructor(public payload: { data: any}) {\r\n  }\r\n}\r\n\r\nexport class Topgenerationtemplates {\r\n  static readonly type = '[analytics2] Topgenerationtemplates';\r\n  constructor(public payload: { data: any}) {\r\n  }\r\n}\r\n\r\nexport class TotalSessions {\r\n  static readonly type = '[analytics2] TotalSessions';\r\n  constructor(public payload: { data: any}) {\r\n  }\r\n}\r\n\r\n\r\nexport class ResetAnalytics2GraphData {\r\n  static readonly type = '[analytics2] ResetAnalytics2Data';\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class ResetAnalytics2HeaderData {\r\n  static readonly type = '[analytics2] ResetAnalytics2HeaderData';\r\n  constructor() {\r\n  }\r\n}\r\n","import {Action, State, StateContext} from '@ngxs/store';\r\nimport {\r\n  SetAnalysis2HeaderData,\r\n  SetOverviewInfoData,\r\n  SetChannelWiseFlowsPerSession,\r\n  SetUserAcquisition,\r\n  SetTotalMessages,\r\n  SetAverageRoomTime,\r\n  SetUserLoyalty,\r\n  SetChannelWiseAverageSessionTime,\r\n  SetTotalFlows,\r\n  SetFlowsPerRoom,\r\n  SetTotalRooms,\r\n  SetRoomDuration,\r\n  SetChannelWiseSessions,\r\n  SetChannelWiseUsers,\r\n  ResetAnalytics2GraphData, SetUsagetrackingInfo, Topgenerationtemplates, ResetAnalytics2HeaderData, TotalSessions\r\n} from './analysis.action';\r\nimport {IOverviewInfo, IOverviewInfoPostBody} from '../../../../interfaces/Analytics2/overview-info';\r\nimport {IAnalysis2HeaderData} from '../../../../interfaces/Analytics2/analytics2-header';\r\nimport {  IChannelWiseFlowsPerSessionResponseBody, IChannelWiseFlowsPerSessionItem } from '../../../../interfaces/Analytics2/volume-sessions';\r\nimport { IUserAcquisitionItem } from '../../../../interfaces/Analytics2/volume-users';\r\nimport { ITotalMessagesItem } from '../../../../interfaces/Analytics2/volume-messages';\r\nimport { IAverageRoomTimeItem } from '../../../../interfaces/Analytics2/volume-time';\r\nimport { ITotalFlowsItem } from '../../../../interfaces/Analytics2/performance-flows';\r\nimport { IUserLoyaltyItem } from '../../../../interfaces/Analytics2/engagement-userLoyalty';\r\nimport { IChannelWiseAverageSessionTimeItem } from '../../../../interfaces/Analytics2/engagement-averageSessionTime';\r\nimport { ITopgenerationtemplatesItem } from '../../../../interfaces/Analytics2/performance-gentemplate';\r\nimport { IFlowsPerRoomItem } from '../../../../interfaces/Analytics2/performance-flowsPerRoom';\r\nimport { ITotalRoomsItem } from '../../../../interfaces/Analytics2/performance-totalRooms';\r\nimport { IRoomDurationItem } from '../../../../interfaces/Analytics2/performance-roomDuration';\r\nimport { IChannelWiseSessionsItem } from '../../../../interfaces/Analytics2/engagement-channelWiseSessions';\r\nimport { IChannelWiseUsersItem } from '../../../../interfaces/Analytics2/engagement-channelWiseUsers';\r\n\r\nexport interface IAnalysis2State {\r\n  // analysisHeaderData:IOverviewInfoPostBody,\r\n  analysisHeaderData:Partial<IAnalysis2HeaderData>,\r\n  overviewInfo: IOverviewInfo,\r\n  channelWiseFlowsPerSession : IChannelWiseFlowsPerSessionItem[],\r\n  userAcquisition : IUserAcquisitionItem[],\r\n  totalMessages : ITotalMessagesItem[],\r\n  averageRoomTime: IAverageRoomTimeItem[],\r\n  totalFlows : ITotalFlowsItem[],\r\n  userLoyalty : IUserLoyaltyItem[],\r\n  channelWiseAverageSessionTime : IChannelWiseAverageSessionTimeItem[],\r\n  topgenerationtemplates : ITopgenerationtemplatesItem[],\r\n  totalSessions : any[],\r\n  flowsPerRoom : IFlowsPerRoomItem[],\r\n  totalRooms : ITotalRoomsItem[],\r\n  roomDuration : IRoomDurationItem[],\r\n  channelWiseSessions : IChannelWiseSessionsItem[],\r\n  channelWiseUsers : IChannelWiseUsersItem[],\r\n  usagetracking: any\r\n}\r\nconst defaultAnalytics2 = {\r\n  analysisHeaderData:null,\r\n  overviewInfo:null,\r\n  channelWiseFlowsPerSession : null,\r\n  userAcquisition : null,\r\n  totalMessages : null,\r\n  averageRoomTime : null,\r\n  totalFlows : null,\r\n  userLoyalty : null,\r\n  channelWiseAverageSessionTime : null,\r\n  topgenerationtemplates :null,\r\n  totalSessions :null,\r\n  flowsPerRoom : null,\r\n  totalRooms : null,\r\n  roomDuration : null,\r\n  channelWiseSessions : null,\r\n  channelWiseUsers: null,\r\n  usagetracking:null\r\n};\r\n@State<IAnalysis2State>({\r\n  name: 'analysisstate2',\r\n  defaults: defaultAnalytics2\r\n})\r\n\r\nexport class AnalysisStateReducer2 {\r\n  @Action(SetAnalysis2HeaderData)\r\n  setAnalysis2HeaderData({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetAnalysis2HeaderData) {\r\n    let state:IAnalysis2State = getState();\r\n    if(state){\r\n      patchState({ analysisHeaderData:{\r\n          ...state.analysisHeaderData,\r\n          ...payload.analysisHeaderData\r\n        }});\r\n    }else {\r\n      patchState({ analysisHeaderData:payload.analysisHeaderData});\r\n    }\r\n  }\r\n\r\n  @Action(SetOverviewInfoData)\r\n  setOverviewInfoData({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetOverviewInfoData) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({overviewInfo:payload.data});\r\n  }\r\n\r\n  @Action(SetChannelWiseFlowsPerSession)\r\n  setVolumUserData({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetChannelWiseFlowsPerSession) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({channelWiseFlowsPerSession:payload.data});\r\n  }\r\n\r\n  @Action(SetUserAcquisition)\r\n  setUserAcquisition({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetUserAcquisition) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({userAcquisition:payload.data});\r\n  }\r\n\r\n  @Action(SetTotalMessages)\r\n  setTotalMessages({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetTotalMessages) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({totalMessages:payload.data});\r\n  }\r\n  @Action(SetAverageRoomTime)\r\n  setAverageRoomTime({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetAverageRoomTime) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({averageRoomTime:payload.data});\r\n  }\r\n  @Action(SetUserLoyalty)\r\n  setUserLoyalty({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetUserLoyalty) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({userLoyalty:payload.data});\r\n  }\r\n  @Action(SetChannelWiseAverageSessionTime)\r\n  setChannelWiseAverageSessionTime({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetChannelWiseAverageSessionTime) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({channelWiseAverageSessionTime:payload.data});\r\n  }\r\n\r\n  @Action(SetTotalFlows)\r\n  setTotalFlows({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetTotalFlows) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({totalFlows:payload.data});\r\n  }\r\n  @Action(SetFlowsPerRoom)\r\n  setFlowsPerRoom({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetFlowsPerRoom) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({flowsPerRoom:payload.data});\r\n  }\r\n  @Action(SetTotalRooms)\r\n  setTotalRooms({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetTotalRooms) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({totalRooms:payload.data});\r\n  }\r\n  @Action(SetRoomDuration)\r\n  setRoomDuration({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetRoomDuration) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({roomDuration:payload.data});\r\n  }\r\n  @Action(SetChannelWiseSessions)\r\n  setChannelWiseSessions({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetChannelWiseSessions) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({channelWiseSessions:payload.data});\r\n  }\r\n\r\n  @Action(SetChannelWiseUsers)\r\n  setChannelWiseUsers({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetChannelWiseUsers) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({channelWiseUsers:payload.data});\r\n  }\r\n\r\n  @Action(SetUsagetrackingInfo)\r\n  setUsagetrackingInfo({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: SetUsagetrackingInfo) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({usagetracking:payload.data});\r\n  }\r\n\r\n  @Action(Topgenerationtemplates)\r\n  topgenerationtemplates({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: Topgenerationtemplates) {\r\n    let state:IAnalysis2State = getState();\r\n    patchState({topgenerationtemplates:payload.data});\r\n  }\r\n\r\n  @Action(TotalSessions)\r\n  TotalSessions({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>, {payload}: TotalSessions) {\r\n    let state:IAnalysis2State = getState();\r\n\r\n    patchState({totalSessions:payload.data});\r\n  }\r\n\r\n  @Action(ResetAnalytics2GraphData)\r\n  resetAnalytics2Data({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>) {\r\n    let state = getState();\r\n    patchState({...defaultAnalytics2,analysisHeaderData:state.analysisHeaderData});\r\n  }\r\n\r\n  @Action(ResetAnalytics2HeaderData)/*only for logout*/\r\n  resetAnalytics2HeaderData({patchState, setState, getState, dispatch}: StateContext<IAnalysis2State>) {\r\n    let state = getState();\r\n    patchState({analysisHeaderData:null});\r\n  }\r\n\r\n  static getAnalytics2HeaderData(state){\r\n    return state.analysisstate2.analysisHeaderData;\r\n  }\r\n  static getAnalytics2GraphData(state){/*this is not observe headerData*/\r\n    return {\r\n      ...state.analysisstate2,\r\n      // headerData:null\r\n    };\r\n  }\r\n\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {IAppState} from '../../../../../../ngxs/app.state';\r\nimport {IIntegrationMasterListItem} from '../../../../../../../interfaces/integration-option';\r\n\r\nexport interface IStore {\r\n  reportItem: any,\r\n  botcreationstate: any,\r\n  chatsessionstate: any,\r\n  analysisstate2: any,\r\n  app: any,\r\n  botlist: any,\r\n  loggeduser: any,\r\n  loggeduserenterpriseinfo: any,\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoreVariableService {\r\n  storeState: IStore=null;\r\n\r\n  constructor(private store: Store) {\r\n    this.store\r\n      .subscribe((state) => {\r\n          this.storeState = state;\r\n        }\r\n      );\r\n  }\r\n\r\n  getApp(){\r\n    if(this.storeState){\r\n      return this.storeState.app;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import {IAvatarList, IBasicInfo, ICustomners, IIntegration, IPipeline, ISaveDataManagment} from '../../../../interfaces/bot-creation';\r\nimport {IPipelineItem} from '../../../../interfaces/ai-module';\r\nimport {IBot, ICodeData} from '../../interfaces/IBot';\r\n\r\nexport class SaveNewBotInfo_CodeBased {\r\n  static readonly type = '[build-bots] set new codebased bot info1';\r\n  constructor(public payload: { data: IBot }) {}\r\n}\r\nexport class SaveNewBotInfo_PipelineBased {\r\n  static readonly type = '[build-bots] set new pipeline based bot info';\r\n  constructor(public payload: { data: IBot }) {}\r\n}\r\nexport class SaveDataManagment {\r\n  static readonly type = '[build-bots] set data management info';\r\n  constructor(public payload: { data: ISaveDataManagment }) {}\r\n}\r\nexport class SaveAvatorInfo {\r\n  static readonly type = '[build-bots] set Avator info';\r\n  constructor(public payload: { data: IAvatarList }) {}\r\n}\r\nexport class SavePipeLineInfo {\r\n  static readonly type = '[build-bots] set PipeLine info';\r\n  constructor(public payload: { data: {pipeline:IPipelineItem[], unselectedPipeline:IPipelineItem[]} }) {}\r\n}\r\nexport class SaveCustomnersInfo {\r\n  static readonly type = '[build-bots] set Customners info';\r\n  constructor(public payload: { data: ICustomners }) {}\r\n}\r\nexport class SaveCodeInfo {\r\n  static readonly type = '[build-bots] set Code info';\r\n  constructor(public payload: { data: ICodeData }) {}\r\n}\r\nexport class SaveIntegrationInfo {\r\n  static readonly type = '[build-bots] set Integration info';\r\n  constructor(public payload: { data: IIntegration }) {}\r\n}\r\n\r\nexport class ResetBuildBotToDefault {\r\n  static readonly type = '[build-bots] set Integration info';\r\n  constructor() {}\r\n}\r\n","import {Action, State, StateContext} from '@ngxs/store';\r\nimport {\r\n  IAvatar,\r\n  IAvatarList, IBasicInfo,\r\n  IBotConfig,\r\n  ICustomners,\r\n  IIntegration,\r\n  IPipeline, IUnselectedPipeline,\r\n  pipelineData\r\n} from '../../../../interfaces/bot-creation';\r\nimport {\r\n  SaveAvatorInfo,\r\n  SaveNewBotInfo_CodeBased,\r\n  SaveDataManagment,\r\n  SaveCodeInfo,\r\n  SaveCustomnersInfo,\r\n  SaveIntegrationInfo,\r\n  SavePipeLineInfo, SaveNewBotInfo_PipelineBased, ResetBuildBotToDefault,\r\n} from './buildbot.action';\r\nimport {ConstantsService} from '../../../constants.service';\r\nimport {buildPath} from 'selenium-webdriver/http';\r\nimport {IPipelineItem} from '../../../../interfaces/ai-module';\r\nimport {IBot, IBotCreation} from '../../interfaces/IBot';\r\nimport {EFormValidationErrors} from '../../../utility.service';\r\n\r\n\r\nexport interface IBotCreationState {\r\n  codeBased: IBot,\r\n  pipeLineBased: IBot\r\n}\r\n\r\n\r\nlet defaultCodeBasedBotState = {\r\n  logo:'https://imibot-dev.s3.amazonaws.com/default/defaultbotlogo.png',\r\n  room_persistence_time:240,\r\n  data_persistence_period:30,\r\n  transactions_per_pricing_unit:30\r\n};\r\ndefaultCodeBasedBotState[EFormValidationErrors.form_validation_basic_info]=false;\r\ndefaultCodeBasedBotState[EFormValidationErrors.form_validation_avator]=false;\r\nlet defaultPipeLineBasedBotState={...defaultCodeBasedBotState};\r\ndelete defaultPipeLineBasedBotState[EFormValidationErrors.form_validation_avator]\r\nconst defaultBuildBotState = {\r\n  codeBased: defaultCodeBasedBotState,\r\n  pipeLineBased: defaultPipeLineBasedBotState\r\n};\r\n\r\n@State<IBotCreationState>({\r\n  name: 'botcreationstate',\r\n  defaults: defaultBuildBotState\r\n})\r\n\r\nexport class BotCreationStateReducer {\r\n\r\n  constructor(private constantsService: ConstantsService) {\r\n  }\r\n\r\n  @Action(SaveNewBotInfo_CodeBased)\r\n  saveBasicInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveNewBotInfo_CodeBased) {\r\n    let state: IBotCreationState = getState();\r\n    let x = {\r\n      ...state,\r\n      codeBased: {\r\n        ...state.codeBased,\r\n        ...payload.data\r\n      }\r\n    };\r\n    setState(x);\r\n  }\r\n\r\n  @Action(SaveNewBotInfo_PipelineBased)\r\n  saveNewBotInfoPipelineBased({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveNewBotInfo_PipelineBased) {\r\n    let state: IBotCreationState = getState();\r\n    let x = {\r\n      ...state,\r\n      pipeLineBased: {\r\n        ...state.pipeLineBased,\r\n        ...payload.data\r\n      }\r\n    };\r\n    setState(x);\r\n  }\r\n\r\n  @Action(SaveDataManagment)\r\n  saveDataManagment({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveDataManagment) {\r\n    let state: IBotCreationState = getState();\r\n    let x = {\r\n      ...state,\r\n      codeBased: {\r\n        ...state.codeBased,\r\n        ...payload.data\r\n      }\r\n    };\r\n    setState(x);\r\n  }\r\n\r\n  @Action(SaveAvatorInfo)\r\n  saveAvatorInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveAvatorInfo) {\r\n    let state: IBotCreationState = getState();\r\n    patchState({\r\n      codeBased: {\r\n        ...state.codeBased,\r\n        avatars: payload.data.avatars\r\n      }\r\n    });\r\n  }\r\n\r\n  @Action(SavePipeLineInfo)\r\n  savePipeLineInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SavePipeLineInfo) {\r\n    let state: IBotCreationState = getState();\r\n    patchState({\r\n      codeBased: {\r\n        ...state.codeBased,\r\n        // pipeline: payload.data.pipeline,\r\n        // unselected_pipeline: payload.data.unselectedPipeline\r\n      }\r\n    });\r\n  }\r\n\r\n  @Action(SaveCustomnersInfo)\r\n  saveCustomnersInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveCustomnersInfo) {\r\n    let state: IBotCreationState = getState();\r\n    setState({...state});\r\n  }\r\n\r\n  // @Action(SaveCodeInfo)\r\n  // saveCodeInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveCodeInfo) {\r\n  //   // ;\r\n  //   let state: IBotCreationState = getState();\r\n  //   patchState({\r\n  //     codeBased: {\r\n  //       ...state.codeBased,\r\n  //       code: {\r\n  //         ...state.codeBased.code\r\n  //         , ...payload.data.code\r\n  //\r\n  //       }\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  @Action(SaveIntegrationInfo)\r\n  SaveIntegrationInfo({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>, {payload}: SaveIntegrationInfo) {\r\n    let state: IBotCreationState = getState();\r\n    patchState({\r\n      codeBased: {\r\n        ...state.codeBased,\r\n        // integration: {...state.codeBased.integration, ...payload.data}\r\n      }\r\n    });\r\n    // setState({...state});\r\n  }\r\n\r\n  @Action(ResetBuildBotToDefault)\r\n  resetBuildBotToDefault({patchState, setState, getState, dispatch}: StateContext<IBotCreationState>) {\r\n    let state: IBotCreationState = getState();\r\n    patchState(defaultBuildBotState);\r\n  }\r\n\r\n\r\n}\r\n","\r\nimport {IEnterpriseProfileInfo} from '../../../../interfaces/enterprise-profile';\r\nimport {IEnterpriseUser} from '../../interfaces/enterprise-users';\r\n\r\nexport class SetEnterpriseInfoAction {\r\n  static readonly type = '[view-bots] set enterpriseinfo';\r\n  constructor(public payload:{enterpriseInfo:IEnterpriseProfileInfo }){\r\n\r\n  }\r\n}\r\n\r\nexport class SetEnterpriseUsersAction {\r\n  static readonly type = '[enterprise-users] set enterpriseusers';\r\n  constructor(public payload:{enterpriseUsers:IEnterpriseUser[]}){}\r\n}\r\n\r\nexport class ResetEnterpriseUsersAction {\r\n  static readonly type = '[enterprise-users] set ResetEnterpriseUsersAction';\r\n  constructor(){}\r\n}\r\n","import {Action, Selector, State, StateContext} from '@ngxs/store';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {IEnterpriseProfileInfo} from '../../../../interfaces/enterprise-profile';\r\nimport {ResetEnterpriseUsersAction, SetEnterpriseInfoAction, SetEnterpriseUsersAction} from './enterpriseprofile.action';\r\nimport {IEnterpriseUser} from '../../interfaces/enterprise-users';\r\n\r\nconst initialState = {\r\n  'id': '',\r\n  enterpriseUniqueName:'',\r\n  'created_at': '',\r\n  \"email\": '',\r\n  'enterprise_unique_name': '',\r\n  \"industry\": '',\r\n  'logo': '',\r\n  'name': '',\r\n  \"phone\": '',\r\n  \"tier\": '',\r\n  'updated_at': '',\r\n  'updated_by': null,\r\n  \"websiteUrl\": '',\r\n  \"enterpriseusers\":[],\r\n  'tier_group': null,\r\n  'log_retention_period': '',\r\n  'secret_key': '',\r\n\r\n}\r\n@State<Partial<IEnterpriseProfileInfo>>({\r\n  name: 'loggeduserenterpriseinfo',\r\n  defaults: initialState\r\n})\r\n\r\nexport class EnterpriseprofileStateReducer {\r\n\r\n  @Action(SetEnterpriseInfoAction)\r\n  SetEnterpriseInfo({patchState, setState, getState, dispatch}: StateContext<IEnterpriseProfileInfo>, {payload}: SetEnterpriseInfoAction) {\r\n    patchState(payload.enterpriseInfo);\r\n  }\r\n\r\n  @Action(SetEnterpriseUsersAction)\r\n  setEnterpriseUsers({patchState, setState, getState, dispatch}: StateContext<IEnterpriseProfileInfo>, {payload}: SetEnterpriseUsersAction) {\r\n    patchState({enterpriseusers: payload.enterpriseUsers});\r\n  }\r\n\r\n  @Action(ResetEnterpriseUsersAction)\r\n  resetEnterpriseUsersAction({patchState, setState, getState, dispatch}: StateContext<IEnterpriseProfileInfo>) {\r\n    setState(<any>initialState);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <h1>404.Not Found</h1>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {ChatService} from '../../chat.service';\r\nimport {ServerService} from '../../server.service';\r\nimport {UtilityService} from '../../utility.service';\r\nimport {Store} from '@ngxs/store';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ConstantsService} from '../../constants.service';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n              private activatedRoute: ActivatedRoute,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.activatedRoute);\r\n  }\r\n\r\n}\r\n","import {IReportItem} from '../../../../interfaces/report';\r\n\r\n\r\nexport class SetReportFormAction {\r\n  static readonly type = '[reports] set reportItem$ f ';\r\n  constructor(public payload:{reportItem:IReportItem }){}\r\n}\r\n\r\n  export class SetCurrentEditedReportAction {\r\n  static readonly type = '[reports] set SetCurrentEditedReportAction ';\r\n  constructor(public payload:{reportItem:IReportItem }){}\r\n}\r\n","import {Action, Selector, State, StateContext} from '@ngxs/store';\r\nimport {SetCurrentEditedReportAction, SetReportFormAction,} from './reports.action';\r\nimport {IReportItem} from '../../../../interfaces/report';\r\n\r\n\r\nexport interface ReportStateModel {\r\n  formData?: IReportItem;\r\n  currentEditedReport: IReportItem;\r\n}\r\n\r\n@State<ReportStateModel>({\r\n  name:'reportItem',\r\n  defaults:{\r\n    formData:null,\r\n    currentEditedReport:null\r\n  }\r\n})\r\n\r\n//same as reducer\r\nexport class ReportsStateReducer{\r\n\r\n  @Action(SetCurrentEditedReportAction)\r\n  setCodebasedBotList({patchState, setState, getState,dispatch}:StateContext<ReportStateModel>, {payload} : SetCurrentEditedReportAction){\r\n    patchState({formData:payload.reportItem});\r\n  }\r\n\r\n  @Action(SetCurrentEditedReportAction)\r\n  setCurrentEditedReportAction({patchState, setState, getState,dispatch}:StateContext<ReportStateModel>, {payload} : SetCurrentEditedReportAction){\r\n    patchState({currentEditedReport:payload.reportItem});\r\n  }\r\n\r\n}\r\n\r\n","\r\nimport {IBot, IBotVersionData} from '../../interfaces/IBot';\r\n\r\nexport class SetCodeBasedBotListAction {\r\n  static readonly type = '[view-bots] set code-based-timePeriod-list';\r\n  constructor(public payload:{botList:IBot[] }){}\r\n}\r\n\r\nexport class SetAllBotListAction {\r\n  static readonly type = '[view-bots] set SetAllBotListAction';\r\n  constructor(public payload:{botList:IBot[] }){}\r\n}\r\n\r\nexport class AddNewBotInAllBotList {\r\n  static readonly type = '[view-bots] set AddNewBotInAllBotList';\r\n  constructor(public payload:{bot:IBot }){}\r\n}\r\n\r\nexport class SetPipeLineBasedBotListAction {\r\n  static readonly type = '[view-bots] set pipeline-based-list';\r\n  constructor(public payload:{botList:IBot[] }){}\r\n}\r\n\r\nexport class ResetBotListAction {\r\n  static readonly type = '[view-bots] reset ResetBotListAction';\r\n  constructor(){}\r\n}\r\n\r\nexport class SaveVersionInfoInBot {\r\n  static readonly type = '[build-bots] set version info in bot';\r\n  constructor(public payload: { data: IBotVersionData[], botId:number }) {}\r\n}\r\n\r\nexport class UpdateVersionInfoByIdInBot{\r\n  static readonly type = '[build-bots] update version info in bot';\r\n  constructor(public payload: { data: IBotVersionData, botId:number }) {}\r\n}\r\n\r\nexport class UpdateBotInfoByIdInBotInBotList {\r\n  static readonly type = '[build-bots] set info in bot inj botlist';\r\n  constructor(public payload: { data: IBot, botId:number }) {}\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport {\r\n  ResetBotListAction,\r\n  SetCodeBasedBotListAction,\r\n  SetPipeLineBasedBotListAction,\r\n  SaveVersionInfoInBot,\r\n  UpdateBotInfoByIdInBotInBotList, SetAllBotListAction, AddNewBotInAllBotList, UpdateVersionInfoByIdInBot\r\n} from './view-bot.action';\r\nimport { IBot } from '../../interfaces/IBot';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\nexport interface ViewBotStateModel {\r\n  codeBasedBotList?: IBot[];\r\n  pipelineBasedBotList?: IBot[];\r\n  allBotList: IBot[];\r\n}\r\n\r\n@State<ViewBotStateModel>({\r\n  name: 'botlist',\r\n  defaults: {\r\n    codeBasedBotList: null,\r\n    pipelineBasedBotList: null,\r\n    allBotList: null\r\n  }\r\n})\r\n\r\n//same as reducer\r\nexport class ViewBotStateReducer {\r\n\r\n  constructor(private activatedRoute: ActivatedRoute) {\r\n  }\r\n\r\n  @Action(SetAllBotListAction)\r\n  setAllBotListAction({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>, { payload }: SetAllBotListAction) {\r\n    let state = getState();\r\n    patchState({\r\n      // codeBasedBotList: payload.botList,\r\n      allBotList: [...payload.botList]\r\n    });\r\n  }\r\n\r\n  @Action(AddNewBotInAllBotList)\r\n  addNewBotInAllBotList({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>, { payload }: AddNewBotInAllBotList) {\r\n    let state = getState();\r\n    let allBotList = state.allBotList.push(payload.bot);\r\n    patchState({\r\n      allBotList: [...state.allBotList]\r\n    });\r\n  }\r\n\r\n  @Action(SetCodeBasedBotListAction)\r\n  setCodebasedBotList({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>, { payload }: SetCodeBasedBotListAction) {\r\n    let state = getState();\r\n    patchState({\r\n      codeBasedBotList: payload.botList,\r\n      // allBotList: [...(state.codeBasedBotList || []), ...(state.pipelineBasedBotList || []), ...payload.botList]\r\n    });\r\n  }\r\n\r\n  @Action(SetPipeLineBasedBotListAction)\r\n  setPipelineBasedBotList({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>, { payload }: SetPipeLineBasedBotListAction) {\r\n    let state = getState();\r\n    patchState({\r\n      pipelineBasedBotList: payload.botList,\r\n      // allBotList: [...(state.codeBasedBotList || []), ...(state.pipelineBasedBotList || []), ...payload.botList]\r\n    });\r\n  }\r\n\r\n  @Action(ResetBotListAction)\r\n  resetBotList({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>) {\r\n    setState({\r\n      codeBasedBotList: null,\r\n      pipelineBasedBotList: null,\r\n      allBotList: null\r\n    });\r\n  }\r\n\r\n  @Action(SaveVersionInfoInBot)\r\n  saveVersionInfoInBot({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>,\r\n    { payload }: SaveVersionInfoInBot) {\r\n    let state: ViewBotStateModel = getState();\r\n    let bot: IBot = state.allBotList.find((bot) => bot.id === payload.botId);\r\n    // \"updated_fields\"?: {\r\n    //   \"df_template\"?: boolean,\r\n    //   \"df_rules\"?: boolean,\r\n    //   \"generation_rules\"?: boolean,\r\n    //   \"generation_template\"?: boolean,\r\n    //   \"workflows\"?: boolean\r\n    // }\r\n    let versionList = payload.data;\r\n    // versionList.forEach(version => {\r\n    //   version.store_updated_fields = {\r\n    //     \"df_template\": false,\r\n    //     \"df_rules\": false,\r\n    //     \"generation_rules\": false,\r\n    //     \"generation_template\": false,\r\n    //     \"workflows\": false\r\n    //   }\r\n    // });\r\n    // versionList = {...versionList}\r\n    bot.store_bot_versions = versionList;\r\n\r\n    setState({ ...state });\r\n  }\r\n\r\n  @Action(UpdateVersionInfoByIdInBot)\r\n  updateVersionInfoByIdInBot({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>,\r\n    { payload }: UpdateVersionInfoByIdInBot) {\r\n    let state: ViewBotStateModel = getState();\r\n    let bot: IBot = state.allBotList.find((bot) => bot.id === payload.botId);\r\n\r\n    let store_bot_versions = bot.store_bot_versions || (bot.store_bot_versions = []);\r\n    let index = store_bot_versions.findIndex((version) => version.id === payload.data.id);\r\n    // index =  index===-1?0:index;\r\n    if (index !== -1) {\r\n      store_bot_versions[index] = { ...store_bot_versions[index], ...payload.data };\r\n    } else {\r\n      store_bot_versions.push(payload.data);\r\n    }\r\n    setState({ ...state });\r\n  }\r\n\r\n  @Action(UpdateBotInfoByIdInBotInBotList)\r\n  updateBotInfoByIdInBotInBotList({ patchState, setState, getState, dispatch }: StateContext<ViewBotStateModel>,\r\n    { payload }: UpdateBotInfoByIdInBotInBotList) {\r\n    let state: ViewBotStateModel = getState();\r\n    state.allBotList = state.allBotList.map((bot) => {\r\n      if (bot.id === payload.botId) {\r\n        return { ...bot, ...payload.data }\r\n      } else {\r\n        return bot;\r\n      }\r\n      // return  ? {...bot, ...payload.data} : bot;\r\n    });\r\n    setState({ ...state });\r\n  }\r\n\r\n  static getCodeBased(x) {\r\n    return x.botlist.codeBasedBotList;\r\n  }\r\n\r\n  static getPipelineBased(x) {\r\n    // ;\r\n    return x.botlist.pipelineBasedBotList;\r\n  }\r\n\r\n  // static getBotById(state){\r\n  //   let id = this.ac\r\n  //   // return x.botlist.pipelineBasedBotList.;\r\n  //   return x.botlist.pipelineBasedBotList.filter(timePeriod => timePeriod._id === )\r\n  //\r\n  //   for(let i=0; i< x.botlist.pipelineBasedBotList.length; ++i){\r\n  //     let timePeriod = x.botlist.pipelineBasedBotList[i];\r\n  //     if(timePeriod._id === id) return timePeriod\r\n  //   }\r\n  //\r\n  //   for(let i=0; i< x.botlist.codeBasedBotList.length; ++i){\r\n  //     let timePeriod = x.botlist.codeBasedBotList[i];\r\n  //     if(timePeriod._id === id) return timePeriod\r\n  //   }\r\n  // }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DragService {\r\n  private zone: string;\r\n\r\n  startDrag(zone: string) {\r\n    this.zone = zone;\r\n  }\r\n\r\n  accepts(zone: string): boolean {\r\n    return zone == this.zone;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filterArray'\r\n})\r\nexport class FilterArrayPipe implements PipeTransform {\r\n\r\n  transform(arr: any[], key: string): any {\r\n\r\n    return arr.sort((obj1,obj2)=>{\r\n      return obj2[key]-obj1[key];\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"vertical-centered-box\\\" style=\\\"position: fixed; left: 0; right: 0;top: 0; bottom: 0 \\\">\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"loader-circle\\\"></div>\\r\\n    <div class=\\\"loader-line-mask\\\">\\r\\n      <div class=\\\"loader-line\\\"></div>\\r\\n    </div>\\r\\n    <img src=\\\"https://staging.imibot.ai/static/favicon.ico\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".vertical-centered-box:after {\\n  content: '';\\n  display: inline-block;\\n  height: 100%;\\n  vertical-align: middle;\\n  margin-right: -0.25em; }\\n\\n.vertical-centered-box .content {\\n  box-sizing: border-box;\\n  display: inline-block;\\n  vertical-align: middle;\\n  text-align: left;\\n  font-size: 0; }\\n\\n* {\\n  transition: all 0.3s; }\\n\\n.loader-circle {\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  width: 80%;\\n  height: 80%;\\n  border-radius: 50%;\\n  margin-left: -60px;\\n  margin-top: -60px; }\\n\\n.loader-line-mask {\\n  position: absolute;\\n  left: 50%;\\n  top: 50%;\\n  width: 60px;\\n  height: 120px;\\n  margin-left: -60px;\\n  margin-top: -60px;\\n  overflow: hidden;\\n  -webkit-transform-origin: 60px 60px;\\n  transform-origin: 60px 60px;\\n  -webkit-mask-image: -webkit-linear-gradient(top, #ffffff, rgba(255, 255, 255, 0));\\n  -webkit-animation: rotate 1.2s infinite linear;\\n  animation: rotate 1.2s infinite linear; }\\n\\n.loader-line-mask .loader-line {\\n  width: 120px;\\n  height: 120px;\\n  border-radius: 50%;\\n  box-shadow: inset 0 0 0 2px #02BDE8; }\\n\\nlesshat-selector {\\n  -lh-property: 0; }\\n\\n@-webkit-keyframes rotate {\\n  0% {\\n    -webkit-transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg); } }\\n\\n@keyframes rotate {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n    transform: rotate(0deg); }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg); } }\\n\\n[not-existing] {\\n  zoom: 1; }\\n\\nlesshat-selector {\\n  -lh-property: 0; }\\n\\n@-webkit-keyframes fade {\\n  0% {\\n    opacity: 1; }\\n  50% {\\n    opacity: 0.25; } }\\n\\n@keyframes fade {\\n  0% {\\n    opacity: 1; }\\n  50% {\\n    opacity: 0.25; } }\\n\\n[not-existing] {\\n  zoom: 1; }\\n\\nlesshat-selector {\\n  -lh-property: 0; }\\n\\n@-webkit-keyframes fade-in {\\n  0% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n@keyframes fade-in {\\n  0% {\\n    opacity: 0; }\\n  100% {\\n    opacity: 1; } }\\n\\n[not-existing] {\\n  zoom: 1; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-imi-loader',\r\n  templateUrl: './imi-loader.component.html',\r\n  styleUrls: ['./imi-loader.component.scss']\r\n})\r\nexport class ImiLoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'msToHhmm'\r\n})\r\nexport class MsToHhMmPipe implements PipeTransform {\r\n\r\n  constructor(){\r\n\r\n  }\r\n\r\n  getCurrentTimeInHHMM(ms) {\r\n    var date = new Date(ms);\r\n    var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    var minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n    return hours + ':' + minutes;\r\n  };\r\n\r\n  transform(time_ms: any, args?: any): any {\r\n    return this.getCurrentTimeInHHMM(time_ms);\r\n  }\r\n\r\n}\r\n","import {IAppState} from './app.state';\r\nimport {IIntegrationMasterListItem} from '../../interfaces/integration-option';\r\nimport {IProfilePermission} from '../../interfaces/profile-action-permission';\r\nimport {ICustomNerItem} from '../../interfaces/custom-ners';\r\nimport {IPipelineItem} from '../../interfaces/ai-module';\r\n\r\nexport class SetStateFromLocalStorageAction {\r\n  static readonly type = '[app] set state from localstorage';\r\n\r\n  constructor(public payload: { state: IAppState }) {\r\n\r\n  }\r\n}\r\n\r\nexport class SetLastSateUpdatedTimeAction {\r\n  static readonly type = '[app] set last state updated';\r\n\r\n  constructor(public payload: { lastUpdated: number }) {\r\n\r\n  }\r\n}\r\n\r\nexport class ResetStoreToDefault {\r\n  static readonly type = '[app] reset ResetStoreToDefault';\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetProgressValue {\r\n  static readonly type = '[app] set SetProgressValue';\r\n\r\n  constructor(public payload: {\r\n    progressbar: {\r\n      loading: boolean,\r\n      value: number\r\n    }\r\n  }) {}\r\n}\r\n\r\nexport class SetMasterIntegrationsList {\r\n  static readonly type = '[app] set SetMasterIntegrationsList';\r\n\r\n  constructor(public payload: {\r\n    masterIntegrationList:IIntegrationMasterListItem[]\r\n  }) {}\r\n}\r\n\r\n\r\nexport class SetMasterProfilePermissions {\r\n  static readonly type = '[app] set SetProfilePermissions';\r\n\r\n  constructor(public payload: {\r\n    masterProfilePermissions:IProfilePermission[]\r\n  }) {}\r\n}\r\n\r\nexport class SetBackendURlRoot {\r\n  static readonly type = '[app] set SetBackendURlRoot';\r\n\r\n  constructor(public payload: {\r\n    url:string\r\n  }) {}\r\n}\r\n\r\nexport class SetShowBackendURlRoot {\r\n  static readonly type = '[app] set SetShowBackendURlRoot ';\r\n\r\n  constructor(public payload: {\r\n    showBackendURlRoot:boolean\r\n  }) {}\r\n}\r\n\r\nexport class SetEnterpriseNerData {\r\n  static readonly type = '[app] set SetEnterpriseNERs';\r\n\r\n  constructor(public payload: {\r\n    enterpriseNerData:ICustomNerItem[]\r\n  }) {}\r\n}\r\n\r\nexport class SetPipelineModuleMasterData{\r\n  static readonly type = '[app] set SetPipelineModuleMasterData';\r\n\r\n  constructor(public payload: {\r\n    masterPipelineItems:IPipelineItem[]\r\n  }) {}\r\n}\r\n\r\nexport class ResetAppState {\r\n  static readonly type = '[app] set ReSetAppState';\r\n\r\n  constructor() {}\r\n}\r\n\r\nexport class SetAutoLogoutTime {\r\n  static readonly type = '[app] set setAutoLogoutTime';\r\n\r\n  constructor(public payload:{time:number}) {}\r\n}\r\n\r\n\r\n\r\n","import {Action, State, StateContext, Store} from '@ngxs/store';\r\nimport {\r\n  ResetAppState,\r\n  ResetStoreToDefault, SetAutoLogoutTime, SetBackendURlRoot, SetEnterpriseNerData,\r\n  SetLastSateUpdatedTimeAction,\r\n  SetMasterIntegrationsList,\r\n  SetMasterProfilePermissions, SetPipelineModuleMasterData,\r\n  SetProgressValue, SetShowBackendURlRoot,\r\n  SetStateFromLocalStorageAction\r\n} from './app.action';\r\nimport {ConstantsService} from '../constants.service';\r\nimport {IIntegrationMasterListItem} from '../../interfaces/integration-option';\r\nimport {IProfilePermission} from '../../interfaces/profile-action-permission';\r\nimport {ICustomNerItem} from '../../interfaces/custom-ners';\r\nimport {IPipelineItem} from '../../interfaces/ai-module';\r\n\r\n\r\nexport interface IAppState /*extends INavigationState, IAuthState */\r\n{\r\n  lastUpdated: number,\r\n  progressbar: {\r\n    show: boolean,\r\n    loading: boolean,\r\n    value: number\r\n  },\r\n  masterIntegrationList: IIntegrationMasterListItem[],\r\n  masterProfilePermissions: IProfilePermission[],\r\n  masterPipelineItems: IPipelineItem[],\r\n  backendUrlRoot: string,\r\n  showBackendUrlRootButton: boolean,\r\n  enterpriseNerData: ICustomNerItem[],\r\n  autoLogoutTime: number\r\n}\r\n\r\nconst appDefaultState: IAppState = {\r\n  lastUpdated: 0,\r\n  progressbar: {\r\n    show: false,\r\n    loading: false,\r\n    value: 0\r\n  },\r\n  masterIntegrationList: null,\r\n  masterProfilePermissions: null,\r\n  backendUrlRoot: 'http://staging.imibot.ai/',//'https://dev.imibot.ai/',//'http://staging.imibot.ai/',//'https://dev.imibot.ai/',\r\n  showBackendUrlRootButton: false,\r\n  enterpriseNerData: [],\r\n  masterPipelineItems: null,\r\n  autoLogoutTime: Date.now() + 3600 * 1000\r\n};;\r\n\r\n@State<IAppState>({\r\n  name: 'app',\r\n  defaults: appDefaultState\r\n})//same as reducer\r\nexport class AppStateReducer {\r\n\r\n  constructor(private constantsService: ConstantsService, private store: Store) {\r\n  }\r\n\r\n  @Action(SetStateFromLocalStorageAction)\r\n  setUsername({patchState, setState, getState, dispatch,}: StateContext<any>, {payload}: SetStateFromLocalStorageAction) {\r\n    console.log('resetting state', getState());\r\n  }\r\n\r\n  // @Action(ResetStoreToDefault)\r\n  // resetStoreToDefault({patchState, setState, getState, dispatch,}: StateContext<any>) {\r\n  //   this.store.reset(appDefaultState);\r\n  //   console.log('resetting state', getState());\r\n  // }\r\n\r\n  @Action(SetProgressValue)\r\n  SetProgressValue({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetProgressValue) {\r\n    // this.store.reset(appDefaultState);\r\n    // console.log('resetting state', getState());\r\n    patchState({progressbar: payload.payload.progressbar});\r\n  }\r\n\r\n  @Action(SetMasterIntegrationsList)\r\n  setMasterIntegrationsList({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetMasterIntegrationsList) {\r\n    patchState({masterIntegrationList: payload.payload.masterIntegrationList});\r\n  }\r\n\r\n  @Action(SetMasterProfilePermissions)\r\n  setMasterProfilePermissions({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetMasterProfilePermissions) {\r\n    patchState({masterProfilePermissions: payload.payload.masterProfilePermissions});\r\n  }\r\n\r\n\r\n  @Action(SetBackendURlRoot)\r\n  setBackendURlRoot({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetBackendURlRoot) {\r\n    patchState({backendUrlRoot: payload.payload.url});\r\n  }\r\n\r\n  @Action(SetShowBackendURlRoot)\r\n  setShowBackendURlRoot({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetShowBackendURlRoot) {\r\n    patchState({showBackendUrlRootButton: payload.payload.showBackendURlRoot});\r\n  }\r\n\r\n  @Action(SetEnterpriseNerData)\r\n  setEnterpriseNerData({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetEnterpriseNerData) {\r\n    patchState({enterpriseNerData: payload.payload.enterpriseNerData});\r\n  }\r\n\r\n  @Action(SetPipelineModuleMasterData)\r\n  setPipelineModuleMasterData({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetPipelineModuleMasterData) {\r\n    patchState({masterPipelineItems: payload.payload.masterPipelineItems});\r\n  }\r\n\r\n  @Action(SetAutoLogoutTime)\r\n  setAutoLogoutTime({patchState, setState, getState, dispatch,}: StateContext<any>, payload: SetAutoLogoutTime) {\r\n    patchState({autoLogoutTime: payload.payload.time});\r\n  }\r\n\r\n  @Action(ResetAppState)\r\n  resetAppState({patchState, setState, getState, dispatch,}: StateContext<any>, payload: ResetAppState) {\r\n    patchState(appDefaultState);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <h1>Not Authorized</h1>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-authorised',\r\n  templateUrl: './not-authorised.component.html',\r\n  styleUrls: ['./not-authorised.component.scss']\r\n})\r\nexport class NotAuthorisedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CardCarouselComponent} from './chat/carousel/card-carousel/card-carousel.component';\r\nimport {QuickReplyComponent} from './chat/carousel/quick-reply/quick-reply.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ImiLoaderComponent} from './imi-loader/imi-loader.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CardCarouselComponent,\r\n    QuickReplyComponent,\r\n    ImiLoaderComponent\r\n  ],\r\n  exports:[\r\n    CardCarouselComponent,\r\n    QuickReplyComponent,\r\n    ImiLoaderComponent\r\n  ],\r\n  imports:[\r\n    CommonModule\r\n  ]\r\n})\r\nexport class RichMediaModule{\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {ConstantsService} from './constants.service';\r\nimport {Select, Selector, Store} from '@ngxs/store';\r\nimport {IUser} from './core/interfaces/user';\r\nimport {IHeaderData} from '../interfaces/header-data';\r\nimport {IOverviewInfoResponse, IOverviewInfoPostBody} from '../interfaces/Analytics2/overview-info';\r\nimport {_throw} from 'rxjs/observable/throw';\r\nimport 'rxjs/add/operator/do';\r\nimport {UtilityService} from './utility.service';\r\nimport {\r\n  SaveVersionInfoInBot,\r\n  SetAllBotListAction,\r\n  SetCodeBasedBotListAction,\r\n  SetPipeLineBasedBotListAction,\r\n  UpdateBotInfoByIdInBotInBotList\r\n} from './core/view-bots/ngxs/view-bot.action';\r\nimport {IBot, IBotResult, IBotVersionResult} from './core/interfaces/IBot';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SetAutoLogoutTime, SetMasterIntegrationsList, SetProgressValue} from './ngxs/app.action';\r\nimport {IIntegrationMasterListItem, IIntegrationOption} from '../interfaces/integration-option';\r\nimport {ICustomNerItem} from '../interfaces/custom-ners';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/filter';\r\nimport {IConsumerDetails} from './chat/ngxs/chat.state';\r\nimport {EBotMessageMediaType, EChatFrame, IMessageData, IRoomData} from '../interfaces/chat-session-state';\r\nimport {\r\n  AddMessagesToRoomByRoomId,\r\n  AddNewRoom, ChangeBotIsThinkingDisplayByRoomId,\r\n  ChangeFrameAction,\r\n  ResetChatState,\r\n  SetCurrentBotDetailsAndResetChatStateIfBotMismatch,\r\n  SetCurrentRoomID, ToggleChatWindow\r\n} from './chat/ngxs/chat.action';\r\nimport {b, st} from '@angular/core/src/render3';\r\nimport {IGeneratedMessageItem} from '../interfaces/send-api-request-payload';\r\n\r\ndeclare var IMI: any;\r\ndeclare var $: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServerService {\r\n\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  private X_AXIS_TOKEN: string = null;\r\n  private AUTH_TOKEN: string = null;\r\n  private isLoggedIn: boolean = false;\r\n\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private utilityService: UtilityService,\r\n    private store: Store,\r\n    private router: Router,\r\n    private constantsService: ConstantsService) {\r\n    this.loggeduser$.subscribe((value) => {\r\n      if (!value || !value.user) return;\r\n      this.AUTH_TOKEN = value.user.auth_token && value.user.auth_token;\r\n      this.X_AXIS_TOKEN = value.user.user_access_token && value.user.user_access_token;\r\n    });\r\n  };\r\n\r\n  removeTokens() {\r\n    this.X_AXIS_TOKEN = null;\r\n    this.AUTH_TOKEN = null;\r\n  }\r\n\r\n  createHeaders(headerData?: any): HttpHeaders {\r\n    let headers = new HttpHeaders();\r\n    let tokenData: IHeaderData = {};\r\n    tokenData = {'user-access-token': this.X_AXIS_TOKEN};\r\n    tokenData = {...tokenData, 'auth-token': this.AUTH_TOKEN};\r\n    tokenData = {...tokenData, 'content-type': 'application/json'};\r\n\r\n    headerData = {\r\n      ...tokenData,\r\n      ...headerData,\r\n    };\r\n\r\n    if (headerData)\r\n      for (let key in headerData) {\r\n        /*don't set header data for undefined values*/\r\n        headerData[key] && (headers = headers.set(key, headerData[key]));\r\n      }\r\n    return headers;\r\n  }\r\n\r\n  showErrorMessageForErrorTrue(errorObj: { 'error': true, 'message': string, 'transaction_id': string }) {\r\n    if(errorObj.error){\r\n      this.utilityService.showErrorToaster(errorObj.message);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  makeGetReq<T>(reqObj: { url: string, headerData?: any, noValidateUser?: boolean }): Observable<T> {\r\n    if (!reqObj.noValidateUser && this.constantsService.isApiAccessDenied(reqObj.url)) {\r\n      return throwError('api access not allowed');\r\n    }\r\n    let headers = this.createHeaders(reqObj.headerData);\r\n\r\n    this.changeProgressBar(true, 0);\r\n    return this.httpClient.get<T>(reqObj.url, {headers: headers})\r\n    // .pipe((\r\n    //   mergeMap((value:T) => value.error ? throwError(value) : of(value))\r\n    // ))\r\n      .map((value: any) => {\r\n        if (value && value.error) {\r\n          this.showErrorMessageForErrorTrue(value);\r\n          return throwError(value);\r\n        } else {\r\n          return value;\r\n        }\r\n      })\r\n      .do((value) => {\r\n        this.changeProgressBar(false, 100);\r\n        this.IncreaseAutoLogoutTime();\r\n      })\r\n      .catch((e: any, caught: Observable<T>) => {\r\n        console.log(e);\r\n        this.showErrorMessageForErrorTrue(e);\r\n        this.changeProgressBar(false, 100);\r\n\r\n        this.utilityService.showErrorToaster(e);\r\n        return _throw('error');\r\n      });\r\n  }\r\n\r\n  makeGetReqToDownloadFiles(reqObj: { url: string, headerData?: any }) {\r\n    let headers = this.createHeaders(reqObj.headerData);\r\n\r\n    this.changeProgressBar(true, 0);\r\n    return this.httpClient.get(reqObj.url, {headers: headers, responseType: 'text'})\r\n      .map((value: any) => {\r\n        if (value && value.error) {\r\n          this.showErrorMessageForErrorTrue(value);\r\n          return throwError(value);\r\n        } else {\r\n          return value;\r\n        }\r\n      })\r\n      .do((value) => {\r\n        this.changeProgressBar(false, 100);\r\n        this.IncreaseAutoLogoutTime();\r\n      })\r\n      .catch((e: any) => {\r\n        console.log(e);\r\n        this.changeProgressBar(false, 100);\r\n\r\n        this.utilityService.showErrorToaster(e);\r\n        return _throw('error');\r\n      });\r\n  }\r\n\r\n  makeDeleteReq<T>(reqObj: { url: string, headerData?: any }): Observable<T> {\r\n    let headers = this.createHeaders(reqObj.headerData);\r\n\r\n    this.changeProgressBar(true, 0);\r\n    return this.httpClient.delete<T>(reqObj.url, {headers: headers})\r\n      .map((value: any) => {\r\n        if (value && value.error) {\r\n          this.showErrorMessageForErrorTrue(value);\r\n          return throwError(value);\r\n        } else {\r\n          return value;\r\n        }\r\n      })\r\n      .do((value) => {\r\n        this.changeProgressBar(false, 100);\r\n        this.IncreaseAutoLogoutTime();\r\n      })\r\n      .catch((e: any, caught: Observable<T>) => {\r\n        console.log(e);\r\n        this.showErrorMessageForErrorTrue(e)\r\n        this.changeProgressBar(false, 100);\r\n\r\n        this.utilityService.showErrorToaster(e);\r\n        return _throw('error');\r\n      });\r\n  }\r\n\r\n  makePostReq<T>(reqObj: { url: string, body: any, headerData?: any, dontShowProgressBar?: boolean }): Observable<T> {\r\n    let headers = this.createHeaders(reqObj.headerData);\r\n    if (!reqObj.dontShowProgressBar) {\r\n      this.changeProgressBar(true, 0);\r\n    }\r\n    return this.httpClient.post<T>(reqObj.url, reqObj.body, {headers: headers})\r\n      .map((value: any) => {\r\n\r\n        if (value && value.error) {\r\n          this.showErrorMessageForErrorTrue(value);\r\n          return throwError(value);\r\n        } else {\r\n          return value;\r\n        }\r\n      })\r\n      .do((value) => {\r\n        this.IncreaseAutoLogoutTime();\r\n        if (!reqObj.dontShowProgressBar)\r\n          this.changeProgressBar(false, 100);\r\n      })\r\n      .catch((e: any, caught: Observable<T>) => {\r\n        console.log(e);\r\n        this.showErrorMessageForErrorTrue(e);\r\n        this.changeProgressBar(false, 100);\r\n        this.utilityService.showErrorToaster(e);\r\n        return _throw('error');\r\n      });\r\n  }\r\n\r\n  makePutReq<T>(reqObj: { url: string, body: any, headerData?: IHeaderData }): Observable<T> {\r\n    let headers = this.createHeaders(reqObj.headerData);\r\n    this.changeProgressBar(true, 0);\r\n\r\n    return this.httpClient.put<T>(reqObj.url, JSON.stringify(reqObj.body), {headers: headers})\r\n      .map((value: any) => {\r\n        ;\r\n        if (value && value.error) {\r\n          this.showErrorMessageForErrorTrue(value);\r\n          return throwError(value);\r\n        } else {\r\n          return value;\r\n        }\r\n      })\r\n      .do((value) => {\r\n        this.IncreaseAutoLogoutTime();\r\n        this.changeProgressBar(false, 100);\r\n      })\r\n      .catch((e: any, caught: Observable<T>) => {\r\n\r\n        this.showErrorMessageForErrorTrue(e.error) || this.showErrorMessageForErrorTrue(e);\r\n\r\n        this.changeProgressBar(false, 100);\r\n        return _throw('error');\r\n      });\r\n  }\r\n\r\n\r\n  fetchSpecificBotFromServerAndUpdateBotList(bot) {\r\n    let getBotByTokenUrl = this.constantsService.getSpecificBotByBotTokenUrl();\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': bot.bot_access_token\r\n    };\r\n    this.makeGetReq<{ objects: IBot[] }>({url: getBotByTokenUrl, headerData})\r\n      .subscribe((val) => {\r\n\r\n        let bot: IBot = val.objects.find((bot) => {\r\n\r\n          return bot.id === bot.id;\r\n        });\r\n        this.store.dispatch([\r\n          new UpdateBotInfoByIdInBotInBotList({data: bot, botId: bot.id})\r\n        ]);\r\n      });\r\n  }\r\n\r\n  getOverviewInfo<T>(body: any): Observable<IOverviewInfoResponse> {\r\n    let url = this.constantsService.getOverViewInfoUrl();\r\n    return this.makePostReq<IOverviewInfoResponse>({url, body});\r\n  }\r\n\r\n  IncreaseAutoLogoutTime() {\r\n    let autoLogoutInterval = 3600 * 1000;//3600*1000\r\n    this.store.dispatch([\r\n      new SetAutoLogoutTime({time: Date.now() + autoLogoutInterval})\r\n    ]);\r\n  }\r\n\r\n  getNSetBotList(noValidateUser?) {\r\n    let url = this.constantsService.getBotListUrl();\r\n    let headerData: IHeaderData = {'content-type': 'application/json'};\r\n    return this.makeGetReq<IBotResult>({url, headerData, noValidateUser})\r\n      .do((botResult) => {\r\n        // let codeBasedBotList: IBot[] = [];\r\n        // let pipelineBasedBotList: IBot[] = [];\r\n\r\n        // botResult.objects.forEach((bot) => {\r\n        //   bot.bot_type !== 'genbot' ? codeBasedBotList.push(bot) : pipelineBasedBotList.push(bot);\r\n        // });\r\n        this.store.dispatch(new SetAllBotListAction({botList: botResult.objects}));\r\n        // this.store.dispatch(new SetPipeLineBasedBotListAction({botList: pipelineBasedBotList}));\r\n        // this.store.dispatch(new SetCodeBasedBotListAction({botList: codeBasedBotList}));\r\n      });\r\n\r\n  }\r\n\r\n  getNSetChatPreviewBot(bot_unique_name: string, enterprise_unique_name: string) {\r\n    // if (!this.currentBot || (this.currentBot && this.currentBot.bot_unique_name !== this.bot_unique_name)) {\r\n    //   let enterprise_unique_name = this.activatedRoute.snapshot.queryParams['enterprise_unique_name'];//testingbot\r\n    //   if (!this.bot_unique_name) return;\r\n    let url = this.constantsService.getNSetChatPreviewBotUrl(bot_unique_name, enterprise_unique_name);\r\n    this.makeGetReq({url, noValidateUser: true})\r\n      .subscribe((bot: IBot) => {\r\n        // this.user_first_name = bot.enterprise_name;\r\n        // this.enterprise_logo = bot.enterprise_logo;\r\n        // this.user_email =bot.enterprise_name;\r\n        this.store.dispatch([\r\n          new SetCurrentBotDetailsAndResetChatStateIfBotMismatch({bot}),\r\n          // new ToggleChatWindow({open:true})\r\n        ]);\r\n      });\r\n  }\r\n\r\n\r\n  getNSetIntegrationList() {\r\n    let url = this.constantsService.getMasterIntegrationsList();\r\n    return this.makeGetReq<{ meta: any, objects: IIntegrationMasterListItem[] }>({url})\r\n      .do((value) => {\r\n        // this.store.dispatch(new SetPipeLineBasedBotListAction({botList: pipelineBasedBotList}));\r\n        // this.store.dispatch(new SetCodeBasedBotListAction({botList: codeBasedBotList}));\r\n      })\r\n      .subscribe((value) => {\r\n        this.store.dispatch([\r\n          new SetMasterIntegrationsList({\r\n            masterIntegrationList: value.objects\r\n          })\r\n        ]);\r\n      });\r\n  }\r\n\r\n  changeProgressBar(loading: boolean, value: number) {\r\n    this.store.dispatch([\r\n      new SetProgressValue({\r\n          progressbar: {\r\n            loading: loading,\r\n            value: value\r\n          }\r\n        }\r\n      )\r\n    ]);\r\n\r\n  }\r\n\r\n  updateOrSaveCustomNer(selectedOrNewRowData: ICustomNerItem, bot?: IBot) {\r\n    let body: ICustomNerItem;\r\n    let headerData: IHeaderData = {'bot-access-token': bot && bot.bot_access_token};\r\n    let url, methodStr;\r\n    if (selectedOrNewRowData && selectedOrNewRowData.id) {/*update customner*/\r\n      url = this.constantsService.updateOrDeleteCustomBotNER(selectedOrNewRowData.id);\r\n      methodStr = 'makePutReq';\r\n      body = {\r\n        values: selectedOrNewRowData.values,\r\n        column_headers: selectedOrNewRowData.column_headers,\r\n        ...selectedOrNewRowData\r\n      };\r\n    } else {/*create a new customner*/\r\n      url = this.constantsService.createNewCustomBotNER();\r\n      methodStr = 'makePostReq';\r\n      body = selectedOrNewRowData;\r\n    }\r\n    return this[methodStr]({url, body, headerData});\r\n  }\r\n\r\n  deleteNer(ner_id: number, bot?: IBot) {\r\n    let body: ICustomNerItem;\r\n    let url, headerData: IHeaderData;\r\n    if (bot) {\r\n      url = this.constantsService.updateOrDeleteCustomBotNER(ner_id);\r\n      headerData = {\r\n        'bot-access-token': (bot && bot.bot_access_token) || null\r\n      };\r\n    } else {\r\n      url = this.constantsService.updateOrDeleteEnterpriseNer(ner_id);\r\n    }\r\n    return this.makeDeleteReq({url, headerData});\r\n  }\r\n\r\n  getAllVersionOfBotFromServerAndStoreInBotInBotList(botId, bot_access_token) {\r\n    let url = this.constantsService.getAllVersionsByBotId();\r\n    // let botId = this.bot.id;\r\n    this.makeGetReq<IBotVersionResult>({url, headerData: {'bot-access-token': bot_access_token}})\r\n      .subscribe((botVersionResult) => {\r\n        botVersionResult.objects.forEach((version)=>{\r\n          version.changed_fields = {\r\n            \"df_template\" : false,\r\n            \"df_rules\" : false,\r\n            \"generation_rules\" : false,\r\n            \"generation_template\" : false,\r\n            \"workflows\" : false\r\n          }\r\n        });\r\n        this.store.dispatch([\r\n          new SaveVersionInfoInBot({data: botVersionResult.objects, botId: botId})\r\n        ]);\r\n      });\r\n  }\r\n\r\n\r\n  messaging;\r\n\r\n  currentPreviewBot: IBot;\r\n  currentRoomId: number;\r\n\r\n  initializeIMIConnect(previewBot: IBot, currentRoomId: number) {\r\n    if(this.currentRoomId === currentRoomId && this.currentPreviewBot === previewBot){\r\n      return;\r\n    }else {\r\n      try {\r\n        IMI.IMIconnect.shutdown();\r\n      }catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n    }\r\n    this.currentRoomId = currentRoomId;\r\n    this.currentPreviewBot = previewBot;\r\n\r\n    // this.currentPreviewBot = previewBot;\r\n    /*TODO: make initialization happen only once*/\r\n    let imiConnectIntegrationDetails;\r\n    try {\r\n      imiConnectIntegrationDetails = previewBot.integrations.fulfillment_provider_details.imiconnect;\r\n      if (!imiConnectIntegrationDetails.enabled || !imiConnectIntegrationDetails.send_via_connect) {\r\n        console.log('this is not an imiconnect bot...');\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.log('this is not an imiconnect bot');\r\n      return;\r\n    }\r\n    var appId = imiConnectIntegrationDetails.appId;//'GS23064017';\r\n    var appSecret = imiConnectIntegrationDetails.appSecret;//'uZi6B5Zg';\r\n    // var streamName = \"bot\";\r\n    var serviceKey = imiConnectIntegrationDetails.serviceKey;//'3b8f6470-5e56-11e8-bf0b-0213261164bb';//'f6e50f7b-2bfd-11e8-bf0b-0213261164bb';\r\n    var userId = currentRoomId + '_hellothisissandeep1231312';\r\n\r\n    var config = new IMI.ICConfig(appId, appSecret);\r\n    var messaging = IMI.ICMessaging.getInstance();\r\n\r\n    console.info(\"========initializing connection with imiconnect with following details\")\r\n    console.log(\r\n      'appId= ' + appId+'\\n',\r\n      'appSecret= ' + appSecret+'\\n',\r\n      'serviceKey= ' + serviceKey+'\\n',\r\n      'userId= ' + userId+'\\n');\r\n\r\n\r\n    let prepareMessage = (messageObj) => {\r\n      console.info('============================message from IMICONNECT Has been recieved============================', messageObj);\r\n      let generatedMessagesStr = messageObj.message;\r\n      let generatedMessages: IGeneratedMessageItem[];\r\n      try {\r\n        generatedMessages = JSON.parse(generatedMessagesStr);\r\n      } catch (e) {\r\n        console.error('Unable to parse json from IMIConnect callback', generatedMessagesStr);\r\n        console.error('Assuming its a string');\r\n        generatedMessages = [{text:generatedMessagesStr}]\r\n      }\r\n      let serializedMessages: IMessageData[] = this.utilityService.serializeGeneratedMessagesToPreviewMessages(generatedMessages);\r\n      this.store.dispatch([\r\n        new AddMessagesToRoomByRoomId({\r\n          id: currentRoomId,\r\n          messageList: serializedMessages\r\n        }),\r\n        new ChangeBotIsThinkingDisplayByRoomId({roomId:currentRoomId, shouldShowBotIsThinking:false}),\r\n        // new SetCurrentRoomID({id: 123456789.room.id})\r\n      ]);\r\n    };\r\n\r\n    var msgCallBack = {//messaging.setICMessagingReceiver(msgCallBack);\r\n      onConnectionStatusChanged: function (statuscode) {\r\n        console.log(\"msgCallBack,onConnectionStatusChanged\", statuscode)\r\n        var statusMessage = null;\r\n        if (statuscode == 2) {\r\n          statusMessage = 'Connected';\r\n        } else if (statuscode == 6) {\r\n          statusMessage = 'Error while connecting';\r\n        } else {\r\n          statusMessage = 'Not Connected';\r\n        }\r\n\r\n      },\r\n      onMessageReceived: function (message) {\r\n\r\n\r\n        prepareMessage(message);\r\n\r\n        if (message.getType() === IMI.ICMessageType.Message) {\r\n          var callback = {\r\n            onFailure: function (err) {\r\n              console.log('failed to get topics:');\r\n\r\n              //handleFailure(err);\r\n            }\r\n          };\r\n          messaging.setMessageAsRead(message.getTransactionId(), callback);\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    messaging.setICMessagingReceiver(msgCallBack);\r\n    var deviceId = IMI.ICDeviceProfile.getDefaultDeviceId();\r\n    IMI.IMIconnect.startup(config);\r\n    IMI.IMIconnect.registerListener(\r\n      {\r\n        onFailure: function () {\r\n          console.log('token got expired...');\r\n        }\r\n      });\r\n\r\n\r\n    var regcallback = {\r\n      onSuccess: function (msg) {\r\n\r\n        try {\r\n          messaging.connect();\r\n          console.log('onSuccess: reg');\r\n        } catch (ex) {\r\n          console.log(ex);\r\n        }\r\n\r\n      },\r\n      onFailure: function (err) {\r\n        console.log('Registration failed');\r\n\r\n      }\r\n    };\r\n    var deviceProfile = new IMI.ICDeviceProfile(deviceId, userId);\r\n    console.log('IMI.IMIconnect.isRegistered()' + IMI.IMIconnect.isRegistered());\r\n    IMI.IMIconnect.register(deviceProfile, regcallback);\r\n\r\n\r\n// //send message\r\n//     var pubcallback = {\r\n//       onSuccess: function () {\r\n//         console.log(\"message sent\");\r\n//\r\n//       },\r\n//       onFailure: function (errormsg) {\r\n//         console.log(\"failed to send message\");\r\n//       }\r\n//\r\n//     };\r\n//\r\n//     var message = new IMI.ICMessage();\r\n//     message.setMessage(\"Hello this is sample message\");\r\n//\r\n//     var thread = new IMI.ICThread();\r\n//     thread.setId(\"bot\");\r\n//     thread.setTitle(\"bot\");\r\n//     thread.setStreamName(streamName);\r\n//\r\n//     message.setThread(thread);\r\n//     messaging.publishMessage(message, pubcallback);\r\n\r\n    this.messaging = messaging;\r\n  }\r\n\r\n\r\n  currentRoom: IRoomData;\r\n\r\n  sendHumanMessageViaImiConnect(currentRoom, currentBot: IBot, messageByHuman: string) {\r\n\r\n    var streamName:string;//'gsureg';\r\n    try {\r\n      streamName = currentBot.integrations.fulfillment_provider_details.imiconnect.streamName;\r\n    }catch (e) {\r\n      console.log(e)\r\n    }\r\n    // this.currentRoom = currentRoom;\r\n//send message\r\n    var pubcallback = {\r\n      onSuccess: function () {\r\n        console.log('message sent');\r\n\r\n      },\r\n      onFailure: function (errormsg) {\r\n        console.log('failed to send message');\r\n      }\r\n\r\n    };\r\n\r\n    var message = new IMI.ICMessage();\r\n    message.setMessage(messageByHuman);\r\n\r\n    var thread = new IMI.ICThread();\r\n    thread.setId('bot');\r\n    thread.setTitle('bot');\r\n    thread.setStreamName(streamName);\r\n\r\n    message.setThread(thread);\r\n    this.messaging.publishMessage(message, pubcallback);\r\n  }\r\n\r\n\r\n  startANewChatUsingSendApi(startNewChatData: { consumerDetails: IConsumerDetails, bot: IBot }) {\r\n    let url = this.constantsService.getStartNewChatLoginUrl();\r\n    let headerData: IHeaderData = {\r\n      'bot-access-token': startNewChatData.bot.bot_access_token,\r\n      'auth-token': null,\r\n      'user-access-token': null,\r\n      'content-type': 'application/json'\r\n    };\r\n    let body /*: ISendApiRequestPayload */ = {\r\n      'type': 'bot',\r\n      'msg': 'hi',\r\n      'platform': 'web',\r\n      // 'consumer': {\r\n      //   'uid': this.current_uid,\r\n      // },\r\n      'consumer': startNewChatData.consumerDetails\r\n    };\r\n\r\n    return this.makePostReq({url, body, headerData});\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ToastrService} from 'ngx-toastr';\r\nexport enum EFormValidationErrors {\r\n  form_validation_basic_info=\"form_validation_basic_info\",\r\n  form_validation_integration=\"form_validation_integration\",\r\n  form_validation_pipeline=\"form_validation_pipeline\",\r\n  form_validation_avator=\"form_validation_avator\",\r\n  form_validation_data_management=\"form_validation_data_management\",\r\n}\r\n// import import downloadCsv from 'download-csv'; from 'download-csv';\r\nimport downloadCsv from 'download-csv';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {start} from 'repl';\r\nimport {T} from '@angular/core/src/render3';\r\nimport {IBot} from './core/interfaces/IBot';\r\nimport {IPipelineItem} from '../interfaces/ai-module';\r\nimport {IAnalysis2HeaderData} from '../interfaces/Analytics2/analytics2-header';\r\nimport {EBotMessageMediaType, IMessageData} from '../interfaces/chat-session-state';\r\nimport {IBotPreviewFirstMessage} from './chat/chat-wrapper.component';\r\nimport {IGeneratedMessageItem} from '../interfaces/send-api-request-payload';\r\nimport {StoreVariableService} from './core/buildbot/build-code-based-bot/architecture/integration/integration-option-list/store--variable.service';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilityService {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private storeVariableService: StoreVariableService,\r\n  ) {\r\n  }\r\n\r\n  readonly RANDOM_IMAGE_URLS= [\r\n    \"https://robohash.org/StarDroid.png\",\r\n    \"https://cdn-images-1.medium.com/max/327/1*paQ7E6f2VyTKXHpR-aViFg.png\",\r\n    \"https://robohash.org/SmartDroid.png\",\r\n    \"https://robohash.org/SilverDroid.png\",\r\n    \"https://robohash.org/IntelliBot.png\",\r\n    \"https://robohash.org/SmartBot.png\",\r\n    \"https://robohash.org/SilverDroid.png\",\r\n    \"https://robohash.org/SilverDroid.png\",\r\n  ];\r\n\r\n  getRandomAvatorUrl(){\r\n    let avatorArrLength = this.RANDOM_IMAGE_URLS.length;\r\n    let randomNumber = Math.floor(Math.random() * avatorArrLength);\r\n    return this.RANDOM_IMAGE_URLS[randomNumber];\r\n  }\r\n\r\n  getSmartTableRowCountPerPageByViewportHeight():number{\r\n    var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    ;\r\n    if(h<700){\r\n      return 10;\r\n    }else if(h>700&&h<1000){\r\n      return 15;\r\n    } else if(h>1000){\r\n      return 20;\r\n    }\r\n    return 10;\r\n  }\r\n\r\n  masterIntegration_IntegrationKeyDisplayNameMap = null;\r\n  getDisplayNameForKey_Integration(key:string){\r\n\r\n    let masterIntegrationList = this.storeVariableService.getApp().masterIntegrationList;\r\n    if(!this.masterIntegration_IntegrationKeyDisplayNameMap){\r\n      this.masterIntegration_IntegrationKeyDisplayNameMap = masterIntegrationList.reduce((accumulator, currentVal)=>{\r\n        let x = currentVal.inputs.reduce((accObj, currObj)=>{\r\n          accObj[currObj.param_name] = currObj.display_text;\r\n          return accObj;\r\n        },{});\r\n        return {...accumulator, ...x};\r\n      }, {})\r\n    }\r\n    return this.masterIntegration_IntegrationKeyDisplayNameMap[key];\r\n  }\r\n\r\n  getActiveVersionInBot(bot:IBot){\r\n    return bot.store_bot_versions && bot.store_bot_versions.find((BotVersion) => {\r\n      return bot.active_version_id === BotVersion.id;\r\n    });\r\n  }\r\n\r\n  serializeGeneratedMessagesToPreviewMessages(  generatedMessage:IGeneratedMessageItem[]):IMessageData[]{\r\n    return generatedMessage.map((message: IGeneratedMessageItem) => {\r\n      /*check if media is the key\r\n      * if yes, return {message_type:media[0].type, ...message}\r\n      * else return it as tet\r\n      * */\r\n\r\n      // this.utilityService.getActiveVersionInBot()\r\n\r\n      if(Object.keys(message)[0] === \"media\"){\r\n        return {\r\n          messageMediatype:message.media[0].type,//\r\n          ...message,\r\n          time: Date.now(),//this.getCurrentTimeInHHMM(),\r\n          text:EBotMessageMediaType.image,//this is for preview of last message in chat room list\r\n          sourceType: 'bot'\r\n        }\r\n      }else if(Object.keys(message)[0] === \"quick_reply\"){\r\n\r\n        return {\r\n          messageMediatype:EBotMessageMediaType.quickReply,//\r\n          ...message,\r\n          time: Date.now(),\r\n          text:(<any>message).quick_reply.text || EBotMessageMediaType.quickReply,//this is for preview of last message in chat room list\r\n          sourceType: 'bot'\r\n        }\r\n      }\r\n\r\n      /*if message type = text*/\r\n      return {\r\n        text: message.text,\r\n        time: Date.now(),//this.getCurrentTimeInHHMM(),\r\n        sourceType: 'bot',\r\n        messageMediatype:EBotMessageMediaType.text\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  readInputFileAsText(inputElement): Promise<string> {\r\n    return new Promise<string>((resolve, reject) => {\r\n      let input = inputElement;//event.target;\r\n      for (let index = 0; index < input.files.length; index++) {\r\n        let reader = new FileReader();\r\n        reader.onload = () => {\r\n          // this 'text' is the content of the file\r\n          let text = reader.result;\r\n          // this.editorCode= text;\r\n          resolve(text);\r\n        };\r\n        reader.readAsText(input.files[index]);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPriorDate(days_before: number) {\r\n    let today: any = new Date(Date.now() - days_before * 24 * 3600 * 1000);\r\n    let dd: any = today.getDate();\r\n    let mm: any = today.getMonth() + 1; //January is 0!\r\n    let yyyy: any = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n      dd = '0' + dd;\r\n    }\r\n\r\n    if (mm < 10) {\r\n      mm = '0' + mm;\r\n    }\r\n\r\n    return (today = dd + '/' + mm + '/' + yyyy);\r\n  }\r\n\r\n  convertDateObjectStringToDDMMYY(dateStr: string = '') {\r\n    let today: any = dateStr ? new Date(dateStr) : new Date();\r\n\r\n    let dd: any = today.getDate();\r\n    let mm: any = today.getMonth() + 1; //January is 0!\r\n    let yyyy: any = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n      dd = '0' + dd;\r\n    }\r\n\r\n    if (mm < 10) {\r\n      mm = '0' + mm;\r\n    }\r\n\r\n    return (today = dd + '/' + mm + '/' + yyyy);\r\n\r\n  }\r\n\r\n  convertDateObjectStringToMMDDYY(dateStr: Date) {\r\n    let today: any = new Date(dateStr);\r\n\r\n    let dd: any = today.getDate();\r\n    let mm: any = today.getMonth() + 1; //January is 0!\r\n    let yyyy: any = today.getFullYear();\r\n\r\n    if (dd < 10) {\r\n      dd = '0' + dd;\r\n    }\r\n\r\n    if (mm < 10) {\r\n      mm = '0' + mm;\r\n    }\r\n\r\n    return (today = mm + '/' + dd + '/' + yyyy);\r\n\r\n  }\r\n\r\n  convertMsToSec(ms: number) {\r\n    // return ms/?\r\n  }\r\n\r\n  copyToClipboard(text) {\r\n    if ((<any>window).clipboardData && (<any>window).clipboardData.setData) {\r\n      // IE specific code path to prevent textarea being shown while dialog is visible.\r\n      return (<any>window).clipboardData.setData('Text', text);\r\n\r\n    } else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\r\n      var textarea = document.createElement('textarea');\r\n      textarea.textContent = text;\r\n      textarea.style.position = 'fixed';  // Prevent scrolling to bottom of page in MS Edge.\r\n      document.body.appendChild(textarea);\r\n      textarea.select();\r\n      try {\r\n        this.showSuccessToaster('Copied');\r\n        return document.execCommand('copy');  // Security exception may be thrown by some browsers.\r\n      } catch (ex) {\r\n        console.warn('Copy to clipboard failed.', ex);\r\n        return false;\r\n      } finally {\r\n        document.body.removeChild(textarea);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  findDataByName(convertedData, name) {\r\n    for (let i = 0; i < convertedData.length; ++i) {\r\n      if (convertedData[i].name === name)\r\n        return convertedData[i].data;\r\n    }\r\n  }\r\n\r\n  createChartValueForBarGraph(rawData: { labels: string, result: number }[], chartValue?: { xAxis: { categories: string[] }, series: { name: string, data: number[] }[] }) {\r\n\r\n    /*\r\n    * example output:\r\n    * [{\r\n  name: 'John',\r\n  data: [5, 3, 4, 7, 2]\r\n}]\r\n    * */\r\n    let template = {\r\n      chart: {\r\n        type: 'column'\r\n      },\r\n      title: {\r\n        text: 'Stacked column chart'\r\n      },\r\n      xAxis: {\r\n        categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Total fruit consumption'\r\n        },\r\n        stackLabels: {\r\n          enabled: true,\r\n          style: {\r\n            fontWeight: 'bold',\r\n            color: 'gray'\r\n          }\r\n        }\r\n      },\r\n      legend: {\r\n        align: 'right',\r\n        x: -30,\r\n        verticalAlign: 'top',\r\n        y: 25,\r\n        floating: true,\r\n        backgroundColor: 'white',\r\n        borderColor: '#CCC',\r\n        borderWidth: 1,\r\n        shadow: false\r\n      },\r\n      tooltip: {\r\n        headerFormat: '<b>{point.x}</b><br/>',\r\n        pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'\r\n      },\r\n      plotOptions: {\r\n        column: {\r\n          stacking: 'normal',\r\n          dataLabels: {\r\n            enabled: true,\r\n            color: 'white'\r\n          }\r\n        }\r\n      },\r\n      series: [{\r\n        name: 'John',\r\n        data: [5, 3, 4, 7, 2]\r\n      }]\r\n    };\r\n\r\n    let categories: string[] = rawData.map(dataItem => dataItem.labels);\r\n    let seriesData: number[] = rawData.map(dataItem => dataItem.result);\r\n    template.xAxis.categories = categories;\r\n    template.series[0].data = seriesData;\r\n    template.series[0].name = 'test';\r\n\r\n    return template;\r\n  }\r\n\r\n  appendChartValueAndSeries(xAndYValues: any, chartValue) {\r\n    return {\r\n      ...chartValue,\r\n      ...xAndYValues\r\n    };\r\n  }\r\n\r\n\r\n  convertDateTimeGraph(\r\n    rawData: { activesessions: number, labels: string, totalsessions: number }[],\r\n    xAxisLabel: string,\r\n    startTime_ms: number = Date.UTC(2010, 0, 2),//Date.UTC(2010, 0, 2),\r\n    granularity_Ms: number = 24 * 3600 * 1000  // one day\r\n  ) {\r\n\r\n    if(!rawData) return;\r\n    let template = {\r\n      xAxis: {\r\n        type: 'datetime'\r\n      },\r\n\r\n      plotOptions: {\r\n        series: {\r\n          pointStart: startTime_ms,//Date.UTC(2010, 0, 2),\r\n          pointInterval: granularity_Ms//24*3600*1000  // one day\r\n        }\r\n      },\r\n\r\n      series: [{\r\n        name: 'sandeep',\r\n        data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]\r\n      }, {\r\n        name: 'gupta',\r\n        data: [144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4, 29.9, 71.5, 106.4, 129.2]\r\n      }]\r\n    };\r\n\r\n    // let categoriesString = rawData.map((dataItem) => dataItem.labels);\r\n    let seriesArr = [];\r\n    /*initialize the seriesArr*/\r\n    Object.keys(rawData[0]).forEach((value) => {\r\n      if (value === 'labels') return;\r\n      seriesArr.push({\r\n        name: value,//y1\r\n        data: []//[(xi,y1i)]\r\n      });\r\n    });\r\n    /*now loop over rawData and fill convertedData's data array*/\r\n    rawData.forEach((obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (key === xAxisLabel) return;\r\n        let data = this.findDataByName(seriesArr, key);\r\n        // data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n        data.push(obj[key]);//pushing a new coordinate\r\n      });\r\n    });\r\n\r\n    template.series = seriesArr;\r\n    console.log(template,'========================================');\r\n    return template;\r\n  }\r\n\r\n  convert_xAxisText(rawData: { activesessions: 0, labels: '03:00', totalsessions: 0 }[], xAxisLabel: string) {\r\n\r\n    let categoriesString = rawData.map((dataItem) => dataItem.labels);\r\n    let seriesArr = [];\r\n    /*initialize the convertedData*/\r\n    Object.keys(rawData[0]).forEach((value) => {\r\n      if (value === 'labels') return;\r\n      seriesArr.push({\r\n        name: value,//y1\r\n        data: []//[(xi,y1i)]\r\n      });\r\n    });\r\n    /*now loop over rawData and fill convertedData's data array*/\r\n    rawData.forEach((obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (key === xAxisLabel) return;\r\n        let data = this.findDataByName(seriesArr, key);\r\n        // data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n        data.push(obj[key]);//pushing a new coordinate\r\n      });\r\n    });\r\n\r\n    let template = {\r\n      xAxis: {\r\n        categories: categoriesString,//['apple', 'orange', 'mango'],\r\n        tickInterval: 1,\r\n        labels: {\r\n          enabled: true\r\n        }\r\n      },\r\n      series: seriesArr\r\n    };\r\n\r\n    return template;\r\n  }\r\n\r\n  convert(rawData, xAxisLabel: string, labelType: string) {\r\n    let convertedData = [];\r\n    /*initialize the convertedData*/\r\n    Object.keys(rawData[0]).forEach((value) => {\r\n      if (value === 'labels') return;\r\n      convertedData.push({\r\n        name: value,//y1\r\n        data: []//[(xi,y1i)]\r\n      });\r\n    });\r\n    if (labelType === 'Time') {\r\n      /*now loop over rawData and fill convertedData's data array*/\r\n      rawData.forEach((obj) => {\r\n        Object.keys(obj).forEach((key) => {\r\n          if (key === xAxisLabel) return;\r\n          let data = this.findDataByName(convertedData, key);\r\n          // data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n          let dateStr_ddmmyyyy = obj[xAxisLabel];\r\n          let hh = dateStr_ddmmyyyy.split(':')[1];\r\n          let mm = dateStr_ddmmyyyy.split(':')[0];\r\n          let ms = hh * 3600 * 1000 + mm * 60 * 1000;\r\n          if (data)/*This fix is done for new keys which were not in rawdata[0]. They will be ignored*/\r\n            data.push([ms, obj[key]]);//pushing a new coordinate\r\n        });\r\n      });\r\n    }\r\n    if (labelType === 'Date') {\r\n      /*now loop over rawData and fill convertedData's data array*/\r\n      rawData.forEach((obj) => {\r\n        Object.keys(obj).forEach((key) => {\r\n          if (key === xAxisLabel) return;\r\n          let data = this.findDataByName(convertedData, key);\r\n          // data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n          let dateStr_ddmmyyyy = obj[xAxisLabel];\r\n          let dd = dateStr_ddmmyyyy.split('-')[2];\r\n          let mm = dateStr_ddmmyyyy.split('-')[1];\r\n          let yyyy = dateStr_ddmmyyyy.split('-')[0];\r\n          let dateStr_mmddyyyy = `${mm}/${dd}/${yyyy}`;\r\n          let ms = Date.parse(dateStr_mmddyyyy);\r\n          if (data)/*This fix is done for new keys which were not in rawdata[0]. They will be ignored*/\r\n            data.push([ms, obj[key]]);//pushing a new coordinate\r\n        });\r\n      });\r\n    }\r\n    if (labelType === 'String') {\r\n      rawData.forEach((obj) => {\r\n        Object.keys(obj).forEach((key) => {\r\n          if (key === xAxisLabel) return;\r\n          let data = this.findDataByName(convertedData, key);\r\n          // data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n          // let dateStr_ddmmyyyy = obj[xAxisLabel];\r\n          // let hh = dateStr_ddmmyyyy.split(':')[1];\r\n          // let mm = dateStr_ddmmyyyy.split(':')[0];\r\n          // let ms = hh*3600*1000 + mm*60*1000;\r\n          if (data)/*This fix is done for new keys which were not in rawdata[0]. They will be ignored*/\r\n            data.push([obj[xAxisLabel], obj[key]]);//pushing a new coordinate\r\n        });\r\n      });\r\n    }\r\n    return convertedData;\r\n  }\r\n\r\n  createDeepClone(obj){\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  showErrorToaster(message, sec=2) {\r\n    if (typeof message === 'string') {\r\n      this.toastr.error(message, null, {positionClass: 'toast-top-right', timeOut: sec*1000});\r\n      return;\r\n    } else {\r\n      this.toastr.error(message.message, null, {positionClass: 'toast-top-right', timeOut: sec*1000});\r\n    }\r\n  }\r\n\r\n  showInfoToaster(message) {\r\n    this.toastr.info(message, null, {positionClass: 'toast-top-right', timeOut: 2000});\r\n  }\r\n\r\n  showSuccessToaster(message) {\r\n    this.toastr.success(message, null, {positionClass: 'toast-top-right', timeOut: 2000});\r\n  }\r\n  createRandomUid(){\r\n    return Date.now();\r\n  }\r\n  convertGranularityStrToMs(granularity: string): number {\r\n    if (granularity === 'hour') {\r\n      return 3600 * 1000;\r\n    }\r\n    if (granularity === 'day') {\r\n      return 24 * 3600 * 1000;\r\n    }\r\n    if (granularity === 'month') {\r\n      return 30 * 24 * 3600 * 1000;\r\n    }\r\n    if (granularity === 'year') {\r\n      return 365 * 24 * 3600 * 1000;\r\n    }\r\n    // if(granularity==='day'){\r\n    //   return 24*3600*1000;\r\n    // }\r\n  }\r\n\r\n  createRandomString(length: number = 10) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++)\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n    return text;\r\n  }\r\n\r\n  getCurrentTimeInHHMM() {\r\n    var date = new Date();\r\n    var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\r\n    var minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\r\n    return hours + ':' + minutes;\r\n  };\r\n\r\n\r\n\r\n\r\n  downloadText(text,filename){\r\n    var saveData = (function () {\r\n      var a:any = document.createElement(\"a\");\r\n      document.body.appendChild(a);\r\n      a.style = \"display: none\";\r\n      return function (data, fileName) {\r\n        var blob = new Blob([text], {type: \"octet/stream\"}),\r\n          url = window.URL.createObjectURL(blob);\r\n        a.href = url;\r\n        a.download = fileName;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      };\r\n    }());\r\n\r\n    // var data = { x: 42, s: \"hello, world\", d: new Date() },\r\n    saveData(null, filename);\r\n    // console.log(value);\r\n  }\r\n\r\n  downloadArrayAsCSV(data: any[] = [], columns: object = {}) {\r\n    // data = [\r\n    //  { name: 'test1', score: 1, level: 'Z' },\r\n    //  { name: 'test2', score: 2 },\r\n    //  { name: 'test3', score: 3 },\r\n    //  { name: 'test4', score: 4 },\r\n    // ];\r\n    //\r\n    // columns = { name: '姓名', score: '分数' };\r\n\r\n    downloadCsv(data, columns);\r\n  }\r\n\r\n  areAllAvatorValesDefined(headerObj: object) {\r\n    for (let key in headerObj) {\r\n      if (headerObj[key] ==null || headerObj[key] ===\"\")//0!==null but 0==\"\"\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  areAllValesDefined(headerObj: object) {\r\n    let headerDataTemplate:IAnalysis2HeaderData = {\r\n      \"bot-access-token\":null,\r\n      type:null,\r\n      enddate:null,\r\n      startdate:null,\r\n      \"auth-token\":null,\r\n      \"user-access-token\":null,\r\n      granularity:null\r\n    };\r\n    headerObj = {...headerDataTemplate,...headerObj};\r\n    for (let key in headerObj) {\r\n      if (headerObj[key] ==null || headerObj[key] ===\"\")//0!==null but 0==\"\"\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addQueryParamsInCurrentRoute(queryParamObj: object) {\r\n    this.router.navigate(['.'], {queryParams: queryParamObj, relativeTo: this.activatedRoute});\r\n  }\r\n\r\n  areTwoJSObjectSame(obj1, obj2){\r\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\r\n  }\r\n\r\n  getGlobalErrorMap(){\r\n    let errorObj = {};\r\n    errorObj[EFormValidationErrors.form_validation_basic_info] = \"Basic info form is not valid\";\r\n    errorObj[EFormValidationErrors.form_validation_integration] = \"Integration form is not valid\";\r\n    errorObj[EFormValidationErrors.form_validation_pipeline] = \"Pipeline is not valid\";\r\n    errorObj[EFormValidationErrors.form_validation_avator] = \"Avators are either invalid or empty\";\r\n    errorObj[EFormValidationErrors.form_validation_data_management] = \"Data Management form is invalid\";\r\n    return errorObj;\r\n  }\r\n  getErrorMessageForValidationKey(key){\r\n    let errorMap = this.getGlobalErrorMap();\r\n    return errorMap[key]\r\n  }\r\n\r\n  checkIfAllPipelineInputParamsArePopulated(pipeline:IPipelineItem[]):boolean{\r\n\r\n    let inputParamsObj:object = pipeline.reduce((inputParamsObj, pipelineItem)=>{\r\n      return {...inputParamsObj, ...pipelineItem.input_params};\r\n    },{});\r\n\r\n    for(let param in inputParamsObj){\r\n      if(inputParamsObj[param]==null){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  performFormValidationBeforeSaving(obj:IBot):IBot{\r\n    let objShallowClone = {...obj};\r\n    let validation_Keys:string[] = Object.keys(objShallowClone).filter((key)=>{\r\n      return key.includes('form_validation_')\r\n    });\r\n    for(let key of validation_Keys){\r\n      if(!objShallowClone[key]){\r\n        let errorMessage = this.getErrorMessageForValidationKey(key);\r\n        this.showErrorToaster(errorMessage);\r\n        return null;\r\n      }\r\n      delete  objShallowClone[key];\r\n    }\r\n    return objShallowClone;\r\n  }\r\n\r\n  serializeServerValueToChatRoomMessages(value:IBotPreviewFirstMessage){\r\n    let roomMessages: IMessageData[] = value.generated_msg.map((item: { text: string }) => {\r\n      return {\r\n        text: item.text,\r\n        sourceType: 'bot',\r\n        messageMediatype: EBotMessageMediaType.text,\r\n        time: Date.now()//this.getCurrentTimeInHHMM()/*todo: change it to real time*/\r\n      };\r\n    });\r\n    return roomMessages;\r\n  }\r\n\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  url: 'http://localhost:3000/api'\r\n  // url : 'https://staging.imibot.ai/api'\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {IConsumerDetails} from '../app/chat/ngxs/chat.state';\r\nimport {IGeneratedMessageItem} from './send-api-request-payload';\r\nimport {IIntegrationOption} from './integration-option';\r\nimport {IBot} from '../app/core/interfaces/IBot';\r\n\r\nexport enum EChatFrame {\r\n  WELCOME_BOX=\"WELCOME_BOX\",\r\n  CHAT_LIST=\"CHAT_LIST\",\r\n  CHAT_BOX=\"CHAT_BOX\",\r\n}\r\n\r\nexport enum EBotMessageMediaType{\r\n  image=\"image\",\r\n  text=\"text\",\r\n  quickReply= \"quickReply\",\r\n  bot_thinking=\"bot_thinking\"\r\n}\r\n\r\nexport interface IMessageData extends IGeneratedMessageItem{\r\n  /*custom fields*/\r\n  sourceType: string,//TODO: \"timePeriod\" ||\"human\", gives error, see why\r\n  time: number,\r\n  messageMediatype:EBotMessageMediaType\r\n}\r\n\r\nexport interface IRoomData {\r\n  id: number,\r\n  consumer_id?: number,\r\n  consumerDetails?: IConsumerDetails,\r\n  bot_id?: number,\r\n  bot_access_token?: string,\r\n  'messageList': IMessageData[],\r\n  uid?: string,\r\n  'selectedAvatar'?: {\r\n    'id'?: number,\r\n    'imageUrl': string,\r\n    'name'?: string\r\n  },\r\n  lastTemplateKey?: string\r\n\r\n  /*added later...entries from server*/\r\n    'agent_handover'?: false,\r\n    'allow_anonymization'?: false,\r\n    'consent_permissions'?: any[],\r\n    'created_at'?: number,\r\n    'cross_retention_period'?: false,\r\n    'data_store'?: {},\r\n    'df_state'?: {\r\n      'answer': null,\r\n      'question': null\r\n    },\r\n    'imichat_agent'?: {},\r\n    'is_anonymized'?: false,\r\n    'last_updated_job_id'?: '5b8fc54d7364530005872f08',\r\n    'manager_bot_room_id'?: 0,\r\n    'resource_uri'?: '/api/v1/room/11924/',\r\n    'room_state_closed'?: false,\r\n    'selected_avatar'?: {\r\n      'id': 0,\r\n      'imageUrl': 'https?://www.gstatic.com/webp/gallery3/2_webp_a.png',\r\n      'name': 'StarBot'\r\n    },\r\n    'updated_at'?: number,\r\n\r\n  /*custom fields*/\r\n  showBotIsThinking?:boolean,\r\n  isCustomRoom?:boolean\r\n}\r\n\r\nexport interface IChatSessionState {\r\n\r\n  opened: boolean;\r\n  frameEnabled: EChatFrame,\r\n  currentRoomId: number,\r\n  currentBotDetails: IBot,\r\n  currentUId: string,\r\n  rooms: IRoomData[],\r\n  consumerDetails: IConsumerDetails\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}