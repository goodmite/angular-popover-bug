{"version":3,"sources":["webpack:///./src/app/auth/auth-wrapper.component.html","webpack:///./src/app/auth/auth-wrapper.component.scss","webpack:///./src/app/auth/auth-wrapper.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.scss","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/login-gaurd.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  styleUrls: ['./auth-wrapper.component.scss']\r\n})\r\nexport class AuthWrapperComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {LoginComponent} from './login/login.component';\r\nimport {Route, RouterModule} from '@angular/router';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NgModule} from '@angular/core';\r\nimport {AuthWrapperComponent} from './auth-wrapper.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {LoginGaurdService} from '../login-gaurd.service';\r\n\r\nconst routes: Route[] = [\r\n      {path: 'login', component: LoginComponent, canActivate:[LoginGaurdService]},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    AuthWrapperComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes), // RouterModule.forRoot(routes, { useHash: true }), if this is your app.module\r\n    FormsModule,\r\n    // NgxsModule.forFeature([\r\n    //   AuthStateReducer,\r\n    // ]),\r\n    HttpClientModule,\r\n\r\n  ],\r\n  providers:  [LoginGaurdService],\r\n})\r\nexport class AuthModule {\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n<div class=\\\"container-fluid bg-white\\\">\\r\\n  <!--<router-outlet></router-outlet>-->\\r\\n  <img src=\\\"https://imibot.ai/assets/img/login_page.png\\\" class=\\\"fixed-top sticky-logo\\\" alt=\\\"\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row login-row string p-0 m-0 bg-white\\\">\\r\\n\\r\\n      <div class=\\\"col-5 col-lg-5 col-xl-5 imi-logo-box d-flex flex-column align-items-center\\\">\\r\\n        <div class=\\\"mt-auto\\\">\\r\\n          <img class=\\\"imi-logo\\\" src=\\\"https://imibot.ai/assets/img/IMI_logo.png\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n        <p class=\\\"mb-auto tagline\\\">The bot building platform for your enterprise</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"panelActive==='login'\\\" class=\\\"col-5 col-lg-5 col-xl-5  login-form-box\\\">\\r\\n        <div class=\\\"col-12 string d-flex justify-content-center align-items-center\\\">\\r\\n          <p  class=\\\"title pb-4\\\">Sign in</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 d-flex justify-content-center align-items-center\\\">\\r\\n          <form class=\\\"login-form\\\" (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"email\\\" required email class=\\\"form-control\\\" ngModel name=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" ngModel required placeholder=\\\"Enter Password\\\">\\r\\n            </div>\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n              <!--<label for=\\\"\\\"><input type=\\\"checkbox2\\\"> Remember Me</label>-->\\r\\n              <label class=\\\"container-chekbox text-dark\\\">Remember me\\r\\n                <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\r\\n                <span class=\\\"checkmark\\\"></span>\\r\\n              </label>\\r\\n              <div hidden class=\\\"cursor-pointer\\\" (click)=\\\"showPanel('forgot')\\\">Forgot Password?</div>\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-block  mt-3 mb-2\\\" [disabled]=\\\"disabeLoginButton\\\" [ngClass]=\\\"{'btn-theme-primary':!disabeLoginButton, 'btn-theme-disabled':disabeLoginButton}\\\" >Submit</button>\\r\\n            <i  class=\\\"text-danger my-2\\\" style=\\\"height: 15px\\\" [ngClass]=\\\"{'visible':errorMessage}\\\">{{errorMessage}}</i>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"panelActive==='reset-via-email'\\\" class=\\\"col-5 col-lg-5 col-xl-5  login-form-box\\\">\\r\\n        <div class=\\\"col-12 string d-flex justify-content-center align-items-center\\\">\\r\\n          <p  class=\\\"title pb-4\\\">Forgot Password?</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 mb-3 text-theme-normal text-center\\\" style=\\\"color: #9e9e9e\\\">\\r\\n          Enter your email address below and weâ€™ll send you a\\r\\n          link to create a new password.\\r\\n        </div>\\r\\n        <div class=\\\"col-12 d-flex justify-content-center align-items-center\\\">\\r\\n          <form class=\\\"login-form \\\" (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"email\\\" required email class=\\\"form-control\\\" ngModel name=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter Email\\\">\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-block btn-theme-primary my-3\\\">Request Reset Link</button>\\r\\n            <div class=\\\"text-center cursor-pointer\\\" (click)=\\\"panelActive='login'\\\">back to sign in</div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"panelActive==='reset-password'\\\" class=\\\"col-5 col-lg-5 col-xl-5  login-form-box\\\">\\r\\n        <div class=\\\"col-12 string d-flex justify-content-center align-items-center\\\">\\r\\n          <p  class=\\\"title pb-4\\\">Reset Password?</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-12 d-flex justify-content-center align-items-center\\\">\\r\\n          <form class=\\\"login-form \\\" (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"password\\\" required password class=\\\"form-control\\\" ngModel name=\\\"password\\\" aria-describedby=\\\"passwordHelp\\\" placeholder=\\\"Enter password\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"password\\\" required password class=\\\"form-control\\\" ngModel name=\\\"confirm\\\" aria-describedby=\\\"passwordHelp\\\" placeholder=\\\"Confirm password\\\">\\r\\n            </div>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn-block btn-theme-primary my-3\\\">Reset</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div *ngIf=\\\"panelActive==='email-reset-link-notify'\\\" class=\\\"col-5 forgot-password-container d-flex flex-column align-items-center\\\">\\r\\n        <div class=\\\"checkmark border-circle\\\">\\r\\n          <i class=\\\"fa fa-check\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"hero-text\\\">Password Reset Email Sent</div>\\r\\n        <div class=\\\"text-center\\\" style=\\\"width: 70%\\\">\\r\\n          An email has been sent to your email address,\\r\\n          <strong>xxxx.x@imimobile.com</strong> . Follow directions\\r\\n          to reset your password.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"panelActive==='password-reset-notify'\\\" class=\\\"col-5 forgot-password-container d-flex flex-column align-items-center\\\">\\r\\n        <div class=\\\"checkmark border-circle\\\">\\r\\n          <i class=\\\"fa fa-check\\\"></i>\\r\\n        </div>\\r\\n        <div class=\\\"hero-text\\\">Password Updated Successfully</div>\\r\\n        <div class=\\\"text-center\\\" style=\\\"width: 70%\\\">\\r\\n          Your password has been saved. Please use your\\r\\n          new password to sign in\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".login-row {\\n  height: 90vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n  .login-row .imi-logo-box {\\n    height: 70vh;\\n    border-right: 2px solid #e0e0e0; }\\n  .login-row .imi-logo-box .imi-logo {\\n      height: 70px;\\n      width: 241px;\\n      margin-bottom: 20px; }\\n  .login-row .imi-logo-box .tagline {\\n      font-size: 20px;\\n      line-height: 22px;\\n      font-weight: 300;\\n      color: #56627c;\\n      font-family: \\\"Helvetica\\\", sans-serif; }\\n  .login-row .login-form {\\n    width: 80%;\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .login-row .title {\\n    font-size: 24px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #00abd3;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    text-align: center; }\\n  .login-row .form-control {\\n    border: none;\\n    border-color: inherit;\\n    box-shadow: none;\\n    outline: none;\\n    border-bottom: 1px solid #e0e0e0;\\n    border-radius: 0; }\\n  .login-row .btn-theme-primary {\\n    height: 34px !important;\\n    font-size: 14px;\\n    background-color: #00abd3 !important; }\\n  .hero-text {\\n  font-size: 24px;\\n  line-height: 16px;\\n  font-weight: 300;\\n  color: #00abd3;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  margin-bottom: 8px; }\\n  .forgot-password-container {\\n  font-size: 13px;\\n  line-height: 16px;\\n  font-weight: 300;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .forgot-password-container strong {\\n    font-weight: 700;\\n    color: #4a4a4a; }\\n  .forgot-password-container .checkmark {\\n    width: 48px;\\n    height: 48px;\\n    display: flex;\\n    border-radius: 50%;\\n    align-items: center;\\n    justify-content: center;\\n    border: 1px solid #c9e16a;\\n    margin-bottom: 27px; }\\n  .forgot-password-container .checkmark .fa {\\n      color: #9dc406;\\n      font-size: 20px; }\\n  .disabled-button {\\n  opacity: 0.5;\\n  background-color: #9e9e9e !important; }\\n  .container-fluid {\\n  height: 100vh; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ServerService} from '../../server.service';\r\nimport {ConstantsService, ERoleName} from '../../constants.service';\r\nimport {IUser} from '../../core/interfaces/user';\r\nimport {Store} from '@ngxs/store';\r\nimport {SetUserAction} from '../ngxs/auth.action';\r\nimport {IHeaderData} from '../../../interfaces/header-data';\r\nimport {Router} from '@angular/router';\r\nimport {UtilityService} from '../../utility.service';\r\nimport {IEnterpriseProfileInfo} from '../../../interfaces/enterprise-profile';\r\nimport {SetEnterpriseInfoAction} from '../../core/enterpriseprofile/ngxs/enterpriseprofile.action';\r\nimport {SetBackendURlRoot} from '../../ngxs/app.action';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  panelActive = 'login';\r\n  errorMessage = '';\r\n\r\n  disabeLoginButton = false;\r\n  constructor(\r\n    private serverService: ServerService,\r\n    private constantsService: ConstantsService,\r\n    private router: Router,\r\n    private utilityService: UtilityService,\r\n    private store: Store) {\r\n  }\r\n\r\n\r\n  @ViewChild('heroForm') f: HTMLFormElement;\r\n\r\n  ngOnInit() {\r\n    // this.store.dispatch()\r\n    this.serverService.makeGetReq({url:'/static/config.json', noValidateUser:true})\r\n      .subscribe(((value:{\"backend_url\":string,\"version\":string})=>{\r\n        // {\"backend_url\":\"https://dev.imibot.ai/\",\"version\":\"1.0.0\"}\r\n        this.store.dispatch([\r\n          new SetBackendURlRoot({url: value.backend_url})\r\n        ]);\r\n      }));\r\n  }\r\n\r\n  flashErrorMessage(message:string, time_ms:number=3000){\r\n    this.errorMessage = message;\r\n    setTimeout(() => {\r\n      this.errorMessage = '';\r\n    }, time_ms);\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let loginData = this.f.value;\r\n    let loginUrl = this.constantsService.getLoginUrl();\r\n    // let headerData:IHeaderData = {'api-key': '54asdkj1209nksnda',\"content-type\":'application/x-www-f-urlencoded'};\r\n    // let body = {\r\n    //\r\n    //   // \"email\":\"ayeshreddy.k@imimobile.com\",\r\n    //   // \"password\":\"Botwoman@123!\"\r\n    //   \"email\": \"imibotadmin@imimobile.com\",\r\n    //   \"password\": \"Botwoman@123!\"\r\n    // };\r\n    let body;\r\n    if (this.f.valid) {\r\n\r\n      body = this.f.value;\r\n    } else {\r\n      this.flashErrorMessage(\"Details not valid\");\r\n      return;\r\n    }\r\n\r\n    this.flashErrorMessage(\"Reaching out to the server\", 100000);\r\n    let headerData: IHeaderData ={\r\n      \"auth-token\":null,\r\n      'user-access-token':null\r\n    };\r\n    this.serverService.makePostReq<IUser>({url: loginUrl, body, headerData})\r\n      .subscribe((user:IUser) => {\r\n\r\n        this.disabeLoginButton =true;\r\n        this.flashErrorMessage(\"Logged in. Taking you to home page\", 100000);\r\n        // this.constantsService.setPermissionsDeniedMap(user.role.permissions.actions);\r\n        this.store.dispatch([\r\n            new SetUserAction({user}),\r\n          ]).subscribe(()=>{\r\n          this.serverService.getNSetBotList()\r\n            .subscribe(()=>{\"bot list fetched from login page\"});\r\n          this.serverService.getNSetIntegrationList();\r\n          if(user.role.name===ERoleName.Analyst){\r\n              this.router.navigate(['/core/analytics2/users']);\r\n            }else {\r\n              this.router.navigate(['.']);\r\n            }\r\n          });\r\n\r\n          let enterpriseProfileUrl = this.constantsService.getEnterpriseUrl(user.enterprise_id);\r\n          this.serverService.makeGetReq<IEnterpriseProfileInfo>({url: enterpriseProfileUrl})\r\n          .subscribe((value: IEnterpriseProfileInfo) => {\r\n\r\n            this.store.dispatch([\r\n              new SetEnterpriseInfoAction({enterpriseInfo: value})\r\n            ]);\r\n          });\r\n        },\r\n        ()=>{\r\n          this.flashErrorMessage(\"Login failed. Please try again\", 100000);\r\n        }\r\n      );\r\n  }\r\n\r\n  showPanel(panel) {\r\n    this.panelActive = panel;\r\n  }\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {IAuthState} from './auth/ngxs/auth.state';\r\nimport {Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Select} from '@ngxs/store';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGaurdService {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  @Select() loggeduser$: Observable<IAuthState>;\r\n\r\n  canActivate() {\r\n\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      if (value.user == null) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['.']);\r\n        return false;\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}