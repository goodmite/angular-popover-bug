{"version":3,"sources":["webpack:///./src/app/access-gaurd.service.ts","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.scss","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/chat/chat-preview-new-page/chat-preview-new-page.component.html","webpack:///./src/app/chat/chat-preview-new-page/chat-preview-new-page.component.scss","webpack:///./src/app/chat/chat-preview-new-page/chat-preview-new-page.component.ts","webpack:///./src/app/core/buildbot/build-code-based-bot/build-code-based-bot.component.html","webpack:///./src/app/core/buildbot/build-code-based-bot/build-code-based-bot.component.scss","webpack:///./src/app/core/buildbot/build-code-based-bot/build-code-based-bot.component.ts","webpack:///./src/app/core/buildbot/build-pipeline-based-bot/build-pipeline-based-bot.component.html","webpack:///./src/app/core/buildbot/build-pipeline-based-bot/build-pipeline-based-bot.component.scss","webpack:///./src/app/core/buildbot/build-pipeline-based-bot/build-pipeline-based-bot.component.ts","webpack:///./src/app/core/buildbot/buildbot-wrapper.component.html","webpack:///./src/app/core/buildbot/buildbot-wrapper.component.scss","webpack:///./src/app/core/buildbot/buildbot-wrapper.component.ts","webpack:///./src/app/core/core-wrapper.component.html","webpack:///./src/app/core/core-wrapper.component.scss","webpack:///./src/app/core/core-wrapper.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/customner/create-customner/create-customner.component.html","webpack:///./src/app/core/customner/create-customner/create-customner.component.scss","webpack:///./src/app/core/customner/create-customner/create-customner.component.ts","webpack:///./src/app/core/customner/view-customner/view-customner.component.html","webpack:///./src/app/core/customner/view-customner/view-customner.component.scss","webpack:///./src/app/core/customner/view-customner/view-customner.component.ts","webpack:///./src/app/core/documentation/documentation.component.html","webpack:///./src/app/core/documentation/documentation.component.scss","webpack:///./src/app/core/documentation/documentation.component.ts","webpack:///./src/app/core/enterpriseprofile/enterpriseprofile.component.html","webpack:///./src/app/core/enterpriseprofile/enterpriseprofile.component.scss","webpack:///./src/app/core/enterpriseprofile/enterpriseprofile.component.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.scss","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/profile/profile.component.html","webpack:///./src/app/core/profile/profile.component.scss","webpack:///./src/app/core/profile/profile.component.ts","webpack:///./src/app/core/reports/report-details/report-controls/report-controls.component.html","webpack:///./src/app/core/reports/report-details/report-controls/report-controls.component.scss","webpack:///./src/app/core/reports/report-details/report-controls/report-controls.component.ts","webpack:///./src/app/core/reports/report-details/report-details.component.html","webpack:///./src/app/core/reports/report-details/report-details.component.scss","webpack:///./src/app/core/reports/report-details/report-details.component.ts","webpack:///./src/app/core/reports/report-details/report-display/report-display.component.html","webpack:///./src/app/core/reports/report-details/report-display/report-display.component.scss","webpack:///./src/app/core/reports/report-details/report-display/report-display.component.ts","webpack:///./src/app/core/reports/reports.component.html","webpack:///./src/app/core/reports/reports.component.scss","webpack:///./src/app/core/reports/reports.component.ts","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.scss","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/pipeline-test/pipeline-test.component.html","webpack:///./src/app/pipeline-test/pipeline-test.component.scss","webpack:///./src/app/pipeline-test/pipeline-test.component.ts","webpack:///./src/app/router-fragment-active.directive.ts","webpack:///./src/app/scroller.directive.ts","webpack:///./src/app/smart-table-settings.service.ts","webpack:///./src/app/temp-variable.service.ts","webpack:///./src/app/test/test.component.html","webpack:///./src/app/test/test.component.scss","webpack:///./src/app/test/test.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AAUhB;AAEO;AACG;AACJ;AACC;AAEqB;AAKrD;IACE,4BACU,MAAc,EACd,gBAAiC,EACjC,cAA6B;QAF7B,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,mBAAc,GAAd,cAAc,CAAe;IAEvC,CAAC;IAID,wCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,eAAe;QADjB,iBAMC;QAHC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,KAAiB;YAC5C,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAC,KAAK,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAiB,GAAjB,UAAkB,KAAK,EAAC,KAA4B;QAClD,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAEhC,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACxC,EAAE,EAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,EAAC;gBACxD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAA,IAAI,CAAC,CAAC;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACpC,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,OAAO,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED,6CAAgB,GAAhB,UAAiB,KAA6B,EAAE,KAA0B;QAA1E,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,KAAiB;YAC7C,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,KAAK,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,KAAY;QAApB,iBAYC;QAXC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAC,KAAiB;YAC5C,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACV;;0DAEkD;IACpD,CAAC;IA3CS;QAAT,0DAAM,EAAE;kCAAc,+CAAU;2DAAa;IARnC,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGkB,sDAAM;YACG,mEAAgB;YAClB,8DAAc;OAJ5B,kBAAkB,CAqD9B;IAAD,yBAAC;CAAA;AArD8B;;;;;;;;;;;;ACtB/B,qD;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,mB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,8CAAQ,GAAR;IACA,CAAC;IALU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;;SAGtC,CAAC;;OACW,2BAA2B,CAOvC;IAAD,kCAAC;CAAA;AAPuC;;;;;;;;;;;;ACPxC,6IAA6I,6UAA6U,QAAQ,OAAO,IAAI,Q;;;;;;;;;;;ACA7e,qBAAqB,2BAA2B,gCAAgC,mCAAmC,EAAE,OAAO,qCAAqC,oBAAoB,iBAAiB,oBAAoB,sBAAsB,qBAAqB,gBAAgB,2CAA2C,EAAE,yBAAyB,iBAAiB,EAAE,eAAe,iBAAiB,yCAAyC,EAAE,sCAAsC,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlb;AACX;AAEb;AACV;AAGwB;AACE;AAEkC;AAChC;AAC6B;AAOzF;IAkBE,oCACU,cAA8B,EAC9B,aAA4B,EAC5B,cAA8B,EAC9B,gBAAkC,EAClC,MAAc,EACd,KAAW;QALX,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAM;QAnBrB,gBAAW,GAAG,cAAc,CAAC;QAG7B,eAAU,GAAU,IAAI,CAAC;QAEzB,oBAAe,GAAW,KAAK,CAAC;QAIhC,gCAA2B,GAAW,SAAS,CAAC;QAChD,uBAAkB,GAAW,UAAU,CAAC;QAYxC,cAAS,GAAU,OAAO,CAAC;QAClB,QAAG,GAAG,EAAE,CAAC;IAFd,CAAC;IAIL,6CAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,yBAAyB;QAC5G,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,KAAK;YACrC,EAAE,EAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;gBAAC,MAAM,CAAC;YACtC,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,IAAE,UAAU,CAAC;IAEpG,CAAC;IAED,+CAAU,GAAV,UAAW,SAAgB;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC9B,CAAC;IAED,+CAAU,GAAV,UAAW,GAAW;QACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IACD,8CAAS,GAAT;QAAA,iBAQC;QAPC,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,CAAC,GAAG,EAAC,CAAC;aACrD,SAAS,CAAC,UAAC,KAAK;YACf,OAAO,CAAC,GAAG,EAAE,CAAC;YAEd,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,4EAAsB,EAAE,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC;IACN,CAAC;IACD,gDAAW,GAAX,UAAY,IAAS;QAEnB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,wBAAwB;QACxB,8CAA8C;QAC9C,MAAM;IACR,CAAC;IA9DS;QAAT,0DAAM,EAAE;kCAAoB,+CAAU;yEAAoB;IACV;QAAhD,0DAAM,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,CAAC,gBAAgB,EAA9B,CAA8B,CAAC;kCAAoB,+CAAU;yEAAS;IACtD;QAAhC,+DAAS,CAAC,oGAAoB,CAAC;kCAAe,oGAAoB;oEAAC;IAwB3D;QAAR,2DAAK,EAAE;;2DAAU;IA5BP,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAoB0B,8DAAc;YACf,6DAAa;YACZ,+DAAc;YACZ,mEAAgB;YAC1B,sDAAM;YACR,iDAAK;OAxBV,0BAA0B,CAoEtC;IAAD,iCAAC;CAAA;AApEsC;;;;;;;;;;;;ACnBvC,gIAAgI,sRAAsR,QAAQ,gDAAgD,IAAI,iBAAiB,QAAQ,6BAA6B,IAAI,mBAAmB,QAAQ,qDAAqD,IAAI,qBAAqB,QAAQ,oCAAoC,0CAA0C,UAAU,IAAI,uBAAuB,QAAQ,2DAA2D,IAAI,0BAA0B,QAAQ,oCAAoC,IAAI,0BAA0B,QAAQ,0BAA0B,IAAI,0BAA0B,QAAQ,6CAA6C,IAAI,0BAA0B,QAAQ,iBAAiB,qBAAqB,+CAA+C,IAAI,qBAAqB,QAAQ,YAAY,IAAI,mBAAmB,QAAQ,YAAY,IAAI,qBAAqB,QAAQ,aAAa,IAAI,iBAAiB,QAAQ,IAAI,QAAQ,gBAAgB,IAAI,OAAO,IAAI,iBAAiB,QAAQ,IAAI,QAAQ,sBAAsB,IAAI,OAAO,IAAI,iBAAiB,QAAQ,8CAA8C,IAAI,mBAAmB,QAAQ,oDAAoD,IAAI,yBAAyB,QAAQ,6CAA6C,IAAI,uBAAuB,QAAQ,sCAAsC,IAAI,yBAAyB,QAAQ,0BAA0B,IAAI,4BAA4B,QAAQ,iBAAiB,uBAAuB,SAAS,IAAI,4BAA4B,QAAQ,oCAAoC,IAAI,4BAA4B,QAAQ,aAAa,mDAAmD,SAAS,IAAI,4BAA4B,QAAQ,gDAAgD,IAAI,4BAA4B,QAAQ,oDAAoD,IAAI,yBAAyB,QAAQ,WAAW,IAAI,yBAAyB,QAAQ,4BAA4B,IAAI,8BAA8B,QAAQ,iBAAiB,wBAAwB,SAAS,IAAI,8BAA8B,QAAQ,oCAAoC,IAAI,8BAA8B,QAAQ,aAAa,oDAAoD,SAAS,IAAI,8BAA8B,QAAQ,iDAAiD,IAAI,8BAA8B,QAAQ,yCAAyC,IAAI,yBAAyB,QAAQ,aAAa,IAAI,yBAAyB,QAAQ,IAAI,QAAQ,4BAA4B,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,iBAAiB,mBAAmB,SAAS,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,oCAAoC,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,aAAa,+CAA+C,SAAS,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,4CAA4C,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,+BAA+B,IAAI,OAAO,IAAI,yBAAyB,QAAQ,IAAI,QAAQ,aAAa,IAAI,OAAO,IAAI,yBAAyB,QAAQ,IAAI,QAAQ,4BAA4B,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,iBAAiB,0BAA0B,SAAS,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,oCAAoC,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,aAAa,sDAAsD,SAAS,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,mDAAmD,IAAI,OAAO,IAAI,8BAA8B,QAAQ,IAAI,QAAQ,sCAAsC,IAAI,OAAO,IAAI,yBAAyB,QAAQ,IAAI,QAAQ,aAAa,IAAI,OAAO,IAAI,uBAAuB,QAAQ,aAAa,IAAI,qBAAqB,QAAQ,aAAa,IAAI,yBAAyB,QAAQ,sCAAsC,4BAA4B,IAAI,uBAAuB,QAAQ,qHAAqH,IAAI,uBAAuB,QAAQ,2FAA2F,IAAI,uBAAuB,QAAQ,IAAI,QAAQ,sEAAsE,IAAI,OAAO,IAAI,4BAA4B,QAAQ,IAAI,QAAQ,6BAA6B,IAAI,OAAO,IAAI,4BAA4B,QAAQ,IAAI,QAAQ,iFAAiF,IAAI,OAAO,IAAI,yBAAyB,QAAQ,IAAI,QAAQ,iFAAiF,IAAI,OAAO,IAAI,uBAAuB,QAAQ,IAAI,QAAQ,aAAa,IAAI,OAAO,IAAI,2BAA2B,QAAQ,IAAI,QAAQ,8EAA8E,IAAI,OAAO,IAAI,uBAAuB,QAAQ,IAAI,QAAQ,sJAAsJ,IAAI,OAAO,IAAI,qBAAqB,QAAQ,aAAa,IAAI,uBAAuB,QAAQ,aAAa,IAAI,qBAAqB,QAAQ,aAAa,IAAI,mBAAmB,QAAQ,aAAa,IAAI,Q;;;;;;;;;;;ACA7yL,qBAAqB,2BAA2B,gCAAgC,mCAAmC,EAAE,OAAO,qCAAqC,oBAAoB,iBAAiB,oBAAoB,sBAAsB,qBAAqB,gBAAgB,2CAA2C,EAAE,yBAAyB,iBAAiB,EAAE,eAAe,iBAAiB,yCAAyC,EAAE,sCAAsC,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlb;AACnB;AAC2C;AACK;AACrD;AAEc;AACF;AACtB;AAG4B;AAO5D;IAkBE,wCACU,cAA8B,EAC9B,aAA4B,EAC5B,cAA8B,EAC9B,gBAAkC,EAClC,KAAW;QAJX,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAM;QAlBrB,gBAAW,GAAG,cAAc,CAAC;QAG7B,eAAU,GAAU,IAAI,CAAC;QAEzB,oBAAe,GAAW,KAAK,CAAC;QAIhC,gCAA2B,GAAW,SAAS,CAAC;QAChD,uBAAkB,GAAW,UAAU,CAAC;QAWxC,cAAS,GAAU,OAAO,CAAC;QAClB,QAAG,GAAG,EAAE,CAAC;IAFd,CAAC;IAIL,iDAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC,yBAAyB;QAC5G,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,KAAK;YACrC,uBAAuB;YACvB,EAAE,EAAC,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;gBAAC,MAAM,CAAC;YAC1C,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,IAAE,UAAU,CAAC;IAEpG,CAAC;IAED,mDAAU,GAAV,UAAW,SAAgB;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,mDAAU,GAAV,UAAW,GAAW;QACpB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IACD,kDAAS,GAAT;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,GAAG,EAAC,GAAG,EAAE,IAAI,EAAC,IAAI,CAAC,GAAG,EAAC,CAAC;aACrD,SAAS,CAAC,UAAC,KAAK;QACjB,CAAC,CAAC;IACN,CAAC;IACD,oDAAW,GAAX,UAAY,IAAS;QACnB,IAAI;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClB,IAAI,kFAA4B,CAAC,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC;SAC9C,CAAC,CAAC;IACL,CAAC;IA1DS;QAAT,0DAAM,EAAE;kCAAoB,+CAAU;6EAAoB;IAE1B;QAAhC,+DAAS,CAAC,oGAAoB,CAAC;kCAAe,oGAAoB;wEAAC;IAuB3D;QAAR,2DAAK,EAAE;;+DAAU;IA3BP,8BAA8B;QAL1C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;;;SAGzC,CAAC;yCAoB0B,8DAAc;YACf,6DAAa;YACZ,+DAAc;YACZ,mEAAgB;YAC5B,iDAAK;OAvBV,8BAA8B,CA8D1C;IAAD,qCAAC;CAAA;AA9D0C;;;;;;;;;;;;AClB3C,sQAAsQ,qb;;;;;;;;;;;ACAtQ,uCAAuC,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAV;AACsE;AAG5E;AACV;AACmB;AACM;AACK;AACT;AACwC;AACnC;AAO1D;IAOE,kCACU,cAA8B,EAC9B,MAAc,EACd,aAA4B,EAC5B,cAA8B,EAC9B,gBAAkC,EAClC,KAAY;QALZ,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAO;QATtB,QAAG,GAAS,EAAE,CAAC;IAWf,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC3E,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAC,KAAK;YACrC,wCAAwC;YACxC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC;YACnB,EAAE,EAAC,KAAI,CAAC,QAAQ,KAAG,uEAAQ,CAAC,OAAO,IAAI,KAAK,CAAC,SAAS,CAAC,EAAC;gBACtD,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC;YAC7B,CAAC;YAAA,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,QAAQ,KAAG,uEAAQ,CAAC,WAAW,IAAI,KAAK,CAAC,aAAa,CAAC,EAAC;gBACpE,KAAI,CAAC,GAAG,GAAG,KAAK,CAAC,aAAa,CAAC;YACjC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAS,GAAT;QAAA,iBAwBC;QAtBC,IAAI,GAAG,GAAQ,IAAI,CAAC,cAAc,CAAC,iCAAiC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC/E,EAAE,EAAC,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC;QAChB,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,CAAC;QAClD,EAAE,EAAC,CAAC,GAAG,CAAC,EAAC;YACP,OAAO,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;QAC/C,CAAC;QAED,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,EAAE,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC;YACjB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,gEAAgE,CAAC;QACnF,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAC,CAAC;aAClD,SAAS,CAAC,UAAC,UAAgB;YAC1B,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,qFAAqB,CAAC,EAAC,GAAG,EAAE,UAAU,EAAC,CAAC;gBAC5C,IAAI,4EAAsB,EAAE;aAC7B,CAAC,CAAC,SAAS,CAAC;gBACX,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,KAAI,CAAC,QAAQ,SAAI,UAAU,CAAC,EAAI,CAAC,CAAC,CAAC;YAC9E,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YACtD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,8CAAW,GAAX,UAAY,IAAU;QACpB,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1E,EAAE,EAAC,QAAQ,KAAK,uEAAQ,CAAC,OAAO,CAAC,EAAC;YAChC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,8EAAwB,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;aAC3C,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,kFAA4B,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;aAC/C,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,sDAAmB,GAAnB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAtES;QAAT,0DAAM,EAAE;kCAAoB,+CAAU;uEAAoB;IACV;QAAhD,0DAAM,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,CAAC,gBAAgB,EAA9B,CAA8B,CAAC;kCAAoB,+CAAU;uEAAS;IAH5E,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAS0B,8DAAc;YACtB,sDAAM;YACC,6DAAa;YACZ,+DAAc;YACZ,mEAAgB;YAC3B,iDAAK;OAbX,wBAAwB,CAyEpC;IAAD,+BAAC;CAAA;AAzEoC;;;;;;;;;;;;AClBrC,mpB;;;;;;;;;;;ACAA,mCAAmC,sBAAsB,kBAAkB,sCAAsC,qDAAqD,0CAA0C,mDAAmD,EAAE,kBAAkB,wBAAwB,EAAE,gBAAgB,oBAAoB,yBAAyB,oBAAoB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxW;AACO;AAEM;AACf;AACM;AACpB;AAOlC;IAGE,8BACU,MAAc,EACd,aAA2B,EAC3B,KAAW,EACX,gBAAiC;QAHjC,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAc;QAC3B,UAAK,GAAL,KAAK,CAAM;QACX,qBAAgB,GAAhB,gBAAgB,CAAiB;IACvC,CAAC;IAEL,uCAAQ,GAAR;QAAA,iBAeC;QAbC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,IAAI;YAChC,EAAE,CAAC,CAAC,IAAI,YAAY,gEAAgB,CAAC,CAAC,CAAC;gBACrC,KAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC;YACjF,CAAC;QACH,CAAC,CAAC,CAAC;QACH,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,UAAU,CAA+C,EAAC,GAAG,EAAE,aAAa,EAAC,CAAC;aAC9F,SAAS,CAAC,UAAC,KAAoC;YAC9C,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,4EAA2B,CAAC,EAAC,wBAAwB,EAAE,KAAK,CAAC,OAAO,EAAC,CAAC;aAC3E,CAAC,CAAC;YACH,KAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC9D,CAAC,CAAC,CAAC;IACP,CAAC;IAzBU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAKkB,sDAAM;YACA,6DAAa;YACrB,iDAAK;YACM,mEAAgB;OAPhC,oBAAoB,CA2BhC;IAAD,2BAAC;CAAA;AA3BgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbmB;AACU;AACmC;AACN;AAC9B;AACA;AAC4B;AACV;AACA;AAC2B;AACY;AAC/E;AAC2C;AAClB;AAChE,uFAAuF;AACR;AAC/E,2FAA2F;AAC3F,uEAAuE;AACvE,4HAA4H;AAC5H,sGAAsG;AACtG,gHAAgH;AAChH,wGAAwG;AAChD;AACgD;AACG;AACtD;AACqD;AAC/C;AAChB;AAC3C,iEAAiE;AACX;AACZ;AACgB;AACb;AACC;AAC6C;AACpC;AACE;AACzD,gGAAgG;AAChG,0FAA0F;AAC/B;AACV;AACjD,gFAAgF;AAChF,mKAAmK;AAEnK,IAAM,MAAM,GAAY;IACtB;QAEE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,4EAAoB;QAC/B,WAAW,EAAC,CAAC,qEAAgB,CAAC;QAC9B,gBAAgB,EAAC,CAAC,qEAAgB,EAAC,yEAAkB,CAAC;QACtD,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,6CAA6C,EAAC,OAAO,EAAC,CAAC,qEAAgB,CAAC;aACzG;YACD;gBACE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,gDAAgD,EAAE,OAAO,EAAC,CAAC,qEAAgB,CAAC;aAC9G;YACD;gBACE,IAAI,EAAE,YAAY,EAAE,YAAY,EAAE,8CAA8C,EAAE,OAAO,EAAC,CAAC,qEAAgB,CAAC;aAC7G;YACD,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,0GAAsB,EAAE,IAAI,EAAC,EAAC,SAAS,EAAC,+DAAW,CAAC,SAAS,EAAC,EAAE,WAAW,EAAC,EAAE,EAAC;YAC9G,EAAC,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+GAAwB,EAAE,WAAW,EAAC,EAAE,EAAC;YAC/E,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,yGAA0B,EAAE,IAAI,EAAC,EAAC,SAAS,EAAC,+DAAW,CAAC,kBAAkB,EAAC,EAAE,WAAW,EAAC,EAAE,EAAC;YACnI,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;YAC9C,EAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE,IAAI,EAAC,EAAC,SAAS,EAAC,+DAAW,CAAC,MAAM,EAAC,EAAC;YACnF,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,uGAAsB,EAAE,IAAI,EAAC,EAAC,SAAS,EAAC,+DAAW,CAAC,MAAM,EAAC,EAAC;YACnG,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,uGAAsB,EAAE,IAAI,EAAC,EAAC,IAAI,EAAC,+DAAW,CAAC,aAAa,EAAC,EAAC;YAClG,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,6FAAsB,EAAE,WAAW,EAAC,EAAE,EAAC;YAC1E;gBACE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,6FAAwB,EAAE,QAAQ,EAC7D;oBACE,EAAC,IAAI,EAAE,wEAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,wHAA0B,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,wEAAQ,CAAC,OAAO,EAAC,EAAC;oBACnG,EAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,qIAA8B,EAAE,IAAI,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAC,EAAC;iBACpG;aACJ;SACF;KACF;IAED,6HAA6H;IAC7H,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,mBAAiB,wEAAQ,CAAC,OAAS,EAAE,SAAS,EAAE,MAAM,EAAC;CAC/E,CAAC;AA6CF;IAAA;IACA,CAAC;IADY,UAAU;QA3CtB,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yEAAe;gBACf,wHAA0B;gBAC1B,qIAA8B;gBAC9B,gGAA6B;gBAC7B,6FAAsB;gBACtB,0GAAsB;gBACtB,+GAAwB;gBACxB,2EAAgB;gBAChB,yGAA0B;gBAC1B,2EAAgB;gBAChB,4EAAoB;gBACpB,6FAAwB;gBACxB,8EAAe;gBACf,6FAAqB;gBAErB,sEAAiB;gBACjB,uGAAsB;gBACtB,uBAAuB;gBACvB,uHAAsB;gBACtB,0HAAuB;gBACvB,mEAAa;gBACb,wHAA2B;gBAC3B,yEAAe;aAOhB;YACD,OAAO,EAAE;gBACP,6DAAY;gBACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,2DAAW;gBACX,+BAA+B;gBAC/B,sEAAgB;gBAChB,4DAAY;aAEb;YACD,SAAS,EAAE,CAAC,wDAAU,CAAC;SACxB,CAAC;OACW,UAAU,CACtB;IAAD,iBAAC;CAAA;AADsB;;;;;;;;;;;;AC/HvB,kZAAkZ,aAAa,k8BAAk8B,+N;;;;;;;;;;;ACAj2C,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;QACA,gBAAW,GAAQ,QAAQ,CAAC;IADZ,CAAC;IAEjB,2CAAQ,GAAR;IACA,CAAC;IAED,qDAAkB,GAAlB,UAAmB,cAAqB;QACtC,IAAI,CAAC,WAAW,GAAG,cAAc,CAAC;IACpC,CAAC;IATU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;;OACW,wBAAwB,CAWpC;IAAD,+BAAC;CAAA;AAXoC;;;;;;;;;;;;ACPrC,irB;;;;;;;;;;;ACAA,sCAAsC,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACL;AACZ;AACkB;AAC5B;AAK8B;AACP;AACC;AAEwE;AAOhI;IAuCE,gCACU,KAAY,EACZ,aAA4B,EAC5B,cAA8B,EAC9B,MAAc,EACd,cAA8B,EAC9B,gBAAkC;QALlC,UAAK,GAAL,KAAK,CAAO;QACZ,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAxC5C,mBAAc,GAAQ,EAAE,CAAC;QACzB,aAAQ,GAAG;YACT,OAAO,EAAE;gBACT,GAAG,EAAE;oBACH,KAAK,EAAE,aAAa;iBACrB;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE,MAAM;iBACd;aAIF;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;aACf;YACD,OAAO,EAAE;gBACP,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,KAAK;aACd;YACD,gBAAgB,EAAE,UAAC,GAAG;gBACpB,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,wBAAwB,CAAC;oBAChC,sEAAsE;oBACtE,wCAAwC;oBACxC,6BAA6B;gBAC/B,CAAC;gBACD,MAAM,CAAC,EAAE,CAAC;YACZ,CAAC;SAAC,CAAC;QACH,iBAAY,GAAW,EAAE,CAAC;QAC1B,sBAAiB,GAAG,CAAC,CAAC;IAUtB,CAAC;IAGD,yCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;QAC/F,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,KAAK;YACxB,KAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,iBAAiB,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,4CAA4C,EAAE,CAAC;QACzF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,6CAAY,GAAZ,UAAa,iBAAiB;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,IAAI,EAAE,iBAAiB,EAAC,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;QACvG,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,iBAAiB,GAAG,CAAC,CAAC,CAAC;IAC7D,CAAC;IAED,0CAAS,GAAT,UAAU,KAAkB,EAAE,MAAkB;QAAhD,iBAyBC;QAzBS,kCAAkB;QAAE,mCAAkB;QAC9C,IAAI,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QACxG,IAAI,CAAC,aAAa,CAAC,UAAU,CAA+D,EAAC,GAAG,EAAE,mBAAmB,EAAC,CAAC;aACpH,SAAS,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC;YAC3C,KAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC,OAAO,CAAC;YAChD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,qEAAoB,CAAC,EAAC,iBAAiB,EAAE,KAAI,CAAC,0BAA0B,EAAC,CAAC;aAC/E,CAAC,CAAC;YAEH,oBAAoB;YACpB,IAAI,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YAC7E,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;gBAAC,MAAM,CAAC;YAC3B,IAAI,aAAa,GAAG,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAC1E,IAAI,kDAAkD,GACpD,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,EAAE,KAAK,MAAM,CAAC,aAAa,CAAC,EAAjC,CAAiC,CAAC,CAAC;YAClF,EAAE,CAAC,CAAC,kDAAkD,CAAC;gBAAC,MAAM,CAAC;YAC/D,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,aAAa,EAAC,CAAC;iBAChD,SAAS,CAAC,UAAC,MAAqC;gBAC/C,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxD,KAAI,CAAC,0BAA0B,GAAO,KAAI,CAAC,0BAA0B,QAAC,CAAC;gBACzE,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAqB,GAArB,UAAsB,oBAAoC;QAA1D,iBAgBC;QAdC,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,oBAAoB,CAAC;aAC3D,SAAS,CAAC,UAAC,KAAqB;YAC/B,0EAA0E;YAC1E,IAAI,aAAa,CAAC;YAClB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,EAAE,CAAC;gBACpB,aAAa,GAAG,KAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,UAAC,8BAA8B,IAAK,qCAA8B,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAA9C,CAA8C,CAAC,CAAC;YAChJ,EAAE,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC;gBACrB,KAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,gBAAO,KAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,EAAK,KAAK,IAAE,SAAS,EAAE,IAAI,GAAC,CAAC;YAClI,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,0BAA0B,CAAC,IAAI,cAAK,KAAK,IAAE,SAAS,EAAE,IAAI,IAAE,CAAC;YACpE,CAAC;YACD,KAAI,CAAC,4BAA4B,CAAC,EAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAC,CAAC,CAAC;YACtD,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6DAA4B,GAA5B,UAA6B,aAAqB;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE;YAC1B,WAAW,EAAE,aAAa;YAC1B,UAAU,EAAE,IAAI,CAAC,cAAc;SAGhC,CAAC,CAAC;IACL,CAAC;IAED,0CAAS,GAAT,UAAU,MAAc;QAAxB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC;aACjC,SAAS,CAAC;YAET,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;YAC5D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC1C,IAAI,gBAAgB,GAAG,KAAI,CAAC,0BAA0B,CAAC,SAAS,CAAC,UAAC,MAAM,IAAK,aAAM,CAAC,EAAE,IAAI,MAAM,EAAnB,CAAmB,CAAC,CAAC;YAClG,EAAE,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,CAAC;gBAAC,KAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;YACzF,KAAI,CAAC,sBAAsB,CAAC,iBAAiB,EAAE,CAAC;YAChD,KAAI,CAAC,0BAA0B,GAAO,KAAI,CAAC,0BAA0B,QAAC,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC;IA/HS;QAAT,0DAAM,EAAE;kCAAc,+CAAU;+DAAkB;IACzC;QAAT,0DAAM,EAAE;kCAAO,+CAAU;wDAAY;IAkCH;QAAlC,+DAAS,CAAC,0IAAsB,CAAC;kCAAyB,0IAAsB;0EAAC;IArCvE,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAyCiB,iDAAK;YACG,6DAAa;YACZ,8DAAc;YACtB,sDAAM;YACE,+DAAc;YACZ,mEAAgB;OA7CjC,sBAAsB,CAmIlC;IAAD,6BAAC;CAAA;AAnIkC;;;;;;;;;;;;ACpBnC,w/K;;;;;;;;;;;ACAA,uCAAuC,qBAAqB,sBAAsB,kBAAkB,iBAAiB,kCAAkC,2CAA2C,0BAA0B,EAAE,oCAAoC,wBAAwB,oBAAoB,uCAAuC,gDAAgD,8BAA8B,EAAE,4CAA4C,sBAAsB,gCAAgC,4BAA4B,EAAE,SAAS,wBAAwB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAthB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;ACPnC,4/JAA4/J,2BAA2B,gCAAgC,sBAAsB,gCAAgC,gCAAgC,gCAAgC,gCAAgC,4X;;;;;;;;;;;ACA7sK,4CAA4C,kBAAkB,iBAAiB,yBAAyB,+BAA+B,kBAAkB,wBAAwB,4BAA4B,EAAE,kCAAkC,iBAAiB,EAAE,4BAA4B,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,sBAAsB,qBAAqB,EAAE,4BAA4B,iBAAiB,kBAAkB,qBAAqB,iBAAiB,0BAA0B,qBAAqB,kBAAkB,qCAAqC,qBAAqB,EAAE,gBAAgB,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,iCAAiC,6DAA6D,qCAAqC,sBAAsB,qBAAqB,mBAAmB,2CAA2C,eAAe,EAAE,4BAA4B,6DAA6D,qCAAqC,sBAAsB,qBAAqB,mBAAmB,2CAA2C,eAAe,EAAE,6BAA6B,6DAA6D,qCAAqC,sBAAsB,qBAAqB,mBAAmB,2CAA2C,eAAe,EAAE,mBAAmB,6DAA6D,qCAAqC,sBAAsB,qBAAqB,mBAAmB,2CAA2C,eAAe,EAAE,iBAAiB,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,iBAAiB,wBAAwB,EAAE,YAAY,oBAAoB,sBAAsB,qBAAqB,gBAAgB,2CAA2C,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhiE;AACjB;AACe;AACN;AAEnB;AACkE;AAI7C;AAOrD;IAaE,oCACU,KAAY,EACZ,gBAAkC,EAClC,cAA8B,EAC9B,aAA4B;QAH5B,UAAK,GAAL,KAAK,CAAO;QACZ,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QANtC,0CAAqC,GAAG,IAAI,CAAC,gBAAgB,CAAC,mCAAmC,CAAC;IAOlG,CAAC;IAED,6CAAQ,GAAR;QAAA,iBAmDC;QAlDC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,EAAM;gBAAL,cAAI;YAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC;YACtB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YAC3B,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAe;YACtD,IAAI,oBAAoB,GAAG,KAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;YACrF,KAAI,CAAC,aAAa,CAAC,UAAU,CAAyB,EAAC,GAAG,EAAE,oBAAoB,EAAC,CAAC;iBAC/E,SAAS,CAAC,UAAC,KAA6B;gBACvC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;oBAClB,IAAI,sFAAuB,CAAC,EAAC,cAAc,EAAE,KAAK,EAAC,CAAC;iBACrD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACL,EAAE,EAAC,KAAI,CAAC,IAAI,KAAG,OAAO,CAAC,EAAC;gBACtB,IAAI,kBAAkB,GAAG,KAAI,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;gBACvE,KAAI,CAAC,aAAa,CAAC,UAAU,CAAiC,EAAC,GAAG,EAAE,kBAAkB,EAAC,CAAC;qBACrF,SAAS,CAAC,UAAC,KAAK;oBACf,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;wBAClB,IAAI,uFAAwB,CAAC,EAAC,eAAe,EAAE,KAAK,CAAC,OAAO,EAAC,CAAC;qBAC/D,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC;QAEH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B;YACjC,IAAI,CAAC,yBAAyB;iBAC3B,GAAG,CAAC,UAAC,KAAK;gBACT,MAAM,cACD,KAAK,IACR,eAAe,EAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,UAAC,cAAc;wBACvD,MAAM,cACD,cAAc,IACjB,UAAU,EAAC,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAE,EACnE,UAAU,EAAC,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,kBAAkB,EAAE,IACpE;oBACH,CAAC,CAAC,IACH;YACH,CAAC,CAAC;QACF,0BAA0B;QAC1B,yCAAyC;QACzC,IAAI;QACN,MAAM;QAEN,sEAAsE;QACtE,0EAA0E;QAC1E,kGAAkG;QAClG,sCAAsC;QACtC,4BAA4B;QAC5B,+EAA+E;QAC/E,UAAU;QACV,QAAQ;IACV,CAAC;IAED,4DAAuB,GAAvB;QAAA,iBAYC;QAXC,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QAC5B,IAAI,IAAI,gBAA+B,IAAI,CAAC,wBAAwB,EAAK,QAAQ,CAAC,CAAC;QACnF,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACpE,IAAI,UAAU,GAAgB,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC,GAAG,OAAE,IAAI,QAAE,UAAU,cAAC,CAAC;aACnD,SAAS,CAAC;YACT,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,CAAC;YACrE,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,sFAAuB,CAAC,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC;aACpD,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAnFS;QAAT,0DAAM,EAAE;kCAAc,+CAAU;mEAAkB;IACzC;QAAT,0DAAM,EAAE;kCAA4B,+CAAU;iFAAyB;IAErD;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAI,eAAe;yDAAC;IAL3B,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAeiB,iDAAK;YACM,mEAAgB;YAClB,+DAAc;YACf,6DAAa;OAjB3B,0BAA0B,CAuFtC;IAAD,iCAAC;CAAA;AAvFsC;;;;;;;;;;;;ACjBvC,gJAAgJ,QAAQ,WAAW,aAAa,wDAAwD,4QAA4Q,6qGAA6qG,gFAAgF,0GAA0G,oCAAoC,6nC;;;;;;;;;;;ACA/3H,qCAAqC,iBAAiB,4BAA4B,oBAAoB,iBAAiB,YAAY,aAAa,EAAE,+CAA+C,2BAA2B,uBAAuB,0BAA0B,EAAE,mCAAmC,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,4BAA4B,EAAE,uCAAuC,wBAAwB,kCAAkC,EAAE,yCAAyC,kCAAkC,EAAE,iCAAiC,mBAAmB,sCAAsC,oBAAoB,8BAA8B,EAAE,kDAAkD,gCAAgC,EAAE,mCAAmC,iBAAiB,EAAE,sDAAsD,qBAAqB,oBAAoB,EAAE,4DAA4D,qBAAqB,8BAA8B,yBAAyB,sBAAsB,EAAE,6CAA6C,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,sCAAsC,EAAE,gFAAgF,uBAAuB,EAAE,mFAAmF,0BAA0B,EAAE,SAAS,oBAAoB,sBAAsB,mBAAmB,oBAAoB,EAAE,iCAAiC,mFAAmF,eAAe,mBAAmB,4BAA4B,mFAAmF,eAAe,mBAAmB,6BAA6B,mFAAmF,eAAe,mBAAmB,mBAAmB,mFAAmF,eAAe,mBAAmB,iBAAiB,uBAAuB,8BAA8B,EAAE,qBAAqB,gCAAgC,EAAE,iCAAiC,8BAA8B,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAj4E;AACN;AACI;AAES;AACkB;AACd;AACU;AACD;AACsB;AACvC;AAC2C;AACtB;AAEd;AAC4C;AACjD;AAQrD;IAeE,yBACU,KAAY,EACZ,aAA4B,EAC5B,cAA8B,EAC9B,gBAAkC,EAClC,cAA8B,EAC9B,MAAc;QALd,UAAK,GAAL,KAAK,CAAO;QACZ,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAfxB,YAAO,GAAG,oDAAoD,CAAC;QAC/D,eAAU,GAAG,wEAAQ,CAAC;QACtB,gBAAW,GAAG,4DAAS,CAAC;QACxB,2BAAsB,GAAG,uEAAoB,CAAC;QAC9C,iBAAY,GAAG,KAAK,CAAC;IAYrB,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAsCC;QArCC,4BAA4B,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAC,GAAG;YAChD,iEAAiE;YACjE,IAAI,cAAc,GAAG,GAAG,CAAC,cAAc,CAAC;YACxC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAEnB;;oBAEI;gBACJ,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,KAAK,cAAc,CAAC;oBAAC,MAAM,CAAC;gBACnD,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;gBACrC,KAAI,CAAC,mBAAmB,IAAI,YAAY,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;gBAEnE,0BAA0B;gBAC1B,KAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;oBACpC,KAAI,CAAC,mBAAmB,IAAI,YAAY,CAAC,KAAI,CAAC,mBAAmB,CAAC,CAAC;oBACnE,IAAI,CAAC;wBACH,KAAI,CAAC,gBAAgB,IAAI,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;oBAC/D,CAAC;oBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,qDAAoD;oBACrE,CAAC;oBACD,OAAO,CAAC,GAAG,CAAC,oEAAoE,CAAC,CAAC;oBAClF,KAAI,CAAC,MAAM,EAAE,CAAC;oBACd,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,yCAAwC;gBACrE,CAAC,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC;QACH,CAAC,CACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,KAAK;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,UAAC,qBAAqB;YAC7D,CAAC;YACD,KAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,IAAI,IAAI,KAAI,CAAC,OAAO,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,6DAA6D;QAC7D,MAAM;QACN,yEAAyE;QACzE,KAAK;IACP,CAAC;IAED,gCAAM,GAAN;QAAA,iBAuBC;QAtBC,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,wBAAwB;QACxB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAChD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC,CAAC;aAC3C,SAAS,CAAC,UAAC,CAAC;YACX,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAElB,IAAI,kFAAkB,EAAE;YACxB,IAAI,8EAAuB,EAAE;YAC7B,IAAI,4GAA0B,EAAE;YAChC,IAAI,sFAAsB,EAAE;YAC5B,IAAI,yFAAwB,EAAE;YAC9B,IAAI,0FAAyB,EAAE;YAC/B,IAAI,8DAAa,EAAE;SACpB,CAAC,CAAC,SAAS,CAAC;YACX,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,qEAAc,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IAE1C,CAAC;IArFS;QAAT,0DAAM,EAAE;kCAAc,+CAAU;wDAAkB;IACzC;QAAT,0DAAM,EAAE;kCAA4B,+CAAU;sEAAyB;IAC9D;QAAT,0DAAM,EAAE;kCAAO,+CAAU;iDAAY;IAC5B;QAAT,0DAAM,EAAE;kCAAmB,iDAAY;6DAAC;IAL9B,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAiBiB,iDAAK;YACG,6DAAa;YACZ,8DAAc;YACZ,mEAAgB;YAClB,gEAAc;YACtB,sDAAM;OArBb,eAAe,CAyF3B;IAAD,sBAAC;CAAA;AAzF2B;;;;;;;;;;;;ACxB5B,i6CAAi6C,uBAAuB,+VAA+V,2BAA2B,gSAAgS,qHAAqH,oQAAoQ,MAAM,2cAA2c,q9BAAq9B,sCAAsC,m6B;;;;;;;;;;;ACAv5H,gCAAgC,uBAAuB,EAAE,wBAAwB,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,mBAAmB,EAAE,kCAAkC,uCAAuC,0BAA0B,EAAE,gCAAgC,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,EAAE,8BAA8B,mBAAmB,4BAA4B,uBAAuB,oBAAoB,uCAAuC,EAAE,gBAAgB,iBAAiB,uBAAuB,8BAA8B,oBAAoB,EAAE,iCAAiC,kBAAkB,mBAAmB,EAAE,0BAA0B,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,yBAAyB,iBAAiB,0BAA0B,qBAAqB,kBAAkB,qCAAqC,EAAE,2BAA2B,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,oBAAoB,4BAA4B,kBAAkB,uBAAuB,2BAA2B,EAAE,6BAA6B,kCAAkC,mCAAmC,mBAAmB,gCAAgC,EAAE,kCAAkC,qBAAqB,EAAE,+CAA+C,oBAAoB,wBAAwB,2BAA2B,uBAAuB,EAAE,gCAAgC,qBAAqB,sBAAsB,yBAAyB,2BAA2B,EAAE,oCAAoC,oBAAoB,mBAAmB,sBAAsB,EAAE,mBAAmB,4BAA4B,kBAAkB,uBAAuB,2BAA2B,EAAE,4BAA4B,kCAAkC,mCAAmC,mBAAmB,gCAAgC,EAAE,iCAAiC,qBAAqB,EAAE,8CAA8C,oBAAoB,wBAAwB,2BAA2B,uBAAuB,EAAE,+BAA+B,qBAAqB,sBAAsB,yBAAyB,2BAA2B,EAAE,uBAAuB,iBAAiB,EAAE,uBAAuB,uBAAuB,8BAA8B,iBAAiB,iBAAiB,qBAAqB,EAAE,oBAAoB,0BAA0B,EAAE,sBAAsB,kBAAkB,uBAAuB,oBAAoB,8BAA8B,kBAAkB,gBAAgB,uBAAuB,yBAAyB,EAAE,mBAAmB,sBAAsB,kBAAkB,2CAA2C,gDAAgD,6QAA6Q,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApxG;AAEpD;AACU;AACS;AACiB;AAEV;AACL;AAEF;AACb;AAStC;IAeE,0BACU,aAA4B,EAC5B,gBAAkC,EAClC,cAA8B,EAC9B,YAA4B,EAC5B,KAAY;QAJZ,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,UAAK,GAAL,KAAK,CAAO;QAlBtB,gBAAW,GAAG,4DAAS,CAAC;QAIxB,2BAAsB,GAAG,IAAI,CAAC;IAe9B,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,UAAU;YACpC,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,gEAAgE;QAChE,oGAAoG;QACpG,gCAAgC;QAChC,4BAA4B;QAC5B,6EAA6E;QAC7E,UAAU;QACV,QAAQ;QAER,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,MAAc;YAClD,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACzE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb;QAAA,iBAiBC;QAhBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAC5E,MAAM,CAAC;QACT,CAAC;QACD,IAAI,GAAG,GAAW,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7E,IAAI;QACJ,oDAAoD;QACpD,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC,GAAG,OAAE,IAAI,QAAC,CAAC;aACvC,SAAS,CAAC,UAAC,KAAY;YACtB,IAAI,WAAW,gBAAc,KAAI,CAAC,UAAU,EAAK,KAAK,CAAC,CAAC;YACxD,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;YAC1D,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;gBAClB,IAAI,oEAAa,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC;aACvC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kDAAuB,GAAvB,UAAwB,QAA0B;QAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;IACxE,CAAC;IAED,yCAAc,GAAd;QAAA,iBAgCC;QA/BC,sCAAsC;QACtC,IAAI;QACJ,+BAA+B;QAC/B,IAAI,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;QAC/D,6CAA6C;QAC7C,2EAA2E;QAC3E,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC9F,IAAI,IAAI,GAAG;gBACT,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;aAChC,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,GAAG,EAAE,iBAAiB,EAAE,IAAI,QAAC,CAAC;iBAC3D,SAAS,CAAC,UAAC,KAA8C;gBACxD,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAChB,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBACtC,MAAM,CAAC;gBACT,CAAC;gBACD,KAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,uBAAsB;gBAC1D,UAAU,CAAC;oBACT,KAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,kBAAiB;oBACpD,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACzE,CAAC,EAAE,IAAI,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;QAEjD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAC3C,CAAC;QAED,IAAI;IACN,CAAC;IAED,4CAAiB,GAAjB,UAAkB,OAAO;QAAzB,iBAMC;QALC,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC;QAChC,UAAU,CAAC;YACT,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE7B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IArGS;QAAT,0DAAM,EAAE;kCAAc,+CAAU;yDAAkB;IAChC;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAI,eAAe;+CAAC;IACV;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAe,qDAAM;0DAAC;IALtC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAiByB,6DAAa;YACV,mEAAgB;YAClB,+DAAc;YAChB,kEAAc;YACrB,iDAAK;OApBX,gBAAgB,CA0G5B;IAAD,uBAAC;CAAA;AA1G4B;;;;;;;;;;;;ACpB7B,yaAAya,2DAA2D,UAAU,2kBAA2kB,sFAAsF,gJAAgJ,sFAAsF,ubAAub,WAAW,k+DAAk+D,sRAAsR,mCAAmC,uLAAuL,oCAAoC,oUAAoU,2bAA2b,4qDAA4qD,mV;;;;;;;;;;;ACAxtN,gDAAgD,2BAA2B,oBAAoB,wBAAwB,uBAAuB,yBAAyB,wBAAwB,2BAA2B,mBAAmB,+BAA+B,4BAA4B,uBAAuB,8BAA8B,iBAAiB,EAAE,wCAAwC,oBAAoB,EAAE,8BAA8B,mBAAmB,oBAAoB,mBAAmB,sBAAsB,EAAE,iBAAiB,4BAA4B,uBAAuB,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,4CAA4C,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,EAAE,uCAAuC,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,EAAE,wCAAwC,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,EAAE,8BAA8B,sBAAsB,wBAAwB,uBAAuB,qBAAqB,6CAA6C,EAAE,eAAe,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,8BAA8B,EAAE,kBAAkB,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,cAAc,8BAA8B,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,oBAAoB,oBAAoB,EAAE,gBAAgB,sBAAsB,kBAAkB,8BAA8B,uCAAuC,wBAAwB,iCAAiC,qBAAqB,0BAA0B,EAAE,qBAAqB,kCAAkC,EAAE,sBAAsB,mBAAmB,qBAAqB,EAAE,2CAA2C,6BAA6B,EAAE,qBAAqB,eAAe,kBAAkB,qBAAqB,iBAAiB,0BAA0B,qBAAqB,kBAAkB,qCAAqC,kCAAkC,qBAAqB,EAAE,gDAAgD,iEAAiE,yCAAyC,wBAAwB,uBAAuB,qBAAqB,6CAA6C,iBAAiB,EAAE,2CAA2C,iEAAiE,yCAAyC,wBAAwB,uBAAuB,qBAAqB,6CAA6C,iBAAiB,EAAE,4CAA4C,iEAAiE,yCAAyC,wBAAwB,uBAAuB,qBAAqB,6CAA6C,iBAAiB,EAAE,kCAAkC,iEAAiE,yCAAyC,wBAAwB,uBAAuB,qBAAqB,6CAA6C,iBAAiB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArmH;AACvC;AACV;AAIM;AACqB;AACW;AACb;AACM;AACR;AAES;AAShE;IAqBE,iCACU,KAAY,EACZ,cAA8B,EAC9B,mBAAwC,EACxC,aAA4B,EAC5B,cAA8B,EAC9B,MAAc,EACd,gBAAkC;QANlC,UAAK,GAAL,KAAK,CAAO;QACZ,mBAAc,GAAd,cAAc,CAAgB;QAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QAC5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QA1B5C,aAAQ,GAAC,KAAK,CAAC;QAIf,YAAO,GAAW,EAAE,CAAC;QAGrB,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QAEnB,aAAQ,GAAG,KAAK,CAAC;QAIjB,iBAAY,GAAW,MAAM,CAAC;QAC9B,cAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,gBAAgB;QACd,2BAA2B;QAC3B,wBAAmB,GAAC,KAAK,CAAC;QAWxB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE;YACxC,gBAAgB,EAAE,iBAAiB;YACnC,iBAAiB,EAAE,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf;QAAA,iBAUC;QATC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAChB,CAAC,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAAC,EAAC,WAAW,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAC,CAAC,CAAC;QAC9F,CAAC,CAAC,CAAC;QAEH,EAAE,EAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAG,eAAe,CAAC,EAAC;YAC9D,UAAU,CAAC;gBACT,KAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,SAAS,EAAC,OAAO,EAAC,CAAC,CAAC;YAC1E,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC;IACH,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAqEC;QAnEC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,WAAgB;YAC3D,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,KAAI,CAAC,YAAY,CAAC;QAC9E,CAAC,CAAC,CAAC;QAEH,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAE5E,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAwB;YAC/C,KAAI,CAAC,OAAO,GAAO,KAAK,CAAC,UAAU,QAAC,CAAC;YACrC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,GAAG,IAAG,UAAG,CAAC,QAAQ,KAAG,uEAAQ,CAAC,OAAO,EAA/B,CAA+B,CAAC,CAAC;YAEpF,UAAU,CAAC;gBAGT,gIAAgI;gBAChI,qEAAqE;gBACrE,EAAE;gBACF,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC;oBACzB,IAAI,GAAG,GAAG,KAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;oBACxD,KAAI,CAAC,aAAa,CAAC,UAAU,CAAc,EAAC,GAAG,OAAC,CAAC;yBAC9C,SAAS,CAAC,UAAC,KAAkB;wBAC5B,IAAI,CAAC;4BACH,IAAI,kBAAkB,gBACjB,KAAK,IACR,QAAQ,EAAE;oCACR,IAAI,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,IAAQ,IAAG,WAAI,CAAC,aAAa,KAAG,MAAM,EAA3B,CAA2B,CAAC;oCAClE,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,IAAQ,IAAG,WAAI,CAAC,aAAa,KAAG,OAAO,EAA5B,CAA4B,CAAC;iCACrE,GACF,CAAC;4BACF,0BAA0B;4BAC1B,EAAE,CAAC,CAAC,KAAK,CAAC;gCAAC,KAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;4BACtD,KAAI,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;4BAC3C,+EAA+E;4BAC/E,IAAI,EAAE,GAAU,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;4BAChE,IAAI,EAAE,GAAU,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC;4BAClE,EAAE,EAAC,EAAE,CAAC,MAAM,KAAG,CAAC,CAAC;gCAAC,EAAE,GAAE,GAAG,GAAC,EAAE,CAAC;4BAC7B,EAAE,EAAC,EAAE,CAAC,MAAM,KAAG,CAAC,CAAC;gCAAC,EAAE,GAAE,GAAG,GAAC,EAAE,CAAC;4BACvB,QAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,GAAG,EAAE,GAAC,GAAG,GAAC,EAAE,CAAC;wBACjE,CAAC;wBAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACjB,CAAC;wBACD,oDAAoD;wBACpD,8FAA8F;oBAChG,CAAC,CAAC,CAAC;oBACL,2BAA2B;oBAC3B,kIAAkI;oBAClI,+EAA+E;gBACjF,CAAC;YACH,CAAC,EAAE,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC;QAGH,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YACzD,6BAA6B;YAC7B,CAAC;YACD,iDAAiD;YACjD,mCAAmC;YAGnC,IAAI,gBACC,KAAI,CAAC,WAAW,EAChB,IAAI,CACR,CAAC;YACF,KAAI,CAAC,cAAc,gBAAO,IAAI,CAAC,CAAC;YAEhC,sDAAsD;YACtD,oFAAoF;QACtF,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,GAAG;IAEtB,CAAC;IAED,0DAAwB,GAAxB;QAAA,iBAiBC;QAfC,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,GAAG,IAAG,UAAG,CAAC,EAAE,IAAE,KAAI,CAAC,cAAc,CAAC,MAAM,EAAlC,CAAkC,CAAC,CAAC,IAAI,CAAC;QAChG,IAAI,CAAC,cAAc,gBAAO,IAAI,CAAC,cAAc,CAAC,CAAC;QAC/C,IAAI,UAAU,GAAiB,QAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC5E,IAAI,cAAc,GAAI,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,EAAE,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,EAAE,EAAC,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC;YAChC,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,KAAK;QACtC,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,SAAS;cACzB,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAC,EAAE,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAGhE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,uCAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAEK,0CAAQ,GAAd,UAAe,OAAO;;;;;;;wBAGlB,SAAI;wBAAa,qBAAM,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,OAAO,CAAC;;wBAAvE,GAAK,UAAU,GAAE,SAAsD,CAAC;;;;wBAExE,OAAO,CAAC,KAAK,CAAC,GAAC,CAAC,CAAC;;;;;;KAEpB;IAED,0CAAQ,GAAR,UAAS,YAAY;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAC,WAAW,EAAE,EAAC,YAAY,gBAAC,EAAC,CAAC,CAAC;QACxD,uBAAuB;IACzB,CAAC;IA5JS;QAAT,0DAAM,EAAE;kCAAW,+CAAU;6DAAoB;IAE/B;QAAlB,+DAAS,CAAC,MAAM,CAAC;kCAAI,qDAAM;sDAAC;IALlB,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAuBiB,iDAAK;YACI,+DAAc;YACT,0EAAmB;YACzB,6DAAa;YACZ,8DAAc;YACtB,sDAAM;YACI,mEAAgB;OA5BjC,uBAAuB,CAiKnC;IAAD,8BAAC;CAAA;AAjKmC;;;;;;;;;;;;ACtBpC,qNAAqN,8iDAA8iD,sPAAsP,wBAAwB,6BAA6B,yBAAyB,2DAA2D,0BAA0B,uBAAuB,2CAA2C,oFAAoF,4CAA4C,+EAA+E,4CAA4C,gRAAgR,4CAA4C,sDAAsD,2CAA2C,6TAA6T,uBAAuB,kLAAkL,s+BAAs+B,yOAAyO,wBAAwB,6BAA6B,yBAAyB,4DAA4D,0BAA0B,uCAAuC,2CAA2C,oFAAoF,4CAA4C,+EAA+E,4CAA4C,oN;;;;;;;;;;;ACA5jK,uBAAuB,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,iBAAiB,mBAAmB,EAAE,oBAAoB,4BAA4B,kBAAkB,uBAAuB,2BAA2B,EAAE,6BAA6B,kCAAkC,mCAAmC,mBAAmB,gCAAgC,EAAE,kCAAkC,qBAAqB,EAAE,+CAA+C,oBAAoB,wBAAwB,2BAA2B,uBAAuB,EAAE,gCAAgC,qBAAqB,sBAAsB,yBAAyB,2BAA2B,EAAE,oCAAoC,oBAAoB,mBAAmB,sBAAsB,EAAE,mBAAmB,4BAA4B,kBAAkB,uBAAuB,2BAA2B,EAAE,4BAA4B,kCAAkC,mCAAmC,mBAAmB,gCAAgC,EAAE,iCAAiC,qBAAqB,EAAE,8CAA8C,oBAAoB,wBAAwB,2BAA2B,uBAAuB,EAAE,+BAA+B,qBAAqB,sBAAsB,yBAAyB,2BAA2B,EAAE,eAAe,oBAAoB,mBAAmB,sBAAsB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA58C;AACY;AACvC;AACb;AAGhC,6DAA6D;AACN;AACD;AACM;AAC5D,oCAAoC;AACe;AAKK;AAOxD;IAUE,gCACU,cAA8B,EAC9B,cAA8B,EAC9B,MAAc,EACd,aAA4B,EAC5B,gBAAkC,EAClC,YAA4B;QAL5B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,iBAAY,GAAZ,YAAY,CAAgB;IAEtC,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,YAAY;YACnC,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC;QAC5C,CAAC,CAAC;QACF,wCAAwC;QACxC,0CAA0C;QAC1C,KAAK;IACP,CAAC;IACD,sDAAqB,GAArB,UAAsB,mBAAoC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAC,EAAC,KAAK,EAAE,cAAc,EAAC,CAAC,CAAC;IACtF,CAAC;IACD,6CAAY,GAAZ;QAAA,iBAQC;QAPC,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/E,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAC,GAAG,EAAC,eAAe,EAAC,CAAC;aACpD,SAAS,CAAC;YACT,KAAI,CAAC,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;YACzD,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAY,GAAZ,UAAa,iBAAmC,EAAE,mBAAoC;QAAtF,iBAuDC;QAtDC,EAAE;QACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,EAAE,CAAC,CAAC,CAAC;QAC1G,yCAAyC;QACzC,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,EAAE,GAAG,OAAO,EAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAC,KAAI,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;QAEpF,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAQ,cAC/B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IACvC,aAAa,EAAE,MAAM,kBAGhB,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,IACxC,aAAa,EAAE,OAAO,IAEzB,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAC1D,IAAI,GAAG,CAAC;QAER,IAAI,CAAC,SAAS,CAAC,CAAC;YACd,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;YAC1E,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAI,IAAI,gBAAO,IAAI,CAAC,cAAc,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC;QACvB,OAAO,IAAI,CAAC,OAAO,CAAC;QACpB,kBAAkB;QAClB,wBAAwB;QACxB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,wBAAwB;QACxB,uEAAuE;QACvE,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,EAAE;YACF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EAAC,GAAG,OAAE,IAAI,QAAC,CAAC;iBACvC,SAAS,CAAC,UAAC,KAAiB;gBAC3B,EAAE,EAAC,KAAK,CAAC,QAAQ,CAAC;oBAClB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;gBAC/E,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;gBACnF,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,OAAO,IAAI,CAAC,EAAE,CAAC;YACf,IAAI,UAAU,GAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAC,GAAG,IAAG,UAAG,CAAC,EAAE,IAAE,IAAI,CAAC,MAAM,EAAnB,CAAmB,CAAC,CAAC;YACvE,IAAI,UAAU,GAAe,EAAC,kBAAkB,EAAE,UAAU,CAAC,gBAAgB,EAAC,CAAC;YAC/E,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAC,GAAG,OAAE,IAAI,QAAE,UAAU,cAAC,CAAC;iBACpD,SAAS,CAAC,UAAC,KAAiB;gBAC3B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAqB,KAAK,CAAC,EAAI,CAAC,CAAC,CAAC;gBACxD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;YACjF,CAAC,CAAC,CAAC;QACP,CAAC;IAEH,CAAC;IA/FmC;QAAnC,+DAAS,CAAC,kGAAuB,CAAC;kCAA0B,kGAAuB;2EAAC;IAC3E;QAAT,0DAAM,EAAE;kCAAc,+CAAU;+DAAmB;IAC1C;QAAT,0DAAM,EAAE;kCAAW,+CAAU;4DAAoB;IAJvC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAY0B,8DAAc;YACd,+DAAc;YACtB,sDAAM;YACC,6DAAa;YACV,mEAAgB;YACpB,kEAAc;OAhB3B,sBAAsB,CAmGlC;IAAD,6BAAC;CAAA;AAnGkC;;;;;;;;;;;;ACvBnC,yyBAAyyB,m4B;;;;;;;;;;;ACAzyB,gCAAgC,oBAAoB,sBAAsB,qBAAqB,mBAAmB,2CAA2C,EAAE,cAAc,gBAAgB,iBAAiB,2BAA2B,oBAAoB,sBAAsB,uBAAuB,yBAAyB,sBAAsB,0BAA0B,mBAAmB,EAAE,cAAc,iBAAiB,iBAAiB,2BAA2B,oBAAoB,wBAAwB,uBAAuB,yBAAyB,sBAAsB,2BAA2B,mBAAmB,EAAE,iCAAiC,gDAAgD,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;ACAtpB;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;ACPnC,+LAA+L,iTAAiT,sBAAsB,oFAAoF,oCAAoC,6MAA6M,oBAAoB,kFAAkF,kCAAkC,guCAAguC,2BAA2B,Y;;;;;;;;;;;ACA9sE,2BAA2B,mCAAmC,gDAAgD,EAAE,OAAO,qCAAqC,oBAAoB,iBAAiB,EAAE,WAAW,gBAAgB,EAAE,kEAAkE,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhQ;AACF;AACN;AAQoB;AAC7B;AACI;AAG+B;AACtB;AACS;AAEG;AAGd;AAOrD;IASE,0BACU,gBAAkC,EAClC,aAA4B,EAC5B,sBAA8C,EAC9C,yBAAoD,EACpD,mBAAwC,EACxC,MAAc,EACd,cAA8B,EAC9B,cAA8B,EAC9B,KAAY;QARZ,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,kBAAa,GAAb,aAAa,CAAe;QAC5B,2BAAsB,GAAtB,sBAAsB,CAAwB;QAC9C,8BAAyB,GAAzB,yBAAyB,CAA2B;QACpD,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAO;QAhBtB,yBAAoB,GAAgC,EAAE,CAAC;QACvD,gCAA2B,GAAsC,EAAE,CAAC;QACpE,gCAA2B,GAAG,IAAI,CAAC,yBAAyB,CAAC,2BAA2B,CAAC;QACzF,uCAAkC,GAAG,IAAI,CAAC,yBAAyB,CAAC,mCAAmC,CAAC;QAiBxG,cAAS,GAAW,WAAW,CAAC;IAFhC,CAAC;IAQD,mCAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;QAC/F,IAAI,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;QAC7D,IAAI,CAAC,aAAa,CAAC,UAAU,CAA4C,EAAC,GAAG,EAAE,aAAa,EAAC,CAAC;aAC3F,SAAS,CAAC,UAAC,WAAW;YACrB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACxB,KAAI,CAAC,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAEhC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAiB,GAAjB,UAAkB,KAAa,EAAE,MAAc;QAA/C,iBAqBC;QAnBC,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAChF,IAAI,CAAC,aAAa,CAAC,UAAU,CAAiB,EAAC,GAAG,EAAE,gBAAgB,EAAC,CAAC;aACnE,SAAS,CAAC,UAAC,aAA6B;YACvC,KAAI,CAAC,yBAAyB,GAAG,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC;YAChE,mCAAmC;YACnC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,iBAAoC;gBACjE,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO;oBAC9B,IAAI,aAAa,GAAG,OAAO,CAAC,UAAU,CAAC;oBACvC,KAAI,CAAC,2BAA2B,CAAC,IAAI,cAChC,iBAAiB,IACpB,GAAG,EAAE,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,aAAa,EAAE,EAAC,EAAE,EAAE,iBAAiB,CAAC,MAAM,EAAC,CAAC,CAAC,IAAI,EAChH,IAAI,EAAE,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAC,EAAE,EAAE,iBAAiB,CAAC,aAAa,EAAC,CAAC,CAAC,IAAI,EACnI,UAAU,EAAE,iBAAiB,CAAC,UAAU,IACxC,CAAC;oBACH,KAAI,CAAC,2BAA2B,GAAO,KAAI,CAAC,2BAA2B,QAAC,CAAC;gBAE3E,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAA6B,GAA7B,UAA8B,IAAI;QAChC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,iBAAiB,CAAC,EAAE,EAAC,CAAC,IAAI,GAAC,CAAC,CAAC,GAAC,EAAE,CAAE,CAAC;IAC1C,CAAC;IACD,qEAA0C,GAA1C,UAA2C,yBAAoF;QAA/H,iBA6BC;QA3BC,IAAI,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnG,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,EAAC,GAAG,OAAC,CAAC;aAChD,SAAS,CAAC,UAAC,KAAS;YAEnB,4GAA4G;YAC3G,IAAI,QAAQ,GAAG,4BAA4B,GAAC,yBAAyB,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAC5F,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,KAAK,EAAC,QAAQ,CAAC,CAAC;YACjD,gCAAgC;YAChC,6CAA6C;YAC7C,kCAAkC;YAClC,+BAA+B;YAC/B,uCAAuC;YACvC,4DAA4D;YAC5D,gDAAgD;YAChD,oBAAoB;YACpB,6BAA6B;YAC7B,iBAAiB;YACjB,uCAAuC;YACvC,OAAO;YACP,QAAQ;YACR,EAAE;YACF,6DAA6D;YAC7D,EAAE;YACF,4BAA4B;YAC5B,sBAAsB;YACtB,2DAA2D;QAC7D,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAW,GAAX,UAAY,KAAa,EAAE,MAAc;QAAzC,iBA+BC;QA9BC,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAc,EAAC,GAAG,EAAE,SAAS,EAAC,CAAC;aACzD,SAAS,CAAC,UAAC,OAAO;YACjB,KAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;YACnD,2BAA2B;YAC3B,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;gBAC5B,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAK;oBAChD,IAAI,aAAa,GAAG,KAAK,CAAC,UAAU,CAAC;oBACrC,IAAI,CAAC;wBACH,KAAI,CAAC,oBAAoB,CAAC,IAAI,cACzB,MAAM,IACT,GAAG,EAAE,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,aAAa,EAAE,EAAC,EAAE,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC,IAAI,EACrG,EAAE,EAAE,MAAM,CAAC,EAAE,EACb,IAAI,EAAE,KAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAC,EAAE,EAAE,MAAM,CAAC,aAAa,EAAC,CAAC,CAAC,IAAI,EACxH,SAAS,EAAE,MAAM,CAAC,SAAS,EAC3B,UAAU,EAAE,MAAM,CAAC,WAAW,EAC9B,mBAAmB,EAAE,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,YAAY,EAAE,CAAC,EAC1E,QAAQ,EAAE,MAAM,CAAC,QAAQ,IACzB,CAAC;oBACL,CAAC;oBAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACX,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACf,+JAA+J;oBACjK,CAAC;oBACD,KAAI,CAAC,oBAAoB,GACpB,KAAI,CAAC,oBAAoB,QAC7B,CAAC;gBACJ,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,iDAAsB,GAAtB,UAAuB,IAAI;QACzB,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,EAAE,EAAC,CAAC,IAAI,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC;IACnC,CAAC;IAED,qCAAU,GAAV,UAAW,SAAiB;QAC1B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC7B,CAAC;IAED,kDAAuB,GAAvB,UAAwB,SAAc;QACpC,IAAI;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iFAA4B,CAAC,EAAC,UAAU,EAAE,SAAS,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;QACpF,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,oDAAyB,GAAzB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;IACtD,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IACvD,CAAC;IAlJS;QAAT,0DAAM,EAAE;kCAAW,+CAAU;sDAAoB;IAPvC,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAW4B,mEAAgB;YACnB,6DAAa;YACJ,iFAAsB;YACnB,uFAAyB;YAC/B,0EAAmB;YAChC,sDAAM;YACE,8DAAc;YACd,gEAAc;YACvB,iDAAK;OAlBX,gBAAgB,CA2J5B;IAAD,uBAAC;CAAA;AA3J4B;;;;;;;;;;;;AC7B7B,kK;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,81B;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACL;AAO3C;IACE,+BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QASlD,WAAM,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QACxB,WAAM,GAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QAEpB,YAAO,GAAQ;YACb,aAAa,EAAE,IAAI;SACpB;QAbC,2CAA2C;QAC3C,wBAAwB;QACxB,MAAM;IACR,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IASD,qCAAK,GAAL;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAnBU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAEoC,0DAAc;OADvC,qBAAqB,CAoBjC;IAAD,4BAAC;CAAA;AApBiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACpB;AAK/C;IAkBE,uCAAoB,OAAmB,EAAU,cAA6B;QAA1D,YAAO,GAAP,OAAO,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAC5E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC;IACxD,CAAC;IAhBQ,sBAAI,oEAAyB;aAA7B,UAA8B,aAAa;YAClD,IAAI,CAAC,aAAa,GAAE,aAAa,CAAC;QACpC,CAAC;;;OAAA;IAED,gDAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,QAAQ;YACnD,IAAI,aAAoB,CAAC;YACzB,EAAE,EAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,KAAI,CAAC,aAAa,CAAC;gBAAC,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAChF,IAAI,EAAC;gBACH,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAZQ;QAAR,2DAAK,EAAE;;;kFAEP;IANU,6BAA6B;QAHzC,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;SACxC,CAAC;yCAmB6B,wDAAU,EAAyB,8DAAc;OAlBnE,6BAA6B,CAsBzC;IAAD,oCAAC;CAAA;AAtByC;;;;;;;;;;;;;;;;;;;;;;;;;ACNoB;AAK9D;IACE,2BAAoB,KAAiB,EAAU,QAAkB;QAA7C,UAAK,GAAL,KAAK,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAC/D,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC;QACvB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,UAAC,CAAC;YAE9C,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,IAAI,aAAa,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnE,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC;gBACtB,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;oBACnB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACrB,CAAC,CAAC,WAAW,GAAG,KAAK,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC5C,aAAa,GAAG,CAAC,CAAC,CAAC;YACrB,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC;YAChD,CAAC;QAGH,CAAC,CAAC;IACJ,CAAC;IApBU,iBAAiB;QAH7B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;SACvB,CAAC;yCAE2B,wDAAU,EAAoB,sDAAQ;OADtD,iBAAiB,CAsB7B;IAAD,wBAAC;CAAA;AAtB6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACLW;AAEA;AAKzC;IAEE,mCAAwB,QAAkB;QAA1C,iBAEC;QAFuB,aAAQ,GAAR,QAAQ,CAAU;QAIjC,gCAA2B,GAAG;YAErC,OAAO,EAAE;gBACP,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,aAAa;iBACrB;gBACD,SAAS,EAAE;oBACT,KAAK,EAAE,WAAW;iBACnB;gBACD,UAAU,EAAE;oBACV,KAAK,EAAE,cAAc;iBACtB;gBACD,mBAAmB,EAAE;oBACnB,KAAK,EAAE,qBAAqB;iBAC7B;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE,QAAQ;iBAChB;aACF;YACD,OAAO,EAAE;gBACP,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,KAAK;aACd;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,EAAE;aACZ;SACF,CAAC;QACO,wCAAmC,GAAG;YAE7C,OAAO,EAAE;gBACP,GAAG,EAAE;oBACH,KAAK,EAAE,KAAK;iBACb;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,aAAa;iBACrB;gBACD,UAAU,EAAE;oBACV,KAAK,EAAE,gBAAgB;oBACvB,oBAAoB,EAAE,UAAC,IAAI;wBACzB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;wBAEzB,IAAI,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;wBACzD,MAAM,CAAC,SAAS,CAAC;oBACnB,CAAC;iBACF;aACF;YACD,OAAO,EAAE;gBACP,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,KAAK;gBACb,QAAQ,EAAE,OAAO;gBACjB,MAAM,EAAE;oBACN,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,4CAA0C,EAAC;iBACtE;aACF;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,EAAE;aACZ;SACF,CAAC;IAlEF,CAAC;IAJU,yBAAyB;QAHrC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGkC,wDAAQ;OAF/B,yBAAyB,CAwErC;IAAD,gCAAC;CAAA;AAxEqC;;;;;;;;;;;;;;;;;;;;;;;;;ACPK;AAK3C;IAGE;IAAgB,CAAC;IAHN,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,mBAAmB,CAI/B;IAAD,0BAAC;CAAA;AAJ+B;;;;;;;;;;;;ACLhC,6BAA6B,WAAW,a;;;;;;;;;;;ACAxC,mB;;;;;;;;;;;;;;;;;;;;;;;;;ACAuD;AAChB;AAQvC;IAEE,uBAAoB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;IAAI,CAAC;IAE7B,sBAAI,8BAAG;aAAP,UAAQ,OAAa;YAC5B,IAAI;YACJ,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED,gCAAQ,GAAR;IACA,CAAC;IANQ;QAAR,2DAAK,EAAE;;;4CAGP;IAPU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAG2B,sDAAM;OAFtB,aAAa,CAazB;IAAD,oBAAC;CAAA;AAbyB","file":"core-core-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {\r\n  ActivatedRoute, ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  CanActivateChild,\r\n  CanLoad,\r\n  Route,\r\n  Router,\r\n  RouterLinkActive,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport {IAuthState} from './auth/ngxs/auth.state';\r\nimport {Observable} from 'rxjs';\r\nimport {Select} from '@ngxs/store';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/take';\r\nimport { take } from 'rxjs/operators';\r\nimport {ConstantsService} from './constants.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccessGaurdService implements CanActivate, CanActivateChild, CanLoad {\r\n  constructor(\r\n    private router: Router,\r\n    private constantsService:ConstantsService,\r\n    private activatedRoute:ActivatedRoute\r\n    ) {\r\n  }\r\n\r\n  @Select() loggeduser$: Observable<IAuthState>;\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    // return true;\r\n\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      return this.shouldAllowAccess(value,route);\r\n    });\r\n  }\r\n\r\n  shouldAllowAccess(value,route:ActivatedRouteSnapshot){\r\n    if (value && value.user != null) {\r\n\r\n      let routeName = route.data[\"routeName\"];\r\n      if(!this.constantsService.isRouteAccessDenied(routeName)){\r\n        return true;\r\n      }else {\r\n        this.router.navigate(['/denied']);\r\n      }\r\n    } else {\r\n      this.router.navigate(['auth','login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n     return this.shouldAllowAccess(value, route)\r\n    });\r\n  }\r\n\r\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.loggeduser$.map((value: IAuthState) => {\r\n      if (value.user != null) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['auth', 'login']);\r\n        return false;\r\n      }\r\n    }).take(1)\r\n    /*OMG:\r\n    *What does it means for an observable to complete\r\n    * https://github.com/angular/angular/issues/9613*/\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  signup works!\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chat-preview-new-page',\r\n  templateUrl: './chat-preview-new-page.component.html',\r\n  styleUrls: ['./chat-preview-new-page.component.scss']\r\n})\r\nexport class ChatPreviewNewPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"d-flex justify-content-between bg-white align-items-center my-2 shadow-theme\\\" style=\\\"padding: 16px 36px;\\\">-->\\r\\n  <!--<h4 class=\\\"m-0\\\">Create Bot</h4>-->\\r\\n  <!--<button class=\\\"btn btn-theme-primary\\\" (click)=\\\"createBot()\\\">Create Bot</button>-->\\r\\n<!--</div>-->\\r\\n<!--<div class=\\\"shadow-theme\\\">-->\\r\\n  <!--<app-bot-config  (datachanged$)=\\\"datachanged($event)\\\" [bot]=\\\"bot\\\"></app-bot-config>-->\\r\\n<!--</div>-->\\r\\n<!--&lt;!&ndash;&ndash;&gt;-->\\r\\n\"","module.exports = \"* {\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box; }\\n\\na {\\n  text-decoration: none !important;\\n  font-size: 13px;\\n  color: black;\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #666;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.card, .card-header {\\n  border: none; }\\n\\n.nav-link {\\n  border: none;\\n  border-bottom: 1px solid transparent; }\\n\\n.nav-link:hover, .nav-link:hover {\\n    border: none; }\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {IBotConfig} from '../../../../interfaces/bot-creation';\r\nimport {IBotCreationState} from '../ngxs/buildbot.state';\r\nimport { ServerService } from '../../../server.service';\r\nimport { UtilityService } from '../../../utility.service';\r\nimport { IOverviewInfoResponse } from '../../../../interfaces/Analytics2/overview-info';\r\nimport { BotSessionsComponent } from '../../bot-detail/bot-sessions/bot-sessions.component';\r\nimport {ConstantsService} from '../../../constants.service';\r\nimport {ResetBuildBotToDefault, SaveNewBotInfo_CodeBased} from '../ngxs/buildbot.action';\r\n\r\n@Component({\r\n  selector: 'app-build-code-based-bot',\r\n  templateUrl: './build-code-based-bot.component.html',\r\n  styleUrls: ['./build-code-based-bot.component.scss']\r\n})\r\nexport class BuildCodeBasedBotComponent implements OnInit {\r\n\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  @Select(state => state.botlist.codeBasedBotList) codeBasedBotList$: Observable<IBot[]>;\r\n  @ViewChild(BotSessionsComponent) sessionChild: BotSessionsComponent;\r\n  selectedTab = \"architecture\";\r\n  bot$: Observable<IBot>;\r\n  bot_id: number;\r\n  showConfig:boolean =true;\r\n  overviewInfo$: Observable<IOverviewInfoResponse>;\r\n  selectedChannel: string = 'all';\r\n  start_date: string;\r\n  end_date: string;\r\n  selectedChannelDisplayName: string;\r\n  selectedDurationDisplayName: string = 'Monthly';\r\n  selectedSideBarTab: string = 'pipeline';\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private serverService: ServerService,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService,\r\n    private router: Router,\r\n    private store:Store\r\n\r\n  ) { }\r\n  activeTab:string = 'basic';\r\n  @Input() bot = {};\r\n\r\n  ngOnInit() {\r\n    this.activeTab = this.activatedRoute.snapshot.queryParamMap.get('tab') || 'basic'; //todo: not a robust code\r\n    this.botcreationstate$.subscribe((value)=>{\r\n      if(!value || !value.codeBased) return;\r\n      this.bot = value.codeBased;\r\n    });\r\n\r\n    this.selectedSideBarTab = this.activatedRoute.snapshot.queryParamMap.get('build-tab')||'pipeline';\r\n\r\n  }\r\n\r\n  tabClicked(activeTab:string){\r\n    this.activeTab = activeTab;\r\n    console.log(this.activeTab);\r\n  }\r\n\r\n  tabChanged(tab: string) {\r\n    this.selectedTab = tab;\r\n  }\r\n  createBot(){\r\n    let url = this.constantsService.getCreateNewBot();\r\n    this.serverService.makePostReq({url:url, body:this.bot})\r\n      .subscribe((value)=>{\r\n        console.log();\r\n\r\n        this.store.dispatch([new ResetBuildBotToDefault()]);\r\n      })\r\n  }\r\n  datachanged(data:IBot){\r\n\r\n    console.log(\"::::::::::::::::::\");\r\n    // this.store.dispatch([\r\n    //   new SaveNewBotInfo_CodeBased({data:data})\r\n    // ]);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"d-flex justify-content-between bg-white align-items-center my-2\\\" style=\\\"padding: 16px 36px;\\\">-->\\r\\n  <!--<h4 class=\\\"m-0\\\">Create Bot</h4>-->\\r\\n  <!--<button class=\\\"btn btn-theme-primary\\\" (click)=\\\"createBot()\\\">Create Bot</button>-->\\r\\n<!--</div>-->\\r\\n<!--<app-bot-config (datachanged$)=\\\"datachanged($event)\\\" [bot]=\\\"bot\\\"></app-bot-config>-->\\r\\n\\r\\n<!--&lt;!&ndash;<div class=\\\"row m-0 mt-3 p-3 bg-white\\\">&ndash;&gt;-->\\r\\n  <!--&lt;!&ndash;<div class=\\\"col-12\\\">&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash;<ul class=\\\"nav nav-tabs theme-tabbing mb-2\\\">&ndash;&gt;-->\\r\\n      <!--&lt;!&ndash;<li class=\\\"nav-item\\\" [ngClass]=\\\"{'tab-active':selectedTab==='architecture'}\\\">&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;<a class=\\\"nav-link heading\\\" [routerLink]=\\\"['.']\\\"&ndash;&gt;-->\\r\\n           <!--&lt;!&ndash;queryParamsHandling=\\\"merge\\\"&ndash;&gt;-->\\r\\n           <!--&lt;!&ndash;replaceUrl=\\\"true\\\"&ndash;&gt;-->\\r\\n           <!--&lt;!&ndash;(click)=\\\"tabChanged('architecture')\\\"&ndash;&gt;-->\\r\\n           <!--&lt;!&ndash;[queryParams]=\\\"{build:'architecture'}\\\"><strong>Bot Architecture</strong></a>&ndash;&gt;-->\\r\\n      <!--&lt;!&ndash;</li>&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash;</ul>&ndash;&gt;-->\\r\\n\\r\\n  <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n  <!--&lt;!&ndash;&lt;!&ndash; tab end &ndash;&gt;&ndash;&gt;-->\\r\\n  <!--&lt;!&ndash;&lt;!&ndash; architr start &ndash;&gt;&ndash;&gt;-->\\r\\n  <!--&lt;!&ndash;<div class=\\\"col-12 architeture-body\\\">&ndash;&gt;-->\\r\\n    <!--&lt;!&ndash;<div class=\\\"d-flex row-body bg-white mt-2\\\">&ndash;&gt;-->\\r\\n\\r\\n      <!--&lt;!&ndash;<div class=\\\"side-bar  border-right\\\">&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;<div class=\\\"sidebar-content\\\">&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;<a routerLink=\\\".\\\"&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;[queryParams]=\\\"{'build-tab':'pipeline'}\\\"&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;queryParamsHandling=\\\"merge\\\"&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='pipeline'}\\\"&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;(click)=\\\"selectedSideBarTab='pipeline'\\\"&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;class=\\\"tab-theme font-weight-bold\\\">Pipeline&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;</a>&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;<div routerLink=\\\".\\\"&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;[queryParams]=\\\"{'build-tab':'knowledge'}\\\"&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;queryParamsHandling=\\\"merge\\\"&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='knowledge'}\\\"&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;(click)=\\\"selectedSideBarTab='knowledge'\\\"&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;class=\\\"tab-theme\\\">Knowledge base&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;&lt;!&ndash;<div routerLink=\\\".\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;[queryParams]=\\\"{'build-tab':'code'}\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;queryParamsHandling=\\\"merge\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='code'}\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;(click)=\\\"selectedSideBarTab='code'\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;class=\\\"tab-theme\\\">Code&ndash;&gt;&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;&lt;!&ndash;</div>&ndash;&gt;&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;&lt;!&ndash;<div routerLink=\\\".\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;[queryParams]=\\\"{'build-tab':'integration'}\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;queryParamsHandling=\\\"merge\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;[ngClass]=\\\"{'font-weight-bold':selectedSideBarTab==='integration'}\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;(click)=\\\"selectedSideBarTab='integration'\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n               <!--&lt;!&ndash;&lt;!&ndash;class=\\\"tab-theme\\\">Integration&ndash;&gt;&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;&lt;!&ndash;</div>&ndash;&gt;&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n      <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\\r\\n      <!--&lt;!&ndash;<div class=\\\"p-2\\\" style=\\\"width: 85%; min-height: 250px\\\">&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;<app-pipeline (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='pipeline'\\\"></app-pipeline>&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;<app-knowledge-base *ngIf=\\\"selectedSideBarTab==='knowledge'\\\"></app-knowledge-base>&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;&lt;!&ndash;<div class=\\\"d-flex justify-content-center align-items-center\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;&lt;!&ndash;style=\\\"height: 100%\\\"&ndash;&gt;&ndash;&gt;-->\\r\\n             <!--&lt;!&ndash;&lt;!&ndash;*ngIf=\\\"selectedSideBarTab==='knowledge' || selectedSideBarTab==='code'\\\">&ndash;&gt;&ndash;&gt;-->\\r\\n          <!--&lt;!&ndash;&lt;!&ndash;<h4 class=\\\"text-muted\\\">Please create the bot to enable this section</h4>&ndash;&gt;&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;&lt;!&ndash;</div>&ndash;&gt;&ndash;&gt;-->\\r\\n\\r\\n        <!--&lt;!&ndash;&lt;!&ndash;<app-code-input *ngIf=\\\"selectedSideBarTab==='code'\\\"></app-code-input>&ndash;&gt;&ndash;&gt;-->\\r\\n        <!--&lt;!&ndash;&lt;!&ndash;<app-integration-option-list (datachanged$)=\\\"datachanged($event)\\\" *ngIf=\\\"selectedSideBarTab==='integration'\\\"></app-integration-option-list>&ndash;&gt;&ndash;&gt;-->\\r\\n      <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\\r\\n    <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\\r\\n  <!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\\r\\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n\"","module.exports = \"* {\\n  box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  -webkit-box-sizing: border-box; }\\n\\na {\\n  text-decoration: none !important;\\n  font-size: 13px;\\n  color: black;\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #666;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.card, .card-header {\\n  border: none; }\\n\\n.nav-link {\\n  border: none;\\n  border-bottom: 1px solid transparent; }\\n\\n.nav-link:hover, .nav-link:hover {\\n    border: none; }\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {BotSessionsComponent} from '../../bot-detail/bot-sessions/bot-sessions.component';\r\nimport {SaveNewBotInfo_CodeBased, SaveNewBotInfo_PipelineBased} from '../ngxs/buildbot.action';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {UtilityService} from '../../../utility.service';\r\nimport {ServerService} from '../../../server.service';\r\nimport {Observable} from 'rxjs';\r\nimport {IBotCreationState} from '../ngxs/buildbot.state';\r\nimport {IOverviewInfoResponse} from '../../../../interfaces/Analytics2/overview-info';\r\nimport {ConstantsService} from '../../../constants.service';\r\n\r\n@Component({\r\n  selector: 'app-build-pipeline-based-bot',\r\n  templateUrl: './build-pipeline-based-bot.component.html',\r\n  styleUrls: ['./build-pipeline-based-bot.component.scss']\r\n})\r\nexport class BuildPipelineBasedBotComponent implements OnInit {\r\n\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  // @Select(state => state.botlist.codeBasedBotList) codeBasedBotList$: Observable<IBot[]>;\r\n  @ViewChild(BotSessionsComponent) sessionChild: BotSessionsComponent;\r\n  selectedTab = \"architecture\";\r\n  bot$: Observable<IBot>;\r\n  bot_id: number;\r\n  showConfig:boolean =true;\r\n  overviewInfo$: Observable<IOverviewInfoResponse>;\r\n  selectedChannel: string = 'all';\r\n  start_date: string;\r\n  end_date: string;\r\n  selectedChannelDisplayName: string;\r\n  selectedDurationDisplayName: string = 'Monthly';\r\n  selectedSideBarTab: string = 'pipeline';\r\n\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private serverService: ServerService,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService,\r\n    private store:Store\r\n\r\n  ) { }\r\n  activeTab:string = 'basic';\r\n  @Input() bot = {};\r\n\r\n  ngOnInit() {\r\n    // ;\r\n    this.activeTab = this.activatedRoute.snapshot.queryParamMap.get('tab') || 'basic'; //todo: not a robust code\r\n    this.botcreationstate$.subscribe((value)=>{\r\n      // console.log('test');\r\n      if(!value || !value.pipeLineBased) return;\r\n      this.bot = value.pipeLineBased;\r\n    });\r\n\r\n    this.selectedSideBarTab = this.activatedRoute.snapshot.queryParamMap.get('build-tab')||'pipeline';\r\n\r\n  }\r\n\r\n  tabClicked(activeTab:string){\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  tabChanged(tab: string) {\r\n    this.selectedTab = tab;\r\n  }\r\n  createBot(){\r\n    let url = this.constantsService.getCreateNewBot();\r\n    this.serverService.makePostReq({url:url, body:this.bot})\r\n      .subscribe((value)=>{\r\n      })\r\n  }\r\n  datachanged(data:IBot){\r\n    // ;\r\n    this.store.dispatch([\r\n      new SaveNewBotInfo_PipelineBased({data:data})\r\n    ]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"my-3\\\">-->\\r\\n  <!--<router-outlet class=\\\"my-5\\\"></router-outlet>-->\\r\\n<!--</div>-->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"my-3\\\">\\r\\n  <div class=\\\"d-flex bg-white align-items-center my-2 shadow-theme\\\" style=\\\"padding: 16px 36px;\\\">\\r\\n    <h4 class=\\\"m-0\\\">Create Bot </h4>\\r\\n    <button class=\\\"btn btn-theme-secondary-outline ml-auto mr-1\\\" (click)=\\\"navigateToDashboard()\\\">Cancel</button>\\r\\n    <button class=\\\"btn btn-theme-primary\\\" (click)=\\\"createBot()\\\">Create Bot</button>\\r\\n  </div>\\r\\n  <div class=\\\"shadow-theme p-2 bg-white\\\">\\r\\n    <app-bot-config  (datachanged$)=\\\"datachanged($event)\\\" [bot]=\\\"bot\\\"></app-bot-config>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".card, .card-header {\\n  border: none; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ResetBuildBotToDefault, SaveNewBotInfo_CodeBased, SaveNewBotInfo_PipelineBased} from './ngxs/buildbot.action';\r\nimport {IBot} from '../interfaces/IBot';\r\nimport {IBotCreationState} from './ngxs/buildbot.state';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ServerService} from '../../server.service';\r\nimport {ConstantsService} from '../../constants.service';\r\nimport {ActivatedRoute, Route, Router} from '@angular/router';\r\nimport {UtilityService} from '../../utility.service';\r\nimport {AddNewBotInAllBotList, SetAllBotListAction} from '../view-bots/ngxs/view-bot.action';\r\nimport {EBotType} from '../view-bots/view-bots.component';\r\n\r\n@Component({\r\n  selector: 'app-buildbot-wrapper',\r\n  templateUrl: './buildbot-wrapper.component.html',\r\n  styleUrls: ['./buildbot-wrapper.component.scss']\r\n})\r\nexport class BuildbotWrapperComponent implements OnInit {\r\n\r\n  @Select() botcreationstate$: Observable<IBotCreationState>;\r\n  @Select(state => state.botlist.codeBasedBotList) codeBasedBotList$: Observable<IBot[]>;\r\n  bot: IBot = {};\r\n  bot_type:string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private serverService: ServerService,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService,\r\n    private store: Store\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bot_type = this.activatedRoute.snapshot.queryParamMap.get('bot_type');\r\n    this.botcreationstate$.subscribe((value) => {\r\n      /*TODO: this is a  hack to avoid loops*/\r\n      if (!value) return;\r\n      if(this.bot_type===EBotType.chatbot && value.codeBased){\r\n        this.bot = value.codeBased;\r\n      }else if(this.bot_type===EBotType.intelligent && value.pipeLineBased){\r\n        this.bot = value.pipeLineBased;\r\n      }\r\n    });\r\n  }\r\n\r\n  createBot() {\r\n\r\n    let bot:IBot = this.utilityService.performFormValidationBeforeSaving(this.bot);\r\n    if(!bot) return;\r\n    let url = this.constantsService.getCreateNewBot();\r\n    if(!bot){\r\n      console.error(\"there is no bot type in url\");\r\n    }\r\n\r\n    bot.bot_type = this.bot_type;\r\n    if(!this.bot.logo){\r\n      this.bot.logo = \"https://imibot-dev.s3.amazonaws.com/default/defaultbotlogo.png\";\r\n    }\r\n    this.serverService.makePostReq({url: url, body: bot})\r\n      .subscribe((createdBot: IBot) => {\r\n        this.store.dispatch([\r\n          new AddNewBotInAllBotList({bot: createdBot}),\r\n          new ResetBuildBotToDefault()\r\n        ]).subscribe(() => {\r\n          this.router.navigate([`/core/botdetail/${this.bot_type}/${createdBot.id}`]);\r\n        });\r\n        this.utilityService.showSuccessToaster('Bot Created');\r\n        console.log(\"test\");\r\n      });\r\n  }\r\n\r\n\r\n  datachanged(data: IBot) {\r\n    let bot_type = this.activatedRoute.snapshot.queryParamMap.get('bot_type');\r\n    if(bot_type === EBotType.chatbot){\r\n      this.store.dispatch([\r\n        new SaveNewBotInfo_CodeBased({data: data})\r\n      ]);\r\n    }else {\r\n      this.store.dispatch([\r\n        new SaveNewBotInfo_PipelineBased({data: data})\r\n      ]);\r\n    }\r\n  }\r\n\r\n  navigateToDashboard(){\r\n    this.router.navigate([\"\"]);\r\n  }\r\n}\r\n","module.exports = \"<!--<div class=\\\"shadow-theme\\\">-->\\r\\n<!--<app-header></app-header>-->\\r\\n<!--</div>-->\\r\\n<!---->\\r\\n\\r\\n<!--<div class=\\\"container\\\">-->\\r\\n<!--<div class=\\\"row\\\">-->\\r\\n<!--<div class=\\\"col-12\\\">-->\\r\\n<!--<router-outlet></router-outlet>-->\\r\\n<!--</div>-->\\r\\n<!--</div>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<!--<progressbar [value]=\\\"55\\\" [animate]=\\\"true\\\"></progressbar>-->\\r\\n\\r\\n<div class=\\\"grid-container \\\">\\r\\n  <app-header class=\\\"grid-header\\\"></app-header>\\r\\n  <div class=\\\"grid-body \\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"mt-2\\\">\\r\\n  <app-footer></app-footer>\\r\\n</div>\\r\\n\\r\\n<!---->\\r\\n\"","module.exports = \".grid-container {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 1% (1fr)[12] 1%;\\n      grid-template-columns: 1% repeat(12, 1fr) 1%;\\n  -ms-grid-rows: 56px minmax(80vh, 1fr);\\n      grid-template-rows: 56px minmax(80vh, 1fr); }\\n\\n.grid-header {\\n  grid-column: 1 / -1; }\\n\\n.grid-body {\\n  -ms-grid-row: 2;\\n  -ms-grid-row-span: 1;\\n  grid-row: 2 / 3;\\n  grid-column: 2/-2; }\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router, RoutesRecognized} from '@angular/router';\r\nimport {IProfilePermission} from '../../interfaces/profile-action-permission';\r\nimport {SetMasterProfilePermissions} from '../ngxs/app.action';\r\nimport {ServerService} from '../server.service';\r\nimport {ConstantsService} from '../constants.service';\r\nimport {Store} from '@ngxs/store';\r\n\r\n@Component({\r\n  selector: 'app-core-wrapper',\r\n  templateUrl: './core-wrapper.component.html',\r\n  styleUrls: ['./core-wrapper.component.scss']\r\n})\r\nexport class CoreWrapperComponent implements OnInit {\r\n\r\n  isFullScreenPreview: boolean;\r\n  constructor(\r\n    private router: Router,\r\n    private serverService:ServerService,\r\n    private store:Store,\r\n    private constantsService:ConstantsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.router.events.subscribe((data) => {\r\n      if (data instanceof RoutesRecognized) {\r\n        this.isFullScreenPreview = data.state.root.firstChild.data.isFullScreenPreview;\r\n      }\r\n    });\r\n    let allActionsUrl = this.constantsService.getAllActionsUrl();\r\n    this.serverService.makeGetReq<{ meta: any, objects: IProfilePermission[] }>({url: allActionsUrl})\r\n      .subscribe((value:{objects:IProfilePermission[]}) => {\r\n        this.store.dispatch([\r\n          new SetMasterProfilePermissions({masterProfilePermissions: value.objects})\r\n        ]);\r\n        this.constantsService.setPermissionsDeniedMap(value.objects)\r\n      });\r\n  }\r\n\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {CoreWrapperComponent} from './core-wrapper.component';\r\nimport {CreateCustomnerComponent} from './customner/create-customner/create-customner.component';\r\nimport {EnterpriseprofileComponent} from './enterpriseprofile/enterpriseprofile.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ReportsComponent} from './reports/reports.component';\r\nimport {ReportDetailsComponent} from './reports/report-details/report-details.component';\r\nimport {DocumentationComponent} from './documentation/documentation.component';\r\nimport {BuildbotWrapperComponent} from './buildbot/buildbot-wrapper.component';\r\nimport {BuildCodeBasedBotComponent} from './buildbot/build-code-based-bot/build-code-based-bot.component';\r\nimport {BuildPipelineBasedBotComponent} from './buildbot/build-pipeline-based-bot/build-pipeline-based-bot.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {RouterFragmentActiveDirective} from '../router-fragment-active.directive';\r\nimport {SignupComponent} from '../auth/signup/signup.component';\r\n// import {BotWelcomeComponent} from '../chat/bot-welcome-panel/bot-welcome.component';\r\nimport {PipelineTestComponent} from '../pipeline-test/pipeline-test.component';\r\n// import {ChatWindowComponent} from '../chat/rooms-and-convo-panel/chat-window.component';\r\n// import {ChatWrapperComponent} from '../chat/chat-wrapper.component';\r\n// import {ChatMessageComponent} from '../chat/rooms-and-convo-panel/chat-message-list/chat-message/chat-message.component';\r\n// import {ChatListComponent} from '../chat/rooms-and-convo-panel/chat-room-list/chat-list.component';\r\n// import {ChatItemComponent} from '../chat/rooms-and-convo-panel/chat-room-list/chat-item/chat-item.component';\r\n// import {ChatroomComponent} from '../chat/rooms-and-convo-panel/chat-message-list/chatroom.component';\r\nimport {ScrollerDirective} from '../scroller.directive';\r\nimport {ReportDisplayComponent} from './reports/report-details/report-display/report-display.component';\r\nimport {ReportControlsComponent} from './reports/report-details/report-controls/report-controls.component';\r\nimport {TestComponent} from '../test/test.component';\r\nimport {ChatPreviewNewPageComponent} from '../chat/chat-preview-new-page/chat-preview-new-page.component';\r\nimport {FooterComponent} from '../footer/footer.component';\r\nimport {FormsModule} from '@angular/forms';\r\n// import {DragAndDropModule} from 'angular-draggable-droppable';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {AimService} from '../aim.service';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '../shared.module';\r\nimport {ViewCustomnerComponent} from './customner/view-customner/view-customner.component';\r\nimport {AuthGaurdService} from '../auth-gaurd.service';\r\nimport {EBotType} from './view-bots/view-bots.component';\r\n// import {CardCarouselComponent} from '../chat/carousel/card-carousel/card-carousel.component';\r\n// import {QuickReplyComponent} from '../chat/carousel/quick-reply/quick-reply.component';\r\nimport {AccessGaurdService} from '../access-gaurd.service';\r\nimport {ERouteNames} from '../constants.service';\r\n// import {HighlightDirective} from '../readonly-selected-permission.directive';\r\n// import { IntegrationNameFormatterPipe } from './buildbot/build-code-based-bot/architecture/integration/integration-option-list/integration-name-formatter.pipe';\r\n\r\nconst routes: Route[] = [\r\n  {\r\n\r\n    path: '',\r\n    component: CoreWrapperComponent,\r\n    canActivate:[AuthGaurdService],\r\n    canActivateChild:[AuthGaurdService,AccessGaurdService],\r\n    children: [\r\n      {\r\n        path: 'viewbots', loadChildren: './view-bots/view-bots.module#ViewBotsModule',canLoad:[AuthGaurdService]\r\n      },\r\n      {\r\n        path: 'botdetail', loadChildren: './bot-detail/bot-detail.module#BotDetailModule', canLoad:[AuthGaurdService]\r\n      },\r\n      {\r\n        path: 'analytics2', loadChildren: './analysis2/analysis2.module#Analysis2Module', canLoad:[AuthGaurdService]\r\n      },\r\n      {path: 'customner', component: ViewCustomnerComponent, data:{routeName:ERouteNames.customner}, canActivate:[]},\r\n      {path: 'customner/create', component: CreateCustomnerComponent, canActivate:[]},\r\n      {path: 'enterpriseprofile', component: EnterpriseprofileComponent, data:{routeName:ERouteNames.enterprise_profile}, canActivate:[]},\r\n      {path: 'profile', component: ProfileComponent},\r\n      {path: 'reports', component: ReportsComponent, data:{routeName:ERouteNames.report}},\r\n      {path: 'reports/edit/:_id', component: ReportDetailsComponent, data:{routeName:ERouteNames.report}},\r\n      {path: 'reports/create', component: ReportDetailsComponent, data:{name:ERouteNames.create_report}},\r\n      {path: 'documentation', component: DocumentationComponent, canActivate:[]},\r\n      {\r\n        path: 'buildbot', component: BuildbotWrapperComponent, children:\r\n          [\r\n            {path: EBotType.chatbot, component: BuildCodeBasedBotComponent, data: {buildBot: EBotType.chatbot}},\r\n            {path: 'intelligent', component: BuildPipelineBasedBotComponent, data: {buildBot: 'pipeLineBased'}},\r\n          ]\r\n      },\r\n    ],\r\n  },\r\n\r\n  // {path: 'preview/:id', component: ChatWrapperComponent, data: {isFullScreenPreview: true}, canActivate:[AuthGaurdService]},\r\n  {path: '', redirectTo: `core/viewbots/${EBotType.chatbot}`, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    BuildCodeBasedBotComponent,\r\n    BuildPipelineBasedBotComponent,\r\n    RouterFragmentActiveDirective,\r\n    DocumentationComponent,\r\n    ViewCustomnerComponent,\r\n    CreateCustomnerComponent,\r\n    ProfileComponent,\r\n    EnterpriseprofileComponent,\r\n    ReportsComponent,\r\n    CoreWrapperComponent,\r\n    BuildbotWrapperComponent,\r\n    SignupComponent,\r\n    PipelineTestComponent,\r\n\r\n    ScrollerDirective,\r\n    ReportDetailsComponent,\r\n    // BotWelcomeComponent,\r\n    ReportDisplayComponent,\r\n    ReportControlsComponent,\r\n    TestComponent,\r\n    ChatPreviewNewPageComponent,\r\n    FooterComponent,\r\n    // DisplayNameForKeyIntegrationPipe,\r\n\r\n    /*added after lazy loading*/\r\n\r\n    // HighlightDirective\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes), // RouterModule.forRoot(routes, { useHash: true }), if this is your app.module\r\n    FormsModule,\r\n    // DragAndDropModule.forRoot(),\r\n    HttpClientModule,\r\n    SharedModule,\r\n\r\n  ],\r\n  providers: [AimService]\r\n})\r\nexport class CoreModule {\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12 d-flex justify-content-between\\\" >\\r\\n    <div class=\\\"btn btn-primary cursor-pointer\\\">Go Back</div>\\r\\n    <div class=\\\"right\\\">\\r\\n      <span>Concept Key</span>\\r\\n      <input type=\\\"text\\\">\\r\\n      <span>Concept Type</span>\\r\\n      <div class=\\\"btn-group\\\"  dropdown>\\r\\n        <button class=\\\"btn btn-primary\\\" dropdownToggle> {{conceptType}}</button>\\r\\n        <ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">\\r\\n          <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"conceptTypeChanged('single')\\\" >single match</a></li>\\r\\n          <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"conceptTypeChanged('double')\\\" >double match</a></li>\\r\\n          <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"conceptTypeChanged('metadata')\\\" >with metadata</a></li>\\r\\n          <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"conceptTypeChanged('database')\\\" >database</a></li>\\r\\n          <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" (click)=\\\"conceptTypeChanged('regex')\\\" >regex</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-sucess\\\">Create</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12\\\" *ngIf=\\\"conceptType==='regex'\\\">\\r\\n    <textarea name=\\\"\\\"  id=\\\"\\\" cols=\\\"30\\\" rows=\\\"10\\\" style=\\\"width: 100%;\\\"></textarea>\\r\\n  </div>\\r\\n  <div class=\\\"col-12\\\"  *ngIf=\\\"conceptType==='single' || conceptType==='double' || conceptType==='metadata'\\\">\\r\\n    <app-code-editor></app-code-editor>\\r\\n  </div>\\r\\n</div>\\r\\n<!---->\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-customner',\r\n  templateUrl: './create-customner.component.html',\r\n  styleUrls: ['./create-customner.component.scss']\r\n})\r\nexport class CreateCustomnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  conceptType:string=\"single\";\r\n  ngOnInit() {\r\n  }\r\n\r\n  conceptTypeChanged(newConceptType:string){\r\n    this.conceptType = newConceptType;\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row m-0 mt-3 p-1 bg-white\\\">\\r\\n  <div class=\\\"col-12 mt-4\\\">\\r\\n    <h4 > </h4>\\r\\n  </div>\\r\\n  <div class=\\\"col-12\\\" style=\\\"min-height: 450px\\\">\\r\\n    <app-knowledge-base\\r\\n      class=\\\"h-100\\\"\\r\\n      [custumNerDataForSmartTable]=\\\"custumNerDataForSmartTable\\\"\\r\\n      (updateOrSaveParentNers$)=\\\"updateOrSaveCustomNer($event)\\\"\\r\\n      (pageChanged$)=\\\"pageChanged$($event)\\\"\\r\\n      [totalRecords]=\\\"totalRecords\\\"\\r\\n      [recordsPerPage]=\\\"recordsPerPage\\\"\\r\\n      (deleteNer$)=\\\"deleteNer($event)\\\"\\r\\n      [currentPageNumber]=\\\"currentPageNumber\\\"\\r\\n      [settings]=\\\"settings\\\"\\r\\n    ></app-knowledge-base>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"app-knowledge-base {\\n  display: block; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ServerService} from '../../../server.service';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ConstantsService} from '../../../constants.service';\r\nimport {Observable} from 'rxjs';\r\nimport {IUser} from '../../interfaces/user';\r\nimport {ICustomNerItem} from '../../../../interfaces/custom-ners';\r\nimport {IHeaderData} from '../../../../interfaces/header-data';\r\nimport {IAppState} from '../../../ngxs/app.state';\r\nimport {SetEnterpriseNerData} from '../../../ngxs/app.action';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UtilityService} from '../../../utility.service';\r\nimport {EBotType} from '../../view-bots/view-bots.component';\r\nimport {KnowledgeBaseComponent} from '../../buildbot/build-code-based-bot/architecture/knowledge-base/knowledge-base.component';\r\n\r\n@Component({\r\n  selector: 'app-view-customner',\r\n  templateUrl: './view-customner.component.html',\r\n  styleUrls: ['./view-customner.component.scss']\r\n})\r\nexport class ViewCustomnerComponent implements OnInit {\r\n\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  @Select() app$: Observable<IAppState>;\r\n  custumNerDataForSmartTable: ICustomNerItem[];\r\n  recordsPerPage:number=15;\r\n  settings = {\r\n    columns: {\r\n    key: {\r\n      title: 'Concept Key'\r\n    },\r\n    ner_type: {\r\n      title: 'Type'\r\n    },\r\n    // conflict_policy: {\r\n    //   title: 'Override Policy'\r\n    // },\r\n  },\r\n  pager: {\r\n    display: false\r\n  },\r\n  actions: {\r\n    add: false,\r\n    edit: false,\r\n    delete: false\r\n  },\r\n  rowClassFunction: (row) => {\r\n    if (row.data.highlight) {\r\n      return 'hightlight-created-row';\r\n      //   return 'score negative'; // Color from row with negative in score\r\n      // } else if (row.data.type === '(+)') {\r\n      //   return 'score positive';\r\n    }\r\n    return '';\r\n  }};\r\n  totalRecords: number = 10;\r\n  currentPageNumber = 1;\r\n  @ViewChild(KnowledgeBaseComponent) knowledgeBaseComponent: KnowledgeBaseComponent;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private utilityService: UtilityService,\r\n    private constantsService: ConstantsService) {\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.currentPageNumber = Number(this.activatedRoute.snapshot.queryParamMap.get('page') || '1');\r\n    this.app$.subscribe((value) => {\r\n      this.custumNerDataForSmartTable = value.enterpriseNerData;\r\n    });\r\n    this.recordsPerPage = this.utilityService.getSmartTableRowCountPerPageByViewportHeight();\r\n    this.fetchNers(this.recordsPerPage, this.currentPageNumber - 1);\r\n  }\r\n\r\n  pageChanged$(currentPageNumber) {\r\n    this.router.navigate(['.'], {queryParams: {page: currentPageNumber}, relativeTo: this.activatedRoute});\r\n    this.currentPageNumber = currentPageNumber;\r\n    this.fetchNers(this.recordsPerPage, currentPageNumber - 1);\r\n  }\r\n\r\n  fetchNers(limit: number = 10, offset: number = 0) {\r\n    let getEnterpriseNerUrl = this.constantsService.getEnterpriseNer(limit, (offset * this.recordsPerPage));\r\n    this.serverService.makeGetReq<{ meta: { total_count: number }, objects: ICustomNerItem[] }>({url: getEnterpriseNerUrl})\r\n      .subscribe((value) => {\r\n        this.totalRecords = value.meta.total_count;\r\n        this.custumNerDataForSmartTable = value.objects;\r\n        this.store.dispatch([\r\n          new SetEnterpriseNerData({enterpriseNerData: this.custumNerDataForSmartTable})\r\n        ]);\r\n\r\n        /*For selected ner*/\r\n        let selectedNerId = this.activatedRoute.snapshot.queryParamMap.get('ner_id');\r\n        if (!selectedNerId) return;\r\n        let getNerByIdUrl = this.constantsService.getCustomNerById(selectedNerId);\r\n        let doesSelectedNerExistsIn_custumNerDataForSmartTable =\r\n          this.custumNerDataForSmartTable.find(item => item.id === Number(selectedNerId));\r\n        if (doesSelectedNerExistsIn_custumNerDataForSmartTable) return;\r\n        this.serverService.makeGetReq({url: getNerByIdUrl})\r\n          .subscribe((values: { objects: ICustomNerItem[] }) => {\r\n            if (values.objects.length > 0) {\r\n              this.custumNerDataForSmartTable.push(values.objects[0]);\r\n              this.custumNerDataForSmartTable = [...this.custumNerDataForSmartTable];\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  updateOrSaveCustomNer(selectedOrNewRowData: ICustomNerItem) {\r\n\r\n    this.serverService.updateOrSaveCustomNer(selectedOrNewRowData)\r\n      .subscribe((value: ICustomNerItem) => {\r\n        // (<any>this.custumNerDataForSmartTable).push({...value,highlight:true});\r\n        let indexToUpdate;\r\n        if (value && value.id)\r\n          indexToUpdate = this.custumNerDataForSmartTable.findIndex((custumNerDataForSmartTableItem) => custumNerDataForSmartTableItem.id === value.id);\r\n        if (indexToUpdate >= 0)\r\n          this.custumNerDataForSmartTable[indexToUpdate] = {...this.custumNerDataForSmartTable[indexToUpdate], ...value, highlight: true};\r\n        else {\r\n          this.custumNerDataForSmartTable.push({...value, highlight: true});\r\n        }\r\n        this.addQueryParamsInCurrentRoute({ner_id: value.id});\r\n        this.utilityService.showSuccessToaster('Saved customner');\r\n      });\r\n  }\r\n\r\n  addQueryParamsInCurrentRoute(queryParamObj: object) {\r\n    this.router.navigate(['.'], {\r\n      queryParams: queryParamObj,\r\n      relativeTo: this.activatedRoute,\r\n      // skipLocationChange: true,\r\n      // queryParamsHandling:\"merge\"\r\n    });\r\n  }\r\n\r\n  deleteNer(ner_id: number) {\r\n    this.serverService.deleteNer(ner_id)\r\n      .subscribe(() => {\r\n\r\n        this.utilityService.showSuccessToaster('Deleted customner');\r\n        this.router.navigate([`/core/customner`]);\r\n        let indexToBeDeleted = this.custumNerDataForSmartTable.findIndex((nerObj) => nerObj.id == ner_id);\r\n        if (indexToBeDeleted !== -1) this.custumNerDataForSmartTable.splice(indexToBeDeleted, 1);\r\n        this.knowledgeBaseComponent.showNerSmartTable();\r\n        this.custumNerDataForSmartTable = [...this.custumNerDataForSmartTable];\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"row pt-4\\\">-->\\r\\n  <!--<div class=\\\"col-4\\\">-->\\r\\n\\r\\n    <!--<div class=\\\"card p-3 shadow-theme\\\">-->\\r\\n      <!--<div class=\\\"card-header\\\">-->\\r\\n        <!--<h4>User Guide</h4>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\"d-flex justify-content-center\\\"><img class=\\\"card-img-top\\\"-->\\r\\n                                                      <!--src=\\\"https://imibot.ai/assets/img/userguide-200x200.png\\\"-->\\r\\n                                                      <!--alt=\\\"Card image cap\\\"></div>-->\\r\\n      <!--<div class=\\\"card-body d-flex justify-content-center flex-wrap\\\">-->\\r\\n        <!--<h5 class=\\\"card-title\\\">User Guide</h5>-->\\r\\n        <!--<p class=\\\"card-text  text-center\\\">An all-in-one Guide to understand basic Bot building</p>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\"card-footer  d-flex justify-content-center\\\">-->\\r\\n        <!--<button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-download\\\"></i>Download</button>-->\\r\\n\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"col-4\\\">-->\\r\\n\\r\\n    <!--<div class=\\\"card p-3 shadow-theme\\\">-->\\r\\n      <!--<div class=\\\"\\\">-->\\r\\n        <!--<h4>User Guide</h4>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\"d-flex justify-content-center\\\"><img class=\\\"card-img-top\\\"-->\\r\\n                                                      <!--src=\\\"https://dev.imibot.ai/assets/img/apilinks-200x200.png\\\"-->\\r\\n                                                      <!--alt=\\\"Card image cap\\\"></div>-->\\r\\n      <!--<div class=\\\"d-flex justify-content-center flex-wrap\\\">-->\\r\\n        <!--<h5 class=\\\"\\\">SWAGGER API</h5>-->\\r\\n        <!--<p class=\\\"text-center\\\">Documentation for all accessible APIs on the IMIBot Framework</p>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\" d-flex justify-content-between\\\">-->\\r\\n        <!--<button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>App Server</button>-->\\r\\n        <!--<button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>Intelligence</button>-->\\r\\n\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n\\r\\n  <!--</div>-->\\r\\n  <!--<div class=\\\"grid-card\\\">-->\\r\\n\\r\\n    <!--<div class=\\\" p-3 shadow-theme\\\">-->\\r\\n      <!--<div class=\\\"\\\">-->\\r\\n        <!--<h4>User Guide</h4>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\"d-flex justify-content-center\\\"><img class=\\\"\\\"-->\\r\\n                                                      <!--src=\\\"https://dev.imibot.ai/assets/img/tutorials-200x200.png\\\"-->\\r\\n                                                      <!--alt=\\\"Card image cap\\\"></div>-->\\r\\n      <!--<div class=\\\"d-flex justify-content-center flex-wrap\\\">-->\\r\\n        <!--<h5 class=\\\"\\\">User Guide</h5>-->\\r\\n        <!--<p class=\\\"text-center\\\">An all-in-one Guide to understand basic Bot building</p>-->\\r\\n      <!--</div>-->\\r\\n      <!--<div class=\\\" d-flex justify-content-center\\\">-->\\r\\n        <!--<button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>Url</button>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n\\r\\n  <!--</div>-->\\r\\n\\r\\n\\r\\n<!--</div>-->\\r\\n\\r\\n\\r\\n<div class=\\\"grid-documentation\\\">\\r\\n  <!--1st card starts-->\\r\\n  <div class=\\\"grid-card shadow-theme \\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <h4>USER GUIDE</h4>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <img src=\\\"https://imibot.ai/assets/img/userguide-200x200.png\\\"\\r\\n           alt=\\\"Card image cap\\\"></div>\\r\\n    <div class=\\\"d-flex justify-content-center flex-wrap align-content-center\\\">\\r\\n      <h5 class=\\\"\\\">User Guide</h5>\\r\\n      <p class=\\\"text-center\\\">An all-in-one Guide to understand basic Bot building</p>\\r\\n    </div>\\r\\n    <div class=\\\" d-flex justify-content-center\\\">\\r\\n      <button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-download\\\"></i>Download</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <!--1st card ends-->\\r\\n  <!--2nd card starts-->\\r\\n\\r\\n  <div class=\\\"grid-card shadow-theme \\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <h4>API DOCUMENTATION</h4>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <img src=\\\"https://dev.imibot.ai/assets/img/apilinks-200x200.png\\\"\\r\\n           alt=\\\"Card image cap\\\"></div>\\r\\n    <div class=\\\"d-flex justify-content-center flex-wrap align-content-center\\\">\\r\\n      <h5 class=\\\"\\\">SWAGGER API</h5>\\r\\n      <p class=\\\"text-center\\\">Documentation for all accessible APIs on the IMIBot Framework</p>\\r\\n    </div>\\r\\n    <div class=\\\" d-flex justify-content-around\\\">\\r\\n      <button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>App Server</button>\\r\\n      <button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>Intelligence</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!--2nd card ends-->\\r\\n\\r\\n  <!--3rd card starts-->\\r\\n  <div class=\\\"grid-card shadow-theme \\\">\\r\\n    <div class=\\\"header\\\">\\r\\n      <h4>BOT TUTORIALS</h4>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\"><img\\r\\n      src=\\\"https://dev.imibot.ai/assets/img/tutorials-200x200.png\\\"\\r\\n      alt=\\\"Card image cap\\\"></div>\\r\\n    <div class=\\\"d-flex justify-content-center flex-wrap align-content-center\\\">\\r\\n      <h5 class=\\\"\\\">Tutorials</h5>\\r\\n      <p class=\\\"text-center\\\">Documents and Guides to get you started with building BOTs!</p>\\r\\n    </div>\\r\\n    <div class=\\\"d-flex justify-content-center\\\">\\r\\n      <button class=\\\"btn btn-theme-success\\\"><i class=\\\"fa fa-link\\\"></i>Url</button>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!--3rd card ends-->\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".grid-documentation {\\n  margin-top: 20px;\\n  display: -ms-grid;\\n  display: grid;\\n  height: 80vh;\\n  -ms-grid-columns: 1fr 1fr 1fr;\\n      grid-template-columns: 1fr 1fr 1fr;\\n  grid-column-gap: 20px; }\\n  .grid-documentation .grid-card {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-rows: 1.5fr 4fr 2fr 1fr;\\n        grid-template-rows: 1.5fr 4fr 2fr 1fr;\\n    background-color: white; }\\n  .grid-documentation .grid-card .header {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center; }\\n  .fa {\\n  padding-right: 10px; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html',\r\n  styleUrls: ['./documentation.component.scss']\r\n})\r\nexport class DocumentationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<header class=\\\"row mt-3 pb-3 bg-white profile-row shadow-theme\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n\\r\\n      <div\\r\\n        class=\\\"card-header pt-4 mb-4 pb-0 bg-white d-flex justify-content-between justify-content-center align-items-center\\\">\\r\\n        <h4>Enterprise Profile</h4>\\r\\n        <div>\\r\\n          <button class=\\\"btn-theme-primary\\\" (click)=\\\"updateEnterpriseProfile()\\\">Update</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</header>\\r\\n<div *ngIf=\\\"(loggeduserenterpriseinfoMap$|async) as loggeduserenterpriseinfo\\\">\\r\\n\\r\\n  <section class=\\\"row basic-row bg-white\\\">\\r\\n    <div class=\\\"col-3 logo-wrapper-col p-5\\\">\\r\\n      <div class=\\\"logo-wrapper\\\">\\r\\n        <img [src]=\\\"loggeduserenterpriseinfo.logo\\\" alt=\\\"\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <h4 class=\\\"form-title\\\">Basic</h4>\\r\\n      <form  class=\\\"basic-info-form\\\" #form=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Company Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.name\\\" name=\\\"name\\\" required>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Industry</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.industry\\\" name=\\\"industry\\\">\\r\\n            </div>\\r\\n            <!---->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Logo Url</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.logo\\\" name=\\\"logo\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.email\\\" name=\\\"email\\\">\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Website Url</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.websiteUrl\\\" name=\\\"websiteUrl\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <h4 class=\\\"form-title\\\">Advanced</h4>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name\\\">Enterprise Unique Name</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" required [ngModel]=\\\"loggeduserenterpriseinfo.enterprise_unique_name\\\" name=\\\"enterpriseUniqueName\\\" readonly>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Tier Group</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.tier_group\\\" disabled name=\\\"tier_group\\\" >\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-5\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"alterEgo\\\">Log Retention Period</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [ngModel]=\\\"loggeduserenterpriseinfo.log_retention_period\\\" name=\\\"log_retention_period\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </section>\\r\\n  <!---->\\r\\n\\r\\n  <header class=\\\"row mt-3 bg-white profile-row\\\" *ngIf=\\\"role==='Admin'\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div\\r\\n          class=\\\"card-header pt-4 mb-4 pb-0 bg-white d-flex justify-content-between justify-content-center align-items-center\\\">\\r\\n          <h4>Enterprise Users</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </header>\\r\\n\\r\\n  <div class=\\\"row pb-3 bg-white profile-row\\\" *ngIf=\\\"role==='Admin'\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <app-smart-table [data]=\\\"loggeduserenterpriseinfo.enterpriseusers|serializeEnterpriseprofileData\\\"\\r\\n                       [settings]=\\\"smartTableSettings_Enterpise_profiles\\\">\\r\\n      </app-smart-table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <!--<section class=\\\"row enterprise-profile-info-row bg-white\\\" *ngIf=\\\"role==='Admin'\\\">-->\\r\\n    <!--<div class=\\\"col-12\\\">-->\\r\\n      <!--<table class=\\\"table\\\">-->\\r\\n        <!--<thead class=\\\"\\\">-->\\r\\n        <!--<tr>-->\\r\\n          <!--<th scope=\\\"col\\\">#</th>-->\\r\\n          <!--<th scope=\\\"col\\\">Name</th>-->\\r\\n          <!--<th scope=\\\"col\\\">Email</th>-->\\r\\n          <!--<th scope=\\\"col\\\">Created At</th>-->\\r\\n          <!--<th scope=\\\"col\\\">Updated At</th>-->\\r\\n          <!--<th scope=\\\"col\\\">Permissions</th>-->\\r\\n        <!--</tr>-->\\r\\n        <!--</thead>-->\\r\\n        <!--<tbody>-->\\r\\n        <!--<tr *ngFor=\\\"let enterpriseuser of loggeduserenterpriseinfo.enterpriseusers\\\">-->\\r\\n          <!--<td>1</td>-->\\r\\n          <!--<td>{{enterpriseuser.first_name}}</td>-->\\r\\n          <!--<td>{{enterpriseuser.email}}</td>-->\\r\\n          <!--<td>{{enterpriseuser.created_at|date}}</td>-->\\r\\n          <!--<td>{{enterpriseuser.updated_at|date}}</td>-->\\r\\n          <!--<td> empty</td>-->\\r\\n        <!--</tr>-->\\r\\n        <!--</tbody>-->\\r\\n      <!--</table>-->\\r\\n    <!--</div>-->\\r\\n  <!--</section>-->\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--<app-smart-table [data]=\\\"loggeduserenterpriseinfo.enterpriseusers\\\"-->\\r\\n                 <!--[settings]=\\\"smartTableSettings_Enterpise_profiles\\\">-->\\r\\n<!--</app-smart-table>-->\\r\\n\"","module.exports = \".basic-row .logo-wrapper {\\n  height: 200px;\\n  width: 200px;\\n  border-radius: 100px;\\n  border: 1px dotted #e0e0e0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n  .basic-row .logo-wrapper img {\\n    width: 90%; }\\n  .basic-info-form label {\\n  font-size: 11px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding-bottom: 0;\\n  margin-bottom: 0; }\\n  .basic-info-form input {\\n  padding: 2px;\\n  margin-top: 0;\\n  margin-left: 1px;\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  border-bottom: 1px solid #e0e0e0;\\n  border-radius: 0; }\\n  form input {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  ::-webkit-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  opacity: 1;\\n  /* Firefox */\\n  font-size: 11px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding: 0; }\\n  :-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  opacity: 1;\\n  /* Firefox */\\n  font-size: 11px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding: 0; }\\n  ::-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  opacity: 1;\\n  /* Firefox */\\n  font-size: 11px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding: 0; }\\n  ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  opacity: 1;\\n  /* Firefox */\\n  font-size: 11px;\\n  line-height: 16px;\\n  font-weight: 400;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  padding: 0; }\\n  .form-title {\\n  font-size: 13px;\\n  line-height: 16px;\\n  font-weight: 700;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .form-group {\\n  padding-bottom: 5px; }\\n  th, td {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 400;\\n  color: #666;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ConstantsService} from '../../constants.service';\r\nimport {ServerService} from '../../server.service';\r\nimport {IUser} from '../interfaces/user';\r\nimport {Observable} from 'rxjs';\r\nimport {SetEnterpriseInfoAction, SetEnterpriseUsersAction} from './ngxs/enterpriseprofile.action';\r\nimport {IEnterpriseProfileInfo} from '../../../interfaces/enterprise-profile';\r\nimport {IHeaderData} from '../../../interfaces/header-data';\r\nimport {IEnterpriseUser} from '../interfaces/enterprise-users';\r\nimport {UtilityService} from '../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-enterpriseprofile',\r\n  templateUrl: './enterpriseprofile.component.html',\r\n  styleUrls: ['./enterpriseprofile.component.scss']\r\n})\r\nexport class EnterpriseprofileComponent implements OnInit {\r\n\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  @Select() loggeduserenterpriseinfo$: Observable<IEnterpriseProfileInfo>;\r\n  loggeduserenterpriseinfoMap$: Observable<IEnterpriseProfileInfo>;\r\n  @ViewChild('form') f: HTMLFormElement;\r\n\r\n  userid: number;\r\n  role: string;\r\n  enterpriseId: number;\r\n  loggeduserenterpriseinfo: IEnterpriseProfileInfo;\r\n  smartTableSettings_Enterpise_profiles = this.constantsService.SMART_TABLE_ENTERPISE_USERS_SETTING;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService,\r\n    private serverService: ServerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggeduser$.subscribe(({user}) => {\r\n      this.userid = user.id;\r\n      this.role = user.role.name;\r\n      this.enterpriseId = user.enterprise_id;//enterprise_id\r\n      let enterpriseProfileUrl = this.constantsService.getEnterpriseUrl(this.enterpriseId);\r\n      this.serverService.makeGetReq<IEnterpriseProfileInfo>({url: enterpriseProfileUrl})\r\n        .subscribe((value: IEnterpriseProfileInfo) => {\r\n          this.store.dispatch([\r\n            new SetEnterpriseInfoAction({enterpriseInfo: value})\r\n          ]);\r\n        });\r\n      if(this.role==='Admin'){\r\n        let enterpriseUsersUrl = this.constantsService.getEnterpriseUsersUrl();\r\n        this.serverService.makeGetReq<{ objects: IEnterpriseUser[] }>({url: enterpriseUsersUrl})\r\n          .subscribe((value) => {\r\n            this.store.dispatch([\r\n              new SetEnterpriseUsersAction({enterpriseUsers: value.objects})\r\n            ]);\r\n          });\r\n      }\r\n\r\n    });\r\n\r\n    this.loggeduserenterpriseinfoMap$=\r\n    this.loggeduserenterpriseinfo$\r\n      .map((value)=>{\r\n        return {\r\n          ...value,\r\n          enterpriseusers:value.enterpriseusers.map((enterpriseuser)=>{\r\n            return {\r\n              ...enterpriseuser,\r\n              created_at:new Date(enterpriseuser.created_at).toLocaleDateString(),\r\n              updated_at:new Date(enterpriseuser.updated_at).toLocaleDateString()\r\n            }\r\n          })\r\n        }\r\n      })\r\n      // .subscribe((value) => {\r\n      // this.loggeduserenterpriseinfo = value;\r\n      // ;\r\n    // });\r\n\r\n    // let headerData: IHeaderData = {'content-type': 'application/json'};\r\n    // let enterpriseUsersUrl = this.constantsService.getEnterpriseUsersUrl();\r\n    // this.serverService.makeGetReq<{users:IEnterpriseUser[]}>({url: enterpriseUsersUrl, headerData})\r\n    //   .subscribe((enterpriseUsers) => {\r\n    //     this.store.dispatch([\r\n    //       new SetEnterpriseUsersAction({enterpriseUsers: enterpriseUsers.users})\r\n    //     ]);\r\n    //   });\r\n  }\r\n\r\n  updateEnterpriseProfile() {\r\n    let formData = this.f.value;\r\n    let body: IEnterpriseProfileInfo = {...this.loggeduserenterpriseinfo, ...formData};\r\n    let url = this.constantsService.getEnterpriseUrl(this.enterpriseId);\r\n    let headerData: IHeaderData = {'content-type': 'application/json'};\r\n    this.serverService.makePutReq({url, body, headerData})\r\n      .subscribe(() => {\r\n        this.utilityService.showSuccessToaster('Updated enterprise profile');\r\n        this.store.dispatch([\r\n          new SetEnterpriseInfoAction({enterpriseInfo: body}),\r\n        ]);\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid header-container shadow-theme\\\">\\r\\n\\r\\n  <div class=\\\"box box-logo\\\" style=\\\"position: absolute; top: 0; bottom: 0; z-index: 40;\\\">\\r\\n    <a routerLink=\\\"/\\\" style=\\\"padding-top: 9px;\\\"><img class=\\\"box-logo__image\\\" src=\\\"https://imibot.ai/assets/img/IMI_logo.png\\\" alt=\\\"\\\"></a>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-8 header-container__left  bg-white d-flex align-items-end\\\" >\\r\\n      <!--TODO: THIS IMAGE IS INVISIBLE; REMOVE IT ALTOGETHER-->\\r\\n      <div class=\\\"box box-logo invisible\\\">\\r\\n        <a routerLink=\\\"/\\\"><img class=\\\"box-logo__image\\\" src=\\\"https://imibot.ai/assets/img/IMI_logo.png\\\" alt=\\\"\\\"></a>\\r\\n      </div>\\r\\n\\r\\n      <!--<div class=\\\"box box-search\\\">-->\\r\\n      <!--<input class=\\\"box-search__input\\\" type=\\\"search\\\" placeholder=\\\"Search...\\\">-->\\r\\n      <!--</div>-->\\r\\n\\r\\n      <div class=\\\"box box-tools d-flex align-items-center\\\">\\r\\n\\r\\n        <!--<div class=\\\"btn-group p-2\\\" dropdown>-->\\r\\n        <!--<i dropdownToggle class=\\\"fa fa-plus\\\"></i>-->\\r\\n        <!--<ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['buildbot','codebased']\\\">Code Based Bot</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['buildbot','intelligent']\\\">Pipeline Based Bot</a>-->\\r\\n        <!--</li>-->\\r\\n        <!--</ul>-->\\r\\n        <!--</div>-->\\r\\n        <a class=\\\"header-nav\\\" [routerLink]=\\\"'/core/viewbots/'+myEBotType.chatbot\\\"><i class=\\\"fa fa-home\\\"></i>Bot Dashboard</a>\\r\\n        <a class=\\\"header-nav\\\" routerLink=\\\"customner\\\" *myIf=\\\"myETabNames.enterprise_profile\\\"><i class=\\\"fa fa-graduation-cap\\\"></i>Knowledge Base</a>\\r\\n        <!--<a class=\\\"header-nav\\\" routerLink=\\\"documentation\\\"><i class=\\\"fa fa-file\\\"></i>Documentation</a>-->\\r\\n\\r\\n        <!--<div class=\\\"btn-group\\\" dropdown>-->\\r\\n        <a class=\\\"header-nav\\\" routerLink=\\\"analytics2\\\" *myIf=\\\"myETabNames.analytics2\\\"><i dropdownToggle class=\\\"fa fa-bar-chart\\\"></i>Analytics</a>\\r\\n        <!--<i dropdownToggle class=\\\"fa fa-bar-chart\\\"></i>-->\\r\\n        <!--<ul *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\">-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','overview']\\\">Overview</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','users']\\\">Users</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','sessions']\\\">Sessions</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','messages']\\\">Messages</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','platforms']\\\">Platform</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','events']\\\">Events</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','engagement']\\\">Engagement</a></li>-->\\r\\n        <!--<li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['analytics','usage']\\\">Usage</a></li>-->\\r\\n        <!--</ul>-->\\r\\n        <!--</div>-->\\r\\n        <a *myIf=\\\"myETabNames.report\\\" class=\\\"header-nav\\\" routerLink=\\\"reports\\\"><i class=\\\"fa fa-list\\\"></i>Reports</a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-4 d-flex align-items-center\\\" >\\r\\n      <div class=\\\"d-flex header-container__right align-items-center ml-auto \\\">\\r\\n        <div class=\\\"box box-details-personal d-flex flex-column\\\">\\r\\n          <span class=\\\"box-details-personal__name  pr-0\\\">{{(loggeduser$|async).user.first_name +\\\" \\\"+ (loggeduser$|async).user.last_name}}</span>\\r\\n          <span class=\\\"box-details-personal__designation text-theme-muted pt-1 text-right\\\">{{(loggeduser$|async).user.role.name}}</span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"box d-flex \\\">\\r\\n    <span class=\\\"box-details__logo\\\">\\r\\n      <img class=\\\"img-fluid rounded-circle\\\" style=\\\"width: 32px\\\"\\r\\n           [src]=\\\"logoSrc\\\" alt=\\\"\\\">\\r\\n    </span>\\r\\n          <div class=\\\"btn-group\\\" dropdown>\\r\\n            <span dropdownToggle class=\\\"box-details__dropdown d-flex align-items-center\\\"><i class=\\\"fa fa-chevron-down\\\"></i></span>\\r\\n            <ul *dropdownMenu  class=\\\"dropdown-menu dropdown-menu-right\\\" role=\\\"menu\\\">\\r\\n              <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['profile']\\\">Profile</a></li>\\r\\n              <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"logout()\\\">Signout</a></li>\\r\\n              <li class=\\\"divider dropdown-divider\\\" *myIf=\\\"myETabNames.enterprise_profile\\\"></li>\\r\\n              <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" *myIf=\\\"myETabNames.enterprise_profile\\\" [routerLink]=\\\"['enterpriseprofile']\\\">Enterprise Profile</a></li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".header-container {\\n  height: 56px;\\n  background-color: white;\\n  position: fixed;\\n  z-index: 115;\\n  left: 0;\\n  right: 0; }\\n  .header-container .header-container__left {\\n    padding-bottom: 15px;\\n    padding-top: 9px;\\n    padding-right: 28px; }\\n  .header-container .header-nav {\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    text-decoration: none; }\\n  .header-container .header-nav .fa {\\n      font-size: 15px;\\n      color: inherit !important; }\\n  .header-container .header-nav:hover {\\n      color: #00abd3 !important; }\\n  .header-container .box-logo {\\n    width: 180px;\\n    border-right: solid 1px #e0e0e0;\\n    display: flex;\\n    justify-content: center; }\\n  .header-container .box-logo .box-logo__image {\\n      height: 32px !important; }\\n  .header-container .box-search {\\n    width: 40%; }\\n  .header-container .box-search .box-search__input {\\n      border: none;\\n      width: 100%; }\\n  .header-container .box-search .box-search__input:focus {\\n      border: none;\\n      border-color: inherit;\\n      box-shadow: none;\\n      outline: none; }\\n  .header-container .box-details-personal {\\n    font-size: 16px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    border-right: 1px solid #e0e0e0; }\\n  .header-container .box-details-personal .box-details-personal__designation {\\n      color: #9e9e9e; }\\n  .header-container .box-details__logo, .header-container .box-details__orgname {\\n    padding-right: 10px; }\\n  .fa {\\n  font-size: 14px;\\n  margin-right: 8px;\\n  color: #474747;\\n  cursor: pointer; }\\n  ::-webkit-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(158, 158, 158, 0.41);\\n  opacity: 1;\\n  /* Firefox */ }\\n  :-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(158, 158, 158, 0.41);\\n  opacity: 1;\\n  /* Firefox */ }\\n  ::-ms-input-placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(158, 158, 158, 0.41);\\n  opacity: 1;\\n  /* Firefox */ }\\n  ::placeholder {\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\n  color: rgba(158, 158, 158, 0.41);\\n  opacity: 1;\\n  /* Firefox */ }\\n  .header-nav {\\n  margin-right: 22px;\\n  color: #474747 !important; }\\n  .header-nav .fa {\\n    color: #9e9e9e !important; }\\n  .btn-group > ul > li :hover {\\n  color: #00abd3 !important; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {IUser} from '../interfaces/user';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ResetAppState, ResetStoreToDefault} from '../../ngxs/app.action';\r\nimport {ResetChatState} from '../../chat/ngxs/chat.action';\r\nimport {ResetBotListAction} from '../view-bots/ngxs/view-bot.action';\r\nimport {ResetAuthToDefaultState} from '../../auth/ngxs/auth.action';\r\nimport {ConstantsService, EAPermissionsDynamic, ETabNames} from '../../constants.service';\r\nimport {ServerService} from '../../server.service';\r\nimport {ResetEnterpriseUsersAction} from '../enterpriseprofile/ngxs/enterpriseprofile.action';\r\nimport {ResetBuildBotToDefault} from '../buildbot/ngxs/buildbot.action';\r\nimport {IEnterpriseProfileInfo} from '../../../interfaces/enterprise-profile';\r\nimport {EBotType} from '../view-bots/view-bots.component';\r\nimport {ResetAnalytics2GraphData, ResetAnalytics2HeaderData} from '../analysis2/ngxs/analysis.action';\r\nimport {UtilityService} from '../../utility.service';\r\nimport {IAppState} from '../../ngxs/app.state';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  @Select() loggeduserenterpriseinfo$: Observable<IEnterpriseProfileInfo>;\r\n  @Select() app$: Observable<IAppState>;\r\n  @Select() app$Subscription: Subscription;\r\n  logoSrc = 'https://hm.imimg.com/imhome_gifs/indiamart-og1.jpg';\r\n  myEBotType = EBotType;\r\n  myETabNames = ETabNames;\r\n  myEAPermissionsDynamic = EAPermissionsDynamic;\r\n  isFullScreen = false;\r\n  url: string;\r\n  logoutSetTimeoutRef;\r\n  autoLogOutTime: number;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private serverService: ServerService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService,\r\n    private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /*this.app$Subscription = */this.app$.subscribe((app) => {\r\n        /*every time this callback runs remove all previous setTimeOuts*/\r\n        let autoLogOutTime = app.autoLogoutTime;\r\n        if (autoLogOutTime) {\r\n\r\n          /*If autoLogOutTime hasn't changed, return\r\n          * else clear previous timeouts, and create a new one\r\n          * */\r\n          if (this.autoLogOutTime === autoLogOutTime) return;\r\n          this.autoLogOutTime = autoLogOutTime;\r\n          this.logoutSetTimeoutRef && clearTimeout(this.logoutSetTimeoutRef);\r\n\r\n          /*creating a new Timeout*/\r\n          this.logoutSetTimeoutRef = setTimeout(() => {\r\n            this.logoutSetTimeoutRef && clearTimeout(this.logoutSetTimeoutRef);\r\n            try {\r\n              this.app$Subscription && this.app$Subscription.unsubscribe();\r\n            }catch (e) {\r\n              console.log(e);/*TODO: find out whats wrong with app$Subscription*/\r\n            }\r\n            console.log('============================autologout============================');\r\n            this.logout();\r\n            document.location.reload();/*To destroy all timeouts just in case*/\r\n          }, (autoLogOutTime - Date.now()));\r\n        }\r\n      }\r\n    );\r\n    this.loggeduser$.subscribe((value) => {\r\n    });\r\n    this.loggeduserenterpriseinfo$.subscribe((enterpriseProfileInfo) => {\r\n      ;\r\n      this.logoSrc = enterpriseProfileInfo.logo || this.logoSrc;\r\n    });\r\n    // this.activatedRoute.queryParams.subscribe((queryParams)=>{\r\n    //   ;\r\n    //   this.isFullScreen = queryParams['isArchitectureFullScreen']==='true'\r\n    // })\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n    // this.store.reset({});\r\n    this.url = this.constantsService.getLogoutUrl();\r\n    this.serverService.makeGetReq({url: this.url})\r\n      .subscribe((v) => {\r\n        this.utilityService.showSuccessToaster('Logged Out');\r\n      });\r\n    this.store.dispatch([\r\n\r\n      new ResetBotListAction(),\r\n      new ResetAuthToDefaultState(),\r\n      new ResetEnterpriseUsersAction(),\r\n      new ResetBuildBotToDefault(),\r\n      new ResetAnalytics2GraphData(),\r\n      new ResetAnalytics2HeaderData(),\r\n      new ResetAppState()\r\n    ]).subscribe(() => {\r\n      this.store.dispatch([new ResetChatState()]);\r\n    });\r\n    this.serverService.removeTokens();\r\n    this.router.navigate(['auth', 'login']);\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<div *ngIf=\\\"(loggeduser$|async) as loggedUser\\\" class=\\\"row my-3 pb-3 bg-white profile-row\\\">\\r\\n  <div class=\\\"profile-header col-12 p-0 pb-2 d-flex justify-content-between align-items-center\\\">\\r\\n    <h4 class=\\\" m-0 profile-heading-text\\\">Profile Information</h4>\\r\\n    <button class=\\\"btn btn-theme-primary ml-auto mr-1\\\" (click)=\\\"openChangePasswordModal(Primarytemplate)\\\">Change\\r\\n      Password\\r\\n    </button>\\r\\n    <button class=\\\"btn-theme-primary\\\" *myIf=\\\"myETabNames.update_profile\\\" (click)=\\\"updateProfile()\\\">Update</button>\\r\\n  </div>\\r\\n\\r\\n  <form class=\\\"row\\\" #form=\\\"ngForm\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h5 class=\\\"px-4\\\">Basic</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <label for=\\\"\\\" class=\\\"pl-5 ml-5\\\">First Name:</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <input class=\\\"edit-input value\\\" type=\\\"text\\\" [ngModel]=\\\"loggedUser.user.first_name\\\" required name=\\\"first_name\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <label for=\\\"\\\" class=\\\"pl-5 ml-5\\\">Last Name:</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <input class=\\\"edit-input value\\\" type=\\\"text\\\" [ngModel]=\\\"loggedUser.user.last_name\\\" required name=\\\"last_name\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <label for=\\\"\\\" class=\\\"pl-5 ml-5\\\">Email:</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <span class=\\\"value non-editable\\\">{{loggedUser.user.email}}</span>\\r\\n    </div>\\r\\n  </form>\\r\\n  <!---->\\r\\n  <section class=\\\"row my-2\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <h5 class=\\\"px-4\\\">Advanced</h5>\\r\\n    </div>\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <label for=\\\"\\\" class=\\\"pl-5 ml-5 pr-4\\\">Role:</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <span class=\\\"value non-editable \\\">{{loggedUser.user.role.name}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"col-3 d-flex \\\" style=\\\"overflow-x: hidden\\\">\\r\\n      <label for=\\\"\\\" class=\\\"pl-5 ml-5 pr-4 pt-1\\\">Action Permission:</label>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <div>\\r\\n        <span\\r\\n          class=\\\"text-info\\\"><strong>{{loggedUser?.user?.role?.permissions?.actions?.length===0?'All':loggedUser?.user?.role?.permissions?.actions?.length}}</strong> Action permissions</span>\\r\\n        <div class=\\\"permissions-box p-2 \\\">\\r\\n        <span class=\\\"badge badge-secondary mr-1 mb-2\\\"\\r\\n              *ngFor=\\\"let perm of (loggedUser.user.role.permissions.actions|profilePermissionIdToName|async)\\\">{{perm}}\\r\\n      </span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n\\r\\n</div>\\r\\n\\r\\n<ng-template #Primarytemplate>\\r\\n  <div class=\\\"primary-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title mb-2\\\"> Change Password</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <form *ngIf=\\\"showPasswordChangeForm\\\" class=\\\"row\\\" #password_form=\\\"ngForm\\\">\\r\\n\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label for=\\\"\\\">Old Password</label>\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"old_password\\\" name=\\\"old_password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <hr>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label for=\\\"\\\">New Password</label>\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"new_password\\\" name=\\\"new_password\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <label for=\\\"\\\">Confirm Password</label>\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"new_password_confirm\\\" name=\\\"new_password_confirm\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 p-0 m-0\\\" style=\\\"height: 25px\\\">\\r\\n          <p class=\\\"text-danger text-secondary m-0\\\">{{passwordErrorStr?passwordErrorStr:''}}</p>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12 d-flex flex-row-reverse justify-content-center\\\"><!--todo: hack-->\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-theme-primary\\\" (click)=\\\"changePassword()\\\">Modify</button>\\r\\n          <button class=\\\"btn btn-theme-primary-outline mr-1\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n          <!--<button class=\\\"btn btn-theme-primary\\\" (click)=\\\"changePassword()\\\">Submit</button>-->\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"!showPasswordChangeForm\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <i class=\\\"fa fa-check-circle\\\"></i>\\r\\n        </div>\\r\\n        <!--<div class=\\\"col-md-12 light-text\\\"></div>-->\\r\\n        <div class=\\\"col-md-12\\\"><strong>Password Changed Successfully</strong></div>\\r\\n        <!--<div class=\\\"col-md-12\\\">9:00 AM</div>-->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","module.exports = \".profile-row {\\n  padding: 20px 32px; }\\n  .profile-row label {\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 700;\\n    color: #474747;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    width: 220px; }\\n  .profile-row .profile-header {\\n    border-bottom: 1px solid #e0e0e0;\\n    margin-bottom: 40px; }\\n  .profile-row .non-editable {\\n    font-size: 13px;\\n    line-height: 13px;\\n    font-weight: 400;\\n    color: #949494;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .profile-row input.value {\\n    border: none;\\n    border-color: inherit;\\n    box-shadow: none;\\n    outline: none;\\n    border-bottom: 1px solid #e0e0e0; }\\n  .perm-list {\\n  padding: 6px;\\n  margin-left: 200px;\\n  background-color: #e0e0e0;\\n  font-size: 14px; }\\n  .perm-list .badge-secondary {\\n    margin: 3px;\\n    padding: 4px; }\\n  .password-row .label {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .password-row input {\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  border-bottom: 1px solid #e0e0e0; }\\n  .profile-heading-text {\\n  font-size: 20px;\\n  line-height: 13px;\\n  font-weight: 700;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n  .primary-modal .modal-header {\\n    color: #474747; }\\n  .primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  .primary-modal .modal-body .fa {\\n  font-size: 48px;\\n  color: #00abd3;\\n  padding: 10px 0px; }\\n  .danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n  .danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n  .danger-modal .modal-header {\\n    color: #474747; }\\n  .danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n  .danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n  .modal-body label {\\n  width: 120px; }\\n  .modal-body input {\\n  border-radius: 2px;\\n  border: solid 1px #e0e0e0;\\n  height: 28px;\\n  width: 150px;\\n  padding: 0px 8px; }\\n  .modal-body hr {\\n  border-color: #e0e0e0; }\\n  .permissions-box {\\n  display: flex;\\n  align-items: start;\\n  flex-wrap: wrap;\\n  background-color: #e0e0e0;\\n  height: 200px;\\n  width: 100%;\\n  border-radius: 2px;\\n  align-content: start; }\\n  .profile-grid {\\n  display: -ms-grid;\\n  display: grid;\\n      -ms-grid-columns: 1fr 1fr 1fr 10fr;\\n      grid-template-columns: 1fr 1fr 1fr 10fr;\\n      grid-template-areas: 'heading1 heading1 heading1 heading1'\\r '. label1 .      value1'\\r '. label2 .      value2'\\r '. label3 .      value3'\\r 'heading2 heading2 heading2 heading2'\\r '. label4 .      value4'\\r '. label5 .      value5'\\r '. label6 .      value6'; }\\n\"","import {Component, ElementRef, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {IUser} from '../interfaces/user';\r\nimport {Observable} from 'rxjs';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {ServerService} from '../../server.service';\r\nimport {ConstantsService, ETabNames} from '../../constants.service';\r\nimport {IHeaderData} from '../../../interfaces/header-data';\r\nimport {SetUserAction} from '../../auth/ngxs/auth.action';\r\nimport {UtilityService} from '../../utility.service';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {NgForm} from '@angular/forms';\r\nimport {SetMasterProfilePermissions} from '../../ngxs/app.action';\r\nimport {IProfilePermission} from '../../../interfaces/profile-action-permission';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  myETabNames = ETabNames;\r\n  @Select() loggeduser$: Observable<{ user: IUser }>;\r\n  @ViewChild('form') f: HTMLFormElement;\r\n  @ViewChild('password_form') passwordForm: NgForm;\r\n  showPasswordChangeForm = true;\r\n  loggeduser: IUser;\r\n  modalRef: BsModalRef;\r\n  passwordErrorStr: string;\r\n\r\n  new_password;\r\n  new_password_confirm;\r\n  old_password;\r\n\r\n  constructor(\r\n    private serverService: ServerService,\r\n    private constantsService: ConstantsService,\r\n    private utilityService: UtilityService,\r\n    private modalService: BsModalService,\r\n    private store: Store) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggeduser$.subscribe((loggeduser) => {\r\n      this.loggeduser = loggeduser.user;\r\n    });\r\n\r\n    // let allActionsUrl = this.constantsService.getAllActionsUrl();\r\n    // this.serverService.makeGetReq<{ meta: any, objects: IProfilePermission[] }>({url: allActionsUrl})\r\n    //   .subscribe(({objects}) => {\r\n    //     this.store.dispatch([\r\n    //       new SetMasterProfilePermissions({masterProfilePermissions: objects})\r\n    //     ]);\r\n    //   });\r\n\r\n    this.modalService.onHidden.subscribe((reason: string) => {\r\n      this.old_password = this.new_password = this.new_password_confirm = '';\r\n    });\r\n  }\r\n\r\n  updateProfile() {\r\n    if (!this.f.valid) {\r\n      this.utilityService.showErrorToaster(new Error('Please fill valid values'));\r\n      return;\r\n    }\r\n    let url: string = this.constantsService.getUserUpdateUrl(this.loggeduser.id);\r\n    // ;\r\n    // let body = {...this.loggeduser, ...this.f.value};\r\n    let body = this.f.value;\r\n    this.serverService.makePutReq({url, body})\r\n      .subscribe((value: IUser) => {\r\n        let updatedUser: IUser = {...this.loggeduser, ...value};\r\n        this.utilityService.showSuccessToaster('Updated profile');\r\n        this.store.dispatch([\r\n          new SetUserAction({user: updatedUser})\r\n        ]);\r\n      });\r\n  }\r\n\r\n  openChangePasswordModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, {class: 'modal-md'});\r\n  }\r\n\r\n  changePassword() {\r\n    //TODO: make use of forms here instead\r\n    // ;\r\n    // if(this.passwordForm.valid){\r\n    let changePasswordUrl = this.constantsService.updatePassword();\r\n    //   let formData =  this.passwordForm.value;\r\n    //   formData.new_password_confirm && delete formData.new_password_confirm;\r\n    if (this.old_password && this.new_password && this.new_password === this.new_password_confirm) {\r\n      let body = {\r\n        old_password: this.old_password,\r\n        new_password: this.new_password\r\n      };\r\n      this.serverService.makePostReq({url: changePasswordUrl, body})\r\n        .subscribe((value: { 'error': boolean, 'message': string }) => {\r\n          if (value.error) {\r\n            this.flashErrorMessage(value.message);\r\n            return;\r\n          }\r\n          this.showPasswordChangeForm = false;//show success message\r\n          setTimeout(() => {\r\n            this.showPasswordChangeForm = true;//show form again\r\n            this.new_password_confirm = this.new_password = this.old_password = '';\r\n          }, 3000);\r\n        });\r\n    } else if (this.new_password !== this.new_password_confirm) {\r\n      this.flashErrorMessage('passwords dont match');\r\n\r\n    } else {\r\n      this.flashErrorMessage('form not valid');\r\n    }\r\n\r\n    // }\r\n  }\r\n\r\n  flashErrorMessage(message) {\r\n    this.passwordErrorStr = message;\r\n    setTimeout(() => {\r\n      this.passwordErrorStr = '';\r\n\r\n    }, 3000);\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<button (click)=\\\"click()\\\">click1</button>-->\\r\\n<form class=\\\"row report-detail-row\\\" #form=\\\"ngForm\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div class=\\\"select-theme-primary\\\">\\r\\n      <label for=\\\"\\\" class=\\\"Bot required\\\">Bot</label>\\r\\n      <select class=\\\"concept1\\\" type=\\\"number\\\" [ngModel] required name=\\\"bot_id\\\" #select>\\r\\n        <option *ngFor=\\\"let bot of codebasedBotList let i = index;\\\" [selected]=\\\"i===0\\\" [value]=\\\"bot.id\\\">\\r\\n          {{bot.name}}\\r\\n        </option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div class=\\\"select-theme-primary\\\">\\r\\n      <label for=\\\"\\\" class=\\\"required required\\\">Report type</label>\\r\\n      <select class=\\\"concept1\\\">\\r\\n        <option value=\\\"single_match\\\">Messages</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6 mt-3\\\">\\r\\n    <label for=\\\"\\\" class=\\\"required m-0 pr-3 mb-2\\\">Output format</label>\\r\\n    <div class=\\\"btn-group\\\" role=\\\"group\\\">\\r\\n      <label (click)=\\\"filetype='csv'\\\"\\r\\n             [ngClass]=\\\"{'btn-theme-primary': filetype==='csv', 'btn-theme-secondary-outline':filetype==='pdf'}\\\"\\r\\n             for=\\\"csv\\\" class=\\\"btn d-flex align-items-center \\\">CSV</label>\\r\\n      <label\\r\\n        disabled\\r\\n        [ngClass]=\\\"{'btn-theme-primary': filetype==='pdf', 'btn-theme-secondary-outline':filetype==='csv'}\\\"\\r\\n        for=\\\"pdf\\\" class=\\\"btn d-flex align-items-center\\\">PDF</label>\\r\\n      <input type=\\\"radio\\\" [ngModel]=\\\"filetype\\\" required [checked]=\\\"true\\\" id=\\\"csv\\\" name=\\\"filetype\\\" value=\\\"csv\\\" hidden>\\r\\n      <input disabled type=\\\"radio\\\" [ngModel]=\\\"filetype\\\" required id=\\\"pdf\\\" name=\\\"filetype\\\" value=\\\"pdf\\\" hidden>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-5 mt-3 d-flex align-items-center \\\">\\r\\n    <!--<p>{{report_id}}</p>-->\\r\\n    <div class=\\\"d-flex mt-2 align-items-center\\\" *ngIf=\\\"report_id\\\">\\r\\n      <label for=\\\"\\\" class=\\\"required m-0 pr-3\\\">Status</label>\\r\\n      <ui-switch class=\\\"m-0 pt-2\\\" [(ngModel)]=\\\"isactive\\\" required name=\\\"isactive\\\" style=\\\"border:none\\\"\\r\\n                 size=\\\"small\\\"></ui-switch>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-6 mt-4\\\">\\r\\n    <div class=\\\"select-theme-primary\\\">\\r\\n      <label for=\\\"\\\" class=\\\"required \\\">Frequency</label>\\r\\n      <select class=\\\"concept1\\\" ngModel required name=\\\"frequency\\\">\\r\\n        <option value=\\\"daily\\\">Daily</option>\\r\\n        <option value=\\\"weekly\\\">Weekly</option>\\r\\n        <option value=\\\"bi-weekly\\\">Bi-weekly</option>\\r\\n        <option value=\\\"monthly\\\">Monthly</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-5 mt-4\\\">\\r\\n    <div class=\\\"select-theme-primary\\\">\\r\\n      <label for=\\\"\\\" class=\\\"required \\\">Time</label>\\r\\n      <input type=\\\"text\\\"\\r\\n             placeholder=\\\"Timepicker\\\"\\r\\n             autocomplete=\\\"off\\\"\\r\\n             class=\\\"form-control time-input1 date-input\\\"\\r\\n             name=\\\"start_time\\\"\\r\\n             id=\\\"start_time\\\" required\\r\\n             [(ngModel)]=\\\"start_time\\\"\\r\\n      >\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12 mt-4\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12 col-md-4 form-group\\\">\\r\\n        <label for=\\\"\\\" class=\\\"required \\\" style=\\\"width: 100%\\\">Select Date</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               placeholder=\\\"Datepicker\\\"\\r\\n               class=\\\"form-control date-input\\\"\\r\\n               [(ngModel)]=\\\"startdate\\\"\\r\\n               [minDate]=\\\"today\\\"\\r\\n               required\\r\\n               name=\\\"startdate\\\"\\r\\n               bsDatepicker [bsConfig]=\\\"datePickerConfig\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n<!---->\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row m-0 p-0\\\" ngModelGroup='delivery'>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <div class=\\\"\\\" style=\\\"width: 100%; color: #474747\\\">Delivery Mode</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <ul class=\\\"nav nav-tabs my-2\\\">\\r\\n        <input type=\\\"text\\\" ngModel name=\\\"delivery_type\\\" hidden>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{'tab-active':deliveryMode==='sftp'}\\\"\\r\\n             (click)=\\\"navigate('sftp')\\\"><strong>SFTP</strong></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\" disabled>\\r\\n          <a class=\\\"nav-link\\\" [ngClass]=\\\"{'tab-active':deliveryMode==='email'}\\\" (click)=\\\"navigate('email')\\\"><strong>Email</strong></a>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row m-0\\\" [hidden]=\\\"deliveryMode!=='email'\\\" ngModelGroup='email'>\\r\\n      <div class=\\\"col-8 text-report \\\">\\r\\n        Schedule emails for multiple recipients, separate with semi-colon(;)\\r\\n      </div>\\r\\n      <div class=\\\"col-4 text-right \\\">\\r\\n        <ui-switch disabled ngModel name=\\\"enabled\\\" class=\\\"pt-2\\\" style=\\\"border:none\\\" size=\\\"small\\\"></ui-switch>\\r\\n      </div>\\r\\n      <fieldset disabled class=\\\"col-12 \\\">\\r\\n        <div class=\\\"col-10 mt-2 border-left\\\">\\r\\n          <div class=\\\"text-report pb-2\\\">Recipients</div>\\r\\n          <textarea ngModel name=\\\"recipients\\\" class=\\\"p-2\\\" style=\\\"width: 100%; height: 90px\\\"></textarea>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row m-0 \\\" [hidden]=\\\"deliveryMode!=='sftp'\\\" ngModelGroup='sftp'>\\r\\n      <div class=\\\"col-12 d-flex justify-content-between align-items-center\\\">\\r\\n        <div class=\\\"text-report \\\">Push reports to a secure location as scheduled</div>\\r\\n        <ui-switch [(ngModel)]=\\\"isSftpReportEnabled\\\" name=\\\"enabled\\\" class=\\\"pt-2\\\" style=\\\"border:none\\\" size=\\\"small\\\"></ui-switch>\\r\\n      </div>\\r\\n\\r\\n      <fieldset [disabled]=\\\"!isSftpReportEnabled\\\" class=\\\"col-12 \\\">\\r\\n        <div class=\\\"co-10 border-left pl-3 mt-2 sftp-grid\\\">\\r\\n          <label for=\\\"\\\" class=\\\" m-0\\\">IP Address</label>\\r\\n          <label for=\\\"\\\" class=\\\" m-0\\\">Port</label>\\r\\n          <input class=\\\"input-material mb-3\\\" type=\\\"text\\\" ngModel name=\\\"ip\\\">\\r\\n          <input class=\\\"input-material mb-3\\\" type=\\\"text\\\" ngModel name=\\\"port\\\">\\r\\n          <label for=\\\"\\\" class=\\\" m-0\\\">Username</label>\\r\\n          <label for=\\\"\\\" class=\\\" m-0\\\">Password</label>\\r\\n          <input class=\\\"input-material mb-3\\\" type=\\\"text\\\" ngModel name=\\\"username\\\">\\r\\n          <input class=\\\"input-material mb-3\\\" type=\\\"password\\\" name=\\\"password\\\">\\r\\n          <label for=\\\"\\\" class=\\\" m-0\\\">Upload directory</label>\\r\\n          <!--<button class=\\\"btn btn-theme-primary-outline upload-private-key-button\\\">Upload private key</button>-->\\r\\n          <label for=\\\"uploadInput\\\" class=\\\"btn btn-theme-secondary-outline upload-private-key-button\\\">Upload File\\r\\n            <input type=\\\"file\\\"\\r\\n                   hidden\\r\\n                   id=\\\"uploadInput\\\"\\r\\n                   (change)='openFile(uploadInput);uploadInput.value=null'\\r\\n                   accept='text/plain' multiple\\r\\n                   #uploadInput>\\r\\n          </label>\\r\\n          <input class=\\\"input-material\\\" [(ngModel)]=\\\"privateKey\\\" type=\\\"password\\\" ngModel name=\\\"directory\\\">\\r\\n        </div>\\r\\n      </fieldset>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \".select-theme-primary select {\\n  font-family: Helvetica;\\n  font-size: 12px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: normal;\\n  letter-spacing: normal;\\n  color: #9e9e9e;\\n  max-width: 100% !important;\\n  height: 32px !important;\\n  border-radius: 2px;\\n  border: solid 1px #e0e0e0;\\n  padding: 8px; }\\n  .select-theme-primary select:focus {\\n    outline: none; }\\n  .report-detail-row label {\\n  display: block;\\n  font-size: 11px;\\n  color: #9e9e9e;\\n  margin-right: 4px; }\\n  .date-input {\\n  height: 32px !important;\\n  border-radius: 2px;\\n  font-size: 12px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #9e9e9e;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  .date-input::-webkit-input-placeholder {\\n    font-size: 12px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .date-input:-ms-input-placeholder {\\n    font-size: 12px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .date-input::-ms-input-placeholder {\\n    font-size: 12px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .date-input::placeholder {\\n    font-size: 12px;\\n    line-height: 13px;\\n    font-weight: 300;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif; }\\n  .nav-link {\\n  font-size: 13px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif;\\n  color: #474747 !important; }\\n  .text-report {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  textarea {\\n  border: solid 1px #e0e0e0;\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n  textarea:focus {\\n    outline: none; }\\n  .sftp-grid {\\n  display: -ms-grid;\\n  display: grid;\\n  -ms-grid-columns: 40% 40%;\\n      grid-template-columns: 40% 40%;\\n  -ms-grid-rows: auto;\\n      grid-template-rows: auto;\\n  align-items: end;\\n  grid-column-gap: 25px; }\\n  .sftp-grid .Bot {\\n    margin-bottom: 0 !important; }\\n  .sftp-grid input {\\n    padding: 4px;\\n    color: #9e9e9e; }\\n  .sftp-grid .upload-private-key-button {\\n    grid-row: auto/ span 2; }\\n  .input-material {\\n  padding: 0;\\n  margin-top: 0;\\n  margin-left: 1px;\\n  border: none;\\n  border-color: inherit;\\n  box-shadow: none;\\n  outline: none;\\n  border-bottom: 1px solid #e0e0e0;\\n  background-color: transparent;\\n  border-radius: 0; }\\n  .input-material::-webkit-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-material:-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-material::-ms-input-placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n  .input-material::placeholder {\\n    /* Chrome, Firefox, Opera, Safari 10.1+ */\\n    opacity: 1;\\n    /* Firefox */\\n    font-size: 11px;\\n    line-height: 16px;\\n    font-weight: 400;\\n    color: #9e9e9e;\\n    font-family: \\\"Helvetica\\\", sans-serif;\\n    padding: 0; }\\n\"","import {AfterViewInit, Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ViewBotStateModel} from '../../../view-bots/ngxs/view-bot.state';\r\nimport {IBot} from '../../../interfaces/IBot';\r\nimport {IReportItem} from '../../../../../interfaces/report';\r\nimport {NgForm} from '@angular/forms';\r\nimport {UtilityService} from '../../../../utility.service';\r\nimport {TempVariableService} from '../../../../temp-variable.service';\r\nimport {ServerService} from '../../../../server.service';\r\nimport {ConstantsService} from '../../../../constants.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BsDatepickerConfig} from 'ngx-bootstrap/datepicker';\r\nimport {EBotType} from '../../../view-bots/view-bots.component';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-report-controls',\r\n  templateUrl: './report-controls.component.html',\r\n  styleUrls: ['./report-controls.component.scss']\r\n})\r\nexport class ReportControlsComponent implements OnInit, AfterViewInit {\r\n  start_time;\r\n  isactive=false;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  datePickerConfig: Partial<BsDatepickerConfig>;\r\n  @ViewChild('form') f: NgForm;\r\n  botlist: IBot[] = [];\r\n  selectedBot: IBot;\r\n  codebasedBotList:IBot[];\r\n  today = new Date();\r\n  reportItem: IReportItem;\r\n  filetype = 'csv';\r\n  // @Input()\r\n  reportFormData: IReportItem;\r\n  servervalue;\r\n  deliveryMode: string = 'sftp';\r\n  startdate = new Date();\r\n// test = false;\r\n  // start_date = new Date();\r\n  isSftpReportEnabled=false;\r\n  report_id;\r\n  constructor(\r\n    private store: Store,\r\n    private utilityService: UtilityService,\r\n    private tempVariableService: TempVariableService,\r\n    private serverService: ServerService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private constantsService: ConstantsService,\r\n  ) {\r\n    this.datePickerConfig = Object.assign({}, {\r\n      'containerClass': 'theme-dark-blue',\r\n      'dateInputFormat': 'DD/MM/YYYY',\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    $(document).ready(function(){\r\n      $('input.time-input1').timepicker({defaultTime: '9', scrollbar: true, timeFormat: 'HH:mm'});\r\n    });\r\n\r\n    if(this.activatedRoute.snapshot.data[\"name\"]==='create_report'){\r\n      setTimeout(() => {\r\n        this.f.form.patchValue({bot_id: this.botlist[0].id, frequency:'daily'});\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.activatedRoute.queryParamMap.subscribe((queryParams: any) => {\r\n      this.deliveryMode = queryParams.params['deliveryMode'] || this.deliveryMode;\r\n    });\r\n\r\n    let _id = this.report_id = this.activatedRoute.snapshot.paramMap.get('_id');\r\n\r\n    this.botlist$.subscribe((value: ViewBotStateModel) => {\r\n      this.botlist = [...value.allBotList];\r\n      this.codebasedBotList = this.botlist.filter((bot)=>bot.bot_type===EBotType.chatbot);\r\n\r\n      setTimeout(() => {\r\n\r\n\r\n        // this.reportFormData.startdate = this.utilityService.convertDateObjectStringToDDMMYY(new Date(this.reportFormData.startdate));\r\n        // if (this.reportFormData) this.f.f.patchValue(this.reportFormData);\r\n        //\r\n        if (_id && _id !== 'new') {\r\n          let url = this.constantsService.getReportsEditInfo(_id);\r\n          this.serverService.makeGetReq<IReportItem>({url})\r\n            .subscribe((value: IReportItem) => {\r\n              try {\r\n                let formDataSerialized = {\r\n                  ...value,\r\n                  delivery: {\r\n                    sftp: value.delivery.find((item:any)=>item.delivery_type==='sftp'),\r\n                    email: value.delivery.find((item:any)=>item.delivery_type==='email')\r\n                  }\r\n                };\r\n                // delete value.startdate;\r\n                if (value) this.f.form.patchValue(formDataSerialized);\r\n                this.startdate = new Date(value.startdate);\r\n                // let start_time:string  = (<any>document).getElementById(\"start_time\").value;\r\n                let hh:string = new Date(value.startdate).getHours().toString();\r\n                let mm:string = new Date(value.startdate).getMinutes().toString();\r\n                if(mm.length===1) mm= '0'+mm;\r\n                if(hh.length===1) hh= '0'+hh;\r\n                (<any>document).getElementById(\"start_time\").value = hh+':'+mm;\r\n              }catch (e) {\r\n                console.log(e);\r\n              }\r\n              // this.f.f.patchValue({startdate:value.startdate});\r\n              // this.f.f.patchValue({startdate:value.startdate});//This will only accept mmddyyyy format...\r\n            });\r\n          // } else if(_id==='new') {\r\n          //   this.reportFormData.startdate = this.utilityService.convertDateObjectStringToDDMMYY(new Date(this.reportFormData.startdate));\r\n          //   if (this.reportFormData && !_id) this.f.f.patchValue(this.reportFormData);\r\n        }\r\n      }, 0);\r\n    });\r\n\r\n\r\n    this.f.valueChanges.debounceTime(1000).subscribe((data: any) => {\r\n      // if (!this.f.dirty) return;\r\n      ;\r\n      /*TODO: VERY BAD FIX; USE REACTIVE FORM INSTEAD*/\r\n      // data.delivery = [data.delivery];\r\n\r\n\r\n      data = {\r\n        ...this.servervalue,\r\n        ...data\r\n      };\r\n      this.reportFormData = {...data};\r\n\r\n      /*if its not a new subscription, dont store in store*/\r\n      // if(_id==='new') this.store.dispatch(new SetReportFormAction({reportItem: data}));\r\n    });\r\n  }\r\n\r\n  selectedBotChanged(bot) {\r\n\r\n  }\r\n\r\n  getReportControlFormData(){/*to be called by parent*/\r\n\r\n    this.reportFormData.botName = this.botlist.find((bot)=>bot.id==this.reportFormData.bot_id).name;\r\n    this.reportFormData = {...this.reportFormData};\r\n    let start_time:string  = (<any>document).getElementById(\"start_time\").value;\r\n    let start_time_arr =  start_time.split(':');\r\n    let hh = Number(start_time_arr[0]);\r\n    let mm = Number(start_time_arr[1]);\r\n    if(!this.reportFormData.filetype){\r\n      this.reportFormData.filetype = 'csv'\r\n    }\r\n\r\n    this.reportFormData.startdate\r\n      = new Date(this.reportFormData.startdate).setHours(hh,mm,0,0);\r\n\r\n\r\n    return this.reportFormData;\r\n  }\r\n\r\n  click() {\r\n    console.log(this.f.value);\r\n    console.log(this.start_time);\r\n  }\r\n  privateKey;\r\n  async openFile(inputEl) {\r\n\r\n    try {\r\n      this.privateKey= await this.utilityService.readInputFileAsText(inputEl);\r\n    }catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  navigate(deliveryMode) {\r\n    this.router.navigate([], {queryParams: {deliveryMode}});\r\n    // deliveryMode='email'\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container px-5 pb-5 my-3 bg-white shadow-theme\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12 mb-4 py-3 d-flex align-items-center \\\" style=\\\"border-bottom: solid 2px #e0e0e0;\\\">\\r\\n      <a class=\\\"p-0 h4 cursor-pointer\\\" [routerLink]=\\\"['/core','reports']\\\" ><i class=\\\"fa fa-angle-left pr-2\\\"></i></a>\\r\\n      <a class=\\\"p-0 h4 \\\">Subscribe to Report</a>\\r\\n      <button class=\\\"btn btn-theme-primary-outline ml-auto mr-3\\\" routerLink=\\\"/core/reports\\\">Cancel</button>\\r\\n      <button class=\\\"btn btn-theme-primary\\\" *ngIf=\\\"!report_id\\\" (click)=\\\"updateReport(Primarytemplate, unsubscribeTemplate)\\\">Create</button>\\r\\n      <button class=\\\"btn btn-theme-primary\\\" *ngIf=\\\"report_id\\\" (click)=\\\"updateReport(Primarytemplate, unsubscribeTemplate)\\\">Update</button>\\r\\n      <i class=\\\"fa fa-trash cursor-pointer\\\" *ngIf=\\\"report_id\\\" (click)=\\\"showReportDeleteModel(reportDeleteTemplate)\\\"></i>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-5 pr-5 border-right\\\">\\r\\n      <!--<app-report-controls [reportFormData]=\\\"reportFormData\\\"></app-report-controls>-->\\r\\n      <app-report-controls ></app-report-controls>\\r\\n    </div>\\r\\n    <div class=\\\"col-7 d-flex\\\">\\r\\n      <app-report-display class=\\\"d-flex\\\" style=\\\"width: 100%\\\"></app-report-display>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<!--===================Templates Down===================-->\\r\\n<ng-template #Primarytemplate>\\r\\n  <div class=\\\"primary-modal\\\">\\r\\n    <div class = \\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\" >\\r\\n      <h4 class=\\\"modal-title\\\"> Subscribed successfully</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class =\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          You have subscribed to <strong>messages</strong> report for\\r\\n          <strong>{{reportFormData.botName}}</strong> bot in a <strong>{{reportFormData.filetype}}</strong> format,which is scheduled\\r\\n          <strong>{{reportFormData.frequency}}</strong> at <strong>{{reportFormData.startdate|date:'shortTime'}} </strong>via\\r\\n          <strong *ngIf=\\\"!reportFormData?.delivery[1].enabled\\\">{{reportFormData?.delivery[0]?.delivery_type}}</strong>\\r\\n          <strong *ngIf=\\\"reportFormData?.delivery[1].enabled\\\">{{reportFormData?.delivery[1]?.delivery_type}}</strong>\\r\\n        </div>\\r\\n        <div class  = \\\"col-md-12\\\">\\r\\n          <i class=\\\"fa fa-check-circle\\\" ></i>\\r\\n        </div>\\r\\n        <div class = \\\"col-md-12 light-text\\\">The next delivery is scheduled on</div>\\r\\n        <div class=\\\"col-md-12\\\"><strong>{{reportFormData.startdate|date:'mediumDate'}}</strong></div>\\r\\n        <div class=\\\"col-md-12\\\">{{reportFormData.startdate|date:'shortTime'}}</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!---->\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #reportDeleteTemplate>\\r\\n\\r\\n  <div class=\\\"danger-modal center-modal\\\">\\r\\n    <div class=\\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title mb-2\\\" style=\\\"display: flex;justify-content: start;\\\">Delete Report?</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body pt-0\\\">\\r\\n      <form #form=\\\"ngForm\\\">\\r\\n        <div class=\\\"text-center my-1\\\">\\r\\n          <p class=\\\"mb-3\\\">This will delete the report and all it’s instances from history\\r\\n            will also be removed. Are you sure you want to delete it?</p>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-theme-secondary-outline mr-2\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\r\\n        <button class=\\\" btn btn-theme-danger\\\" (click)=\\\"deleteReport()\\\">Delete</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #unsubscribeTemplate>\\r\\n  <div class=\\\"danger-modal\\\">\\r\\n    <div class = \\\"top-dec\\\"></div>\\r\\n    <div class=\\\"modal-header\\\" >\\r\\n      <h4 class=\\\"modal-title\\\"> Unsubscribed successfully</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class =\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 mb-2\\\">You have subscribed to <strong>messages</strong> report for\\r\\n          <strong>{{reportFormData.botName}}</strong> bot in a <strong>{{reportFormData.filetype}}</strong>\\r\\n          format,which is scheduled  <strong>{{reportFormData.frequency}}</strong> at <strong>\\r\\n            {{reportFormData.startdate|date:'shortTime'}} </strong>via\\r\\n          <strong *ngIf=\\\"!reportFormData?.delivery[1].enabled\\\">{{reportFormData?.delivery[0]?.delivery_type}}</strong>\\r\\n          <strong *ngIf=\\\"reportFormData?.delivery[1].enabled\\\">{{reportFormData?.delivery[1]?.delivery_type}}</strong>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-12\\\">You can subscribe to it later if you need from configure tab later</div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n<!---->\\r\\n\"","module.exports = \".h4 {\\n  font-size: 16px;\\n  line-height: 13px;\\n  font-weight: 700;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\\n.light-text {\\n  color: #9e9e9e; }\\n\\n.primary-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.primary-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #00abd3; }\\n\\n.primary-modal .modal-header {\\n    color: #474747; }\\n\\n.primary-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.primary-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\\n.primary-modal .modal-body .fa {\\n  font-size: 48px;\\n  color: #00abd3;\\n  padding: 10px 0px; }\\n\\n.danger-modal {\\n  background-color: white;\\n  margin-top: 0;\\n  border-radius: 4px;\\n  font-family: Helvetica; }\\n\\n.danger-modal .top-dec {\\n    border-top-left-radius: 4px;\\n    border-top-right-radius: 4px;\\n    height: 10px;\\n    background-color: #b14250; }\\n\\n.danger-modal .modal-header {\\n    color: #474747; }\\n\\n.danger-modal .modal-header .modal-title {\\n      width: 100%;\\n      font-size: 20px;\\n      text-align: center;\\n      color: #474747; }\\n\\n.danger-modal .modal-body {\\n    color: #474747;\\n    font-size: 12px;\\n    text-align: center;\\n    padding-bottom: 10px; }\\n\\n.fa-trash {\\n  font-size: 22px;\\n  color: #00abd3;\\n  padding-left: 5px; }\\n\"","import {Component, OnInit, ViewChild, TemplateRef} from '@angular/core';\r\nimport {ReportControlsComponent} from './report-controls/report-controls.component';\r\nimport {Select, Selector} from '@ngxs/store';\r\nimport {Observable} from 'rxjs';\r\nimport {ReportStateModel} from '../ngxs/reports.state';\r\nimport {IReportItem} from '../../../../interfaces/report';\r\n// import {validate} from 'codelyzer/walkerFactory/walkerFn';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ServerService} from '../../../server.service';\r\nimport {ConstantsService} from '../../../constants.service';\r\n// import * as moment from 'moment';\r\nimport {BsModalService} from 'ngx-bootstrap/modal';\r\nimport {BsModalRef} from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport {IHeaderData} from '../../../../interfaces/header-data';\r\nimport {ViewBotStateModel} from '../../view-bots/ngxs/view-bot.state';\r\nimport {IBot} from '../../interfaces/IBot';\r\nimport {UtilityService} from '../../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-report-details',\r\n  templateUrl: './report-details.component.html',\r\n  styleUrls: ['./report-details.component.scss']\r\n})\r\nexport class ReportDetailsComponent implements OnInit {\r\n\r\n  @ViewChild(ReportControlsComponent) reportControlsComponent: ReportControlsComponent;\r\n  @Select() reportItem$: Observable<ReportStateModel>;\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n  allBotList: IBot[];\r\n  reportFormData: IReportItem;\r\n  report_id: number;\r\n  modalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private utilityService: UtilityService,\r\n    private router: Router,\r\n    private serverService: ServerService,\r\n    private constantsService: ConstantsService,\r\n    private modalService: BsModalService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.report_id = Number(this.activatedRoute.snapshot.paramMap.get('_id'));\r\n    this.botlist$.subscribe((botListState)=>{\r\n      this.allBotList = botListState.allBotList;\r\n    })\r\n    // this.reportItem$.subscribe((value)=>{\r\n    //   this.reportFormData = value.formData;\r\n    // })\r\n  }\r\n  showReportDeleteModel(unsubscribeTemplate:TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(unsubscribeTemplate,{class: 'center-modal'});\r\n  }\r\n  deleteReport() {\r\n    let deleteReportUrl = this.constantsService.getReportDeleteUrl(this.report_id);\r\n    this.serverService.makeDeleteReq({url:deleteReportUrl})\r\n      .subscribe(()=>{\r\n        this.utilityService.showSuccessToaster(\"Report deleted\");\r\n        this.modalRef.hide();\r\n        this.router.navigate(['/core/reports']);\r\n      });\r\n  }\r\n\r\n  updateReport(subscribeTemplate: TemplateRef<any>, unsubscribeTemplate:TemplateRef<any>) {\r\n    //\r\n    this.reportFormData = JSON.parse(JSON.stringify(this.reportControlsComponent.getReportControlFormData()));\r\n    // let timeNow = (new Date()).toString();\r\n    let _id_str = this.activatedRoute.snapshot.paramMap.get('_id');\r\n    this.reportFormData.id = _id_str? Number(_id_str):null;\r\n    this.reportFormData.startdate = (new Date(this.reportFormData.startdate)).getTime();\r\n\r\n    this.reportFormData.delivery = <any>[{\r\n      ...this.reportFormData.delivery['sftp'],\r\n      delivery_type: 'sftp'\r\n    },\r\n      {\r\n        ...this.reportFormData.delivery['email'],\r\n        delivery_type: 'email'\r\n      }\r\n    ];\r\n\r\n    this.reportFormData.updated_at = new Date().toISOString();\r\n    let url;\r\n\r\n    this.report_id ?\r\n      url = this.constantsService.getSaveReportsEditInfo(this.reportFormData.id)\r\n      : url = this.constantsService.getCreateReportUrl();\r\n    let body = {...this.reportFormData};\r\n    delete body.created_at;\r\n    delete body.updated_at;\r\n    delete body.botName;\r\n    // delete body.id;\r\n    // body.isactive = true;\r\n    body.reporttype_id = 1;\r\n    body.bot_id = Number(body.bot_id);\r\n    // delete body.delivery;\r\n    // delete body.startdate;/*TODO: temporary; since date is not working*/\r\n    if (body.id) {\r\n      //\r\n      this.serverService.makePutReq({url, body})\r\n        .subscribe((value:IReportItem) => {\r\n          if(value.isactive)\r\n          this.modalRef = this.modalService.show(subscribeTemplate, {class: 'modal-md'});\r\n          else {\r\n            this.modalRef = this.modalService.show(unsubscribeTemplate, {class: 'modal-md'});\r\n          }\r\n        });\r\n    }else {\r\n      delete body.id;\r\n      let report_bot:IBot = this.allBotList.find((bot)=>bot.id==body.bot_id);\r\n      let headerData:IHeaderData = {\"bot-access-token\": report_bot.bot_access_token};\r\n      this.serverService.makePostReq({url, body, headerData})\r\n        .subscribe((value:IReportItem) => {\r\n          this.router.navigate([`core/reports/edit/${value.id}`]);\r\n          this.modalRef = this.modalService.show(subscribeTemplate, {class: 'modal-md'});\r\n        });\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"row mt-3\\\">-->\\r\\n  <!--<div class=\\\"col-12 my-2 text-report d-flex\\\">-->\\r\\n    <!--<span>Message:</span>-->\\r\\n    <!--<span>This report consists the raw data of all the messages exchanged by user and the bot with the fields of transaction ID, message sent by, date and time.</span>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"col-12 my-3 text-report d-flex justify-content-between\\\">-->\\r\\n    <!--<span>Preview</span>-->\\r\\n    <!--<div style=\\\"color: #0291b2\\\">-->\\r\\n      <!--<span class=\\\"pr-3\\\"><i class=\\\"fa fa-download pr-1\\\"></i>Download</span>-->\\r\\n      <!--<span><i class=\\\"fa fa-link pr-1\\\"></i>Copy Link</span>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n\\r\\n  <!--<div class=\\\"col-12\\\">-->\\r\\n    <!--<table class=\\\"\\\" style=\\\"width: 100%!important;\\\">-->\\r\\n      <!--<thead class=\\\"border-bottom-custom\\\">-->\\r\\n      <!--<tr>-->\\r\\n        <!--<th scope=\\\"col\\\">Transaction Id</th>-->\\r\\n        <!--<th scope=\\\"col\\\">Message</th>-->\\r\\n        <!--<th scope=\\\"col\\\">Sent By</th>-->\\r\\n        <!--<th scope=\\\"col\\\">Detail</th>-->\\r\\n      <!--</tr>-->\\r\\n      <!--</thead>-->\\r\\n      <!--<tbody>-->\\r\\n      <!--<tr>-->\\r\\n        <!--<td>1</td>-->\\r\\n        <!--<td class=\\\"text-left\\\">Hey, the temperature in hyderabad is 24C. You can go out and explore the city</td>-->\\r\\n        <!--<td class=\\\"text\\\">hello</td>-->\\r\\n      <!--</tr>-->\\r\\n      <!--</tbody>-->\\r\\n    <!--</table>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\\r\\n<div class=\\\"row\\\" style=\\\"width: 100%\\\">\\r\\n  <div class=\\\"col-12 d-flex justify-content-center align-items-center\\\">\\r\\n    <span class=\\\"text-muted\\\">No preview Available</span>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".text-report {\\n  font-size: 11px;\\n  line-height: 13px;\\n  font-weight: 300;\\n  color: #474747;\\n  font-family: \\\"Helvetica\\\", sans-serif; }\\n\\ntable th {\\n  width: 96px;\\n  height: 18px;\\n  font-family: Helvetica;\\n  font-size: 13px;\\n  font-weight: bold;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1.38;\\n  letter-spacing: 0.4px;\\n  color: #474747; }\\n\\ntable td {\\n  width: 181px;\\n  height: 14px;\\n  font-family: Helvetica;\\n  font-size: 11px;\\n  font-weight: normal;\\n  font-style: normal;\\n  font-stretch: normal;\\n  line-height: 1.27;\\n  letter-spacing: normal;\\n  color: #474747; }\\n\\ntable .border-bottom-custom {\\n  border-bottom: solid 2px #e0e0e0 !important; }\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-report-display',\r\n  templateUrl: './report-display.component.html',\r\n  styleUrls: ['./report-display.component.scss']\r\n})\r\nexport class ReportDisplayComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row mx-0  mt-2 pb-5 bg-white shadow-theme\\\">\\r\\n  <div class=\\\"col-12 py-2 border-bottom\\\">\\r\\n    <div class=\\\"pl-2 font-weight-bold\\\" style=\\\"font-size: 20px; color: #474747\\\">Reports</div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <ul class=\\\"nav nav-tabs my-2\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             [routerLink]=\\\"['/core/reports']\\\"\\r\\n             [queryParams]=\\\"{activeTab:'configure'}\\\"\\r\\n             (click)=\\\"tabClicked('configure')\\\"\\r\\n             [ngClass]=\\\"{'active' : activeTab ==='configure'}\\\"><strong>Configure</strong></a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\"\\r\\n             [routerLink]=\\\"['/core/reports']\\\"\\r\\n             [queryParams]=\\\"{activeTab:'history'}\\\"\\r\\n             (click)=\\\"tabClicked('history')\\\"\\r\\n             [ngClass]=\\\"{'active' : activeTab ==='history'}\\\"><strong>History</strong></a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n<!---->\\r\\n  <div class=\\\"col-12\\\" [hidden]=\\\"activeTab==='history'\\\">\\r\\n    <div class=\\\"col-12 d-flex justify-content-end pb-2\\\">\\r\\n      <button class=\\\"btn btn-theme-primary\\\" (click)=\\\"navigateTocreateNewReport()\\\">New Report</button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <app-smart-table\\r\\n        [data]=\\\"reportSmartTableData\\\"\\r\\n        (rowClicked$)=\\\"goToReportEditComponent($event)\\\"\\r\\n        [totalRecords]=\\\"totalReportRecords\\\"\\r\\n        (pageChanged$)=\\\"reportTablePageChanged($event)\\\"\\r\\n        [settings]=\\\"SMART_TABLE_REPORTS_SETTING\\\">\\r\\n      </app-smart-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-12 mt-2\\\" [hidden]=\\\"activeTab==='configure'\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n      <app-smart-table\\r\\n        [data]=\\\"reportHistorySmartTableData\\\"\\r\\n        (pageChanged$)=\\\"reportHistoryTablePageChanged($event)\\\"\\r\\n        [totalRecords]=\\\"totalReportRecords\\\"\\r\\n        (customActionEvents)=\\\"customActionEventsTriggeredInSessionsTable($event)\\\"\\r\\n        [settings]=\\\"SMART_TABLE_REPORT_HISTORY_SETTING\\\"></app-smart-table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--<p>{{reportSmartTableData|json}}</p>-->\\r\\n\"","module.exports = \".active {\\n  border-color: white !important;\\n  border-bottom: 2px solid #00abd3 !important; }\\n\\na {\\n  text-decoration: none !important;\\n  font-size: 13px;\\n  color: black; }\\n\\ninput {\\n  width: 100%; }\\n\\n/*todo: there is an issue with centering text*/\\n\\n.table td {\\n  text-align: center; }\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ConstantsService} from '../../constants.service';\r\nimport {ServerService} from '../../server.service';\r\nimport {\r\n  IReportList,\r\n  IReportHistory,\r\n  IReportTypeItem,\r\n  ISmartTableReportDataItem,\r\n  ISmartTableReportHisoryDataItem, IReportHistoryItem\r\n} from '../../../interfaces/report';\r\nimport {ObjectArrayCrudService} from '../../object-array-crud.service';\r\nimport {Select, Store} from '@ngxs/store';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {ViewBotStateModel} from '../view-bots/ngxs/view-bot.state';\r\nimport {IBot} from '../interfaces/IBot';\r\nimport {SmartTableSettingsService} from '../../smart-table-settings.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TempVariableService} from '../../temp-variable.service';\r\nimport {IHeaderData} from '../../../interfaces/header-data';\r\nimport {SetCurrentEditedReportAction} from './ngxs/reports.action';\r\nimport {DatePipe} from '@angular/common';\r\nimport {ISessionItem} from '../../../interfaces/sessions';\r\nimport {UtilityService} from '../../utility.service';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit, OnDestroy {\r\n\r\n  reportSmartTableData: ISmartTableReportDataItem[] = [];\r\n  reportHistorySmartTableData: ISmartTableReportHisoryDataItem[] = [];\r\n  SMART_TABLE_REPORTS_SETTING = this.smartTableSettingsService.SMART_TABLE_REPORTS_SETTING;\r\n  SMART_TABLE_REPORT_HISTORY_SETTING = this.smartTableSettingsService.SMART_TABLE_REPORTS_HISTORY_SETTING;\r\n\r\n  @Select() botlist$: Observable<ViewBotStateModel>;\r\n\r\n  constructor(\r\n    private constantsService: ConstantsService,\r\n    private serverService: ServerService,\r\n    private objectArrayCrudService: ObjectArrayCrudService,\r\n    private smartTableSettingsService: SmartTableSettingsService,\r\n    private tempVariableService: TempVariableService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private utilityService: UtilityService,\r\n    private store: Store,\r\n  ) {\r\n  }\r\n\r\n  activeTab: string = 'configure';\r\n  totalReportRecords: number;\r\n  totalHistoryReportRecords: number;\r\n  reportTypes;\r\n  botlist$_sub:Subscription;\r\n\r\n  ngOnInit() {\r\n    this.activeTab = this.activatedRoute.snapshot.queryParamMap.get('activeTab') || this.activeTab;\r\n    let reportTypeUrl = this.constantsService.geReportTypesUrl();\r\n    this.serverService.makeGetReq<{ meta: any, objects: IReportTypeItem[] }>({url: reportTypeUrl})\r\n      .subscribe((reportTypes) => {\r\n        this.reportTypes = reportTypes;\r\n        this.loadReports(10, 0);\r\n        this.loadReportHistory(10, 0);\r\n\r\n      });\r\n  }\r\n\r\n  loadReportHistory(limit: number, offset: number) {\r\n\r\n    let reportHistoryUrl = this.constantsService.getReportHistoryUrl(limit, offset);\r\n    this.serverService.makeGetReq<IReportHistory>({url: reportHistoryUrl})\r\n      .subscribe((reportHistory: IReportHistory) => {\r\n        this.totalHistoryReportRecords = reportHistory.meta.total_count;\r\n        /*Making reportItem$ history data*/\r\n        reportHistory.objects.forEach((reportHistoryItem:IReportHistoryItem) => {\r\n          this.botlist$.subscribe((botList) => {\r\n            let listOfAllBots = botList.allBotList;\r\n            this.reportHistorySmartTableData.push({\r\n              ...reportHistoryItem,\r\n              bot: this.objectArrayCrudService.getObjectItemByKeyValuePair(listOfAllBots, {id: reportHistoryItem.bot_id}).name,\r\n              name: this.objectArrayCrudService.getObjectItemByKeyValuePair(this.reportTypes.objects, {id: reportHistoryItem.reporttype_id}).name,\r\n              created_at: reportHistoryItem.created_at\r\n            });\r\n            this.reportHistorySmartTableData = [...this.reportHistorySmartTableData];\r\n\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  reportHistoryTablePageChanged(page){\r\n    this.reportHistorySmartTableData = [];\r\n    this.loadReportHistory(10,(page-1)*10 );\r\n  }\r\n  customActionEventsTriggeredInSessionsTable(smartTableCustomEventData: { action: string, data: IReportHistoryItem, source: any }){\r\n\r\n    let url = this.constantsService.getDownloadReportHistoryByIdUrl(smartTableCustomEventData.data.id);\r\n    this.serverService.makeGetReqToDownloadFiles({url})\r\n      .subscribe((value:any)=>{\r\n\r\n        /*To download the blob: https://stackoverflow.com/questions/19327749/javascript-blob-filename-without-link*/\r\n         var fileName = \"report_history_for_bot_id_\"+smartTableCustomEventData.data.bot_id + \".csv\";\r\n        this.utilityService.downloadText(value,fileName);\r\n        // var saveData = (function () {\r\n        //   var a:any = document.createElement(\"a\");\r\n        //   document.body.appendChild(a);\r\n        //   a.style = \"display: none\";\r\n        //   return function (data, fileName) {\r\n        //     var blob = new Blob([value], {type: \"octet/stream\"}),\r\n        //       url = window.URL.createObjectURL(blob);\r\n        //     a.href = url;\r\n        //     a.download = fileName;\r\n        //     a.click();\r\n        //     window.URL.revokeObjectURL(url);\r\n        //   };\r\n        // }());\r\n        //\r\n        // // var data = { x: 42, s: \"hello, world\", d: new Date() },\r\n        //\r\n        // saveData(null, fileName);\r\n        // console.log(value);\r\n        // this.utilityService.downloadArrayAsCSV(value, \"asdsad\");\r\n      });\r\n  }\r\n\r\n  loadReports(limit: number, offset: number) {\r\n    let reportUrl = this.constantsService.getReportUrl(limit, offset);\r\n    this.serverService.makeGetReq<IReportList>({url: reportUrl})\r\n      .subscribe((results) => {\r\n        this.totalReportRecords = results.meta.total_count;\r\n        /*Making reportItem$ data*/\r\n        results.objects.forEach(report => {\r\n          this.botlist$_sub = this.botlist$.subscribe((value) => {\r\n            let listOfAllBots = value.allBotList;\r\n            try {\r\n              this.reportSmartTableData.push({\r\n                ...report,\r\n                bot: this.objectArrayCrudService.getObjectItemByKeyValuePair(listOfAllBots, {id: report.bot_id}).name,\r\n                id: report.id,\r\n                name: this.objectArrayCrudService.getObjectItemByKeyValuePair(this.reportTypes.objects, {id: report.reporttype_id}).name,\r\n                frequency: report.frequency,\r\n                last_jobId: report.last_job_id,\r\n                nextreportgenerated: (new Date(report.nextreportgenerated).toDateString()),\r\n                isactive: report.isactive\r\n              });\r\n            } catch (e) {\r\n              console.log(e);\r\n              // this.utilityService.showErrorToaster(`Can't show the report for botid: ${report.bot_id}. This bot is either deleted or your access maybe been revoked.`,5 );\r\n            }\r\n            this.reportSmartTableData = [\r\n              ...this.reportSmartTableData\r\n            ];\r\n          });\r\n        });\r\n      });\r\n    ;\r\n  }\r\n\r\n  reportTablePageChanged(page) {\r\n    this.reportSmartTableData = [];\r\n    this.loadReports(10,(page-1)*10);\r\n  }\r\n\r\n  tabClicked(activeTab: string) {\r\n    this.activeTab = activeTab;\r\n  }\r\n\r\n  goToReportEditComponent(eventData: any) {\r\n    // ;\r\n    this.store.dispatch(new SetCurrentEditedReportAction({reportItem: eventData.data}));\r\n    this.tempVariableService.reportRowClicked = eventData.data;\r\n    this.router.navigate(['/core', 'reports', 'edit', eventData.data.id]);\r\n  }\r\n\r\n  navigateTocreateNewReport() {\r\n    this.router.navigate(['core', 'reports', 'create']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.botlist$_sub && this.botlist$_sub.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<p class=\\\"text-muted d-flex justify-content-center mb-0\\\" style=\\\"font-size: 12px\\\">\\r\\n  Ⓒ 2018 IMImobile   |   Version 2.0.0\\r\\n</p>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div>-->\\r\\n  <!--<div class='wrapper'>-->\\r\\n    <!--<div class='container' [dragula]='\\\"first-bag\\\"' [dragulaOptions]=\\\"options\\\" [dragulaModel]='items1'>-->\\r\\n      <!--<div *ngFor=\\\"let i of items1\\\">You can move these elements between these two containers</div>-->\\r\\n    <!--</div>-->\\r\\n\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\\r\\n\\r\\n<!--<div class=\\\"container\\\">-->\\r\\n  <!--<div class=\\\"row\\\">-->\\r\\n    <!--<div class=\\\"col-6\\\"></div>-->\\r\\n    <!--<div class=\\\"col-6\\\">-->\\r\\n\\r\\n      <!--<div class='container1' [dragula]='\\\"first-bag\\\"' [dragulaOptions]=\\\"options\\\" [dragulaModel]='items2'>-->\\r\\n        <!--<div *ngFor=\\\"let i of items2\\\">This is the default use case. You only need to specify the containers you want to use</div>-->\\r\\n      <!--</div>-->\\r\\n    <!--</div>-->\\r\\n  <!--</div>-->\\r\\n<!--</div>-->\\r\\n\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {DragulaService} from 'ng2-dragula';\r\n\r\n@Component({\r\n  selector: 'app-pipeline-test',\r\n  templateUrl: './pipeline-test.component.html',\r\n  styleUrls: ['./pipeline-test.component.scss']\r\n})\r\nexport class PipelineTestComponent implements OnInit {\r\n  constructor(private dragulaService: DragulaService) {\r\n    // dragulaService.setOptions('third-bag', {\r\n    //   removeOnSpill: true\r\n    // });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  items1=[1,2,3,4,5,5,3,6]\r\n  items2=[0,0,9,0,9,0]\r\n\r\n  options: any = {\r\n    removeOnSpill: true\r\n  }\r\n\r\n  click(){\r\n    console.log(this.items1, this.items2);\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Directive({\r\n  selector: '[appRouterQueryParamActive]'\r\n})\r\nexport class RouterFragmentActiveDirective implements OnInit{\r\n\r\n  tabParamValue:string;\r\n  classList:DOMTokenList;\r\n  @Input() set appRouterQueryParamActive(tabParamValue){\r\n    this.tabParamValue =tabParamValue;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.queryParamMap.subscribe((paramMap)=>{\r\n      let tabParamValue:string;\r\n      if(paramMap.get('tab') === this.tabParamValue) this.classList.add('tab-active');\r\n      else{\r\n        this.classList.remove('tab-active')\r\n      }\r\n    });\r\n  }\r\n\r\n  constructor(private element: ElementRef, private activatedRoute:ActivatedRoute) {\r\n    this.classList = this.element.nativeElement.classList;\r\n  }\r\n\r\n}\r\n","import {Directive, ElementRef, Renderer} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[scroller]',\r\n})\r\nexport class ScrollerDirective {\r\n  constructor(private elRef: ElementRef, private renderer: Renderer) {\r\n    let lastScrollTop = -1;\r\n    renderer.listen(elRef.nativeElement, 'wheel', (e) => {\r\n\r\n      if (elRef.nativeElement.scrollTop == lastScrollTop && e.deltaY > 0) {\r\n        e = e || window.event;\r\n        if (e.preventDefault)\r\n          e.preventDefault();\r\n        e.returnValue = false;\r\n      }\r\n      else if (elRef.nativeElement.scrollTop == 0) {\r\n        lastScrollTop = -1;\r\n      }\r\n      else {\r\n        lastScrollTop = elRef.nativeElement.scrollTop;\r\n      }\r\n\r\n\r\n    })\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {IReportList} from '../interfaces/report';\r\nimport {DatePipe} from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SmartTableSettingsService {\r\n\r\n  constructor(    private datePipe: DatePipe\r\n  ) {\r\n  }\r\n\r\n  readonly SMART_TABLE_REPORTS_SETTING = {\r\n\r\n    columns: {\r\n      bot: {\r\n        title: 'Bot'\r\n      },\r\n      name: {\r\n        title: 'Report Type'\r\n      },\r\n      frequency: {\r\n        title: 'Frequency'\r\n      },\r\n      last_jobId: {\r\n        title: 'Last job run'\r\n      },\r\n      nextreportgenerated: {\r\n        title: 'Next scheduled date'\r\n      },\r\n      isactive: {\r\n        title: 'Active'\r\n      },\r\n    },\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false\r\n    },\r\n    pager: {\r\n      display: false,\r\n      perPage: 10\r\n    }\r\n  };\r\n  readonly SMART_TABLE_REPORTS_HISTORY_SETTING = {\r\n\r\n    columns: {\r\n      bot: {\r\n        title: 'Bot'\r\n      },\r\n      name: {\r\n        title: 'Report Type'\r\n      },\r\n      created_at: {\r\n        title: 'Generated Date',\r\n        valuePrepareFunction: (date) => {\r\n          var raw = new Date(date);\r\n\r\n          var formatted = this.datePipe.transform(raw, 'fullDate');\r\n          return formatted;\r\n        }\r\n      }\r\n    },\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      delete: false,\r\n      position: 'right',\r\n      custom: [\r\n        {name: 'download', title: `<i class=\"fa fa-download text-dark\"></i>`}\r\n      ],\r\n    },\r\n    pager: {\r\n      display: false,\r\n      perPage: 10\r\n    },\r\n  };\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TempVariableService {\r\n\r\n  public reportRowClicked;\r\n  constructor() { }\r\n}\r\n","module.exports = \"<p>\\r\\n  {{_bot.name}}\\r\\n</p>\\r\\n\"","module.exports = \"\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {IBot} from '../core/interfaces/IBot';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss']\r\n})\r\nexport class TestComponent implements OnInit {\r\n\r\n  constructor(private router:Router) { }\r\n  _bot: IBot;\r\n  @Input() set bot(botData: IBot) {\r\n    // ;\r\n    this._bot = botData;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}